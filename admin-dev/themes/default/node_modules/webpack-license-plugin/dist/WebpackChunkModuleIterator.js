"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var WebpackChunkModuleIterator = /** @class */ (function () {
    function WebpackChunkModuleIterator() {
    }
    WebpackChunkModuleIterator.prototype.iterateModules = function (compilation, chunk, callback) {
        var e_1, _a, e_2, _b, e_3, _c;
        if (typeof compilation.chunkGraph !== 'undefined') {
            try {
                for (var _d = __values(compilation.chunkGraph.getChunkModulesIterable(chunk)), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var module_1 = _e.value;
                    callback(module_1);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        else if (typeof chunk.modulesIterable !== 'undefined') {
            try {
                for (var _f = __values(chunk.modulesIterable), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var module_2 = _g.value;
                    // @ts-ignore
                    callback(module_2);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_2) throw e_2.error; }
            }
            // } else if (typeof chunk.getModules === 'function') {
            //   chunk.getModules().forEach(callback)
        }
        else if (typeof chunk.forEachModule === 'function') {
            chunk.forEachModule(callback);
        }
        else if (Array.isArray(chunk.modules)) {
            chunk.modules.forEach(function (module) { return callback(module); });
        }
        if (typeof compilation.chunkGraph !== 'undefined') {
            try {
                for (var _h = __values(compilation.chunkGraph.getChunkEntryModulesIterable(chunk)), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var module_3 = _j.value;
                    callback(module_3);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        else if (chunk.entryModule) {
            // @ts-ignore
            callback(chunk.entryModule);
        }
    };
    return WebpackChunkModuleIterator;
}());
exports.default = WebpackChunkModuleIterator;
//# sourceMappingURL=WebpackChunkModuleIterator.js.map