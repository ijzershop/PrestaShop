/*! For license information please see category.bundle.js.LICENSE.txt */
(()=>{var e={4110:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=window.$;t.default=function(e,t){n.post(e).then((function(){return window.location.assign(t)}))}},43284:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=l(n(99663)),i=l(n(22600)),o=l(n(72100)),a=n(76544),s=l(n(25121));function l(e){return e&&e.__esModule?e:{default:e}}var c=window.$,u=function(){function e(t,n){if((0,r.default)(this,e),0!==c(t.container).length){if(this.originalUrl=n,this.useMultiLang=void 0!==t.multiLanguageInput||void 0!==t.multiLanguageField,this.useMultiLang){var i=[];t.multiLanguageInput&&i.push(t.multiLanguageInput),t.multiLanguageField&&i.push(t.multiLanguageField),this.multiLangSelector=i.join(","),this.attachMultiLangEvents()}this.data={url:n,title:"",description:""},this.vm=new o.default({el:t.container,template:'<serp ref="serp" :url="url" :title="title" :description="description" />',components:{serp:s.default},data:this.data}),this.initializeSelectors(t),this.attachInputEvents()}}return(0,i.default)(e,[{key:"attachMultiLangEvents",value:function(e){var t=this;c("body").on("click",e,(function(){t.checkTitle(),t.checkDesc(),t.checkUrl()})),a.EventEmitter.on("languageSelected",(function(){t.checkTitle(),t.checkDesc(),t.checkUrl()}))}},{key:"initializeSelectors",value:function(e){this.defaultTitle=c(e.defaultTitle),this.watchedTitle=c(e.watchedTitle),this.defaultDescription=c(e.defaultDescription),this.watchedDescription=c(e.watchedDescription),this.watchedMetaUrl=c(e.watchedMetaUrl)}},{key:"attachInputEvents",value:function(){var e=this;c(this.defaultTitle).on("keyup change",(function(){return e.checkTitle()})),c(this.watchedTitle).on("keyup change",(function(){return e.checkTitle()})),c(this.defaultDescription).on("keyup change",(function(){return e.checkDesc()})),c(this.watchedDescription).on("keyup change",(function(){return e.checkDesc()})),this.watchedMetaUrl.on("keyup change",(function(){return e.checkUrl()})),this.checkTitle(),this.checkDesc(),this.checkUrl()}},{key:"setTitle",value:function(e){this.data.title=e}},{key:"setDescription",value:function(e){this.data.description=e}},{key:"setUrl",value:function(e){this.data.url=this.originalUrl.replace("{friendy-url}",e),this.data.url=this.data.url.replace("{friendly-url}",e)}},{key:"checkTitle",value:function(){var e=this.defaultTitle,t=this.watchedTitle;this.useMultiLang&&(t=t.closest(this.multiLangSelector).find("input"),e=e.closest(this.multiLangSelector).find("input"));var n=t.length?t.val():"",r=e.length?e.val():"";this.setTitle(""===n?r:n),this.checkUrl()}},{key:"checkDesc",value:function(){var e=this.watchedDescription,t=this.defaultDescription;this.useMultiLang&&(e=e.closest(this.multiLangSelector).find(this.watchedDescription.is("input")?"input":"textarea"),t=t.closest(this.multiLangSelector).find(this.defaultDescription.is("input")?"input":"textarea"));var n=e.length?e.val().innerText||e.val():"",r=t.length?c(t.val()).text()||t.val():"";this.setDescription(""===n?r:n)}},{key:"checkUrl",value:function(){var e=this.watchedMetaUrl;this.useMultiLang&&(e=e.closest(this.multiLangSelector).find("input")),this.setUrl(e.val())}}]),e}();t.default=u},61353:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(t){(0,r.default)(this,e),this.selector=".ps-sortable-column",this.columns=a(t).find(this.selector)}return(0,i.default)(e,[{key:"attach",value:function(){var e=this;this.columns.on("click",(function(t){var n=a(t.delegateTarget);e.sortByColumn(n,e.getToggledSortDirection(n))}))}},{key:"sortBy",value:function(e,t){var n=this.columns.is('[data-sort-col-name="'+e+'"]');if(!n)throw new Error('Cannot sort by "'+e+'": invalid column');this.sortByColumn(n,t)}},{key:"sortByColumn",value:function(e,t){window.location=this.getUrl(e.data("sortColName"),"desc"===t?"desc":"asc",e.data("sortPrefix"))}},{key:"getToggledSortDirection",value:function(e){return"asc"===e.data("sortDirection")?"desc":"asc"}},{key:"getUrl",value:function(e,t,n){var r=new URL(window.location.href),i=r.searchParams;return n?(i.set(n+"[orderBy]",e),i.set(n+"[sortOrder]",t)):(i.set("orderBy",e),i.set("sortOrder",t)),r.toString()}}]),e}();t.default=s},34684:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){var t=this;(0,r.default)(this,e),a(document).on("change",".js-choice-table-select-all",(function(e){t.handleSelectAll(e)}))}return(0,i.default)(e,[{key:"handleSelectAll",value:function(e){var t=a(e.target),n=t.is(":checked");t.closest("table").find("tbody input:checkbox").prop("checked",n)}}]),e}();t.default=s},76544:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var r,i=(r=n(17187))&&r.__esModule?r:{default:r},o=t.EventEmitter=new i.default;t.default=o},29145:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=(r=n(99663))&&r.__esModule?r:{default:r},o=window.$;t.default=function e(){(0,i.default)(this,e),o(document).on("click",".js-form-submit-btn",(function(e){e.preventDefault();var t=o(this);if(!t.data("form-confirm-message")||!1!==window.confirm(t.data("form-confirm-message"))){var n="POST",r=null;if(t.data("method")){var i=t.data("method"),a=["GET","POST"].includes(i);n=a?i:"POST",a||(r=o("<input>",{type:"_hidden",name:"_method",value:i}))}var s=o("<form>",{action:t.data("form-submit-url"),method:n});r&&s.append(r),t.data("form-csrf-token")&&s.append(o("<input>",{type:"_hidden",name:"_csrf_token",value:t.data("form-csrf-token")})),s.appendTo("body").submit()}}))}},19078:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(t){var n=this;return(0,r.default)(this,e),this.$container=a(t),this.$container.on("click",".js-input-wrapper",(function(e){var t=a(e.currentTarget);n.toggleChildTree(t)})),this.$container.on("click",".js-toggle-choice-tree-action",(function(e){var t=a(e.currentTarget);n.toggleTree(t)})),{enableAutoCheckChildren:function(){return n.enableAutoCheckChildren()},enableAllInputs:function(){return n.enableAllInputs()},disableAllInputs:function(){return n.disableAllInputs()}}}return(0,i.default)(e,[{key:"enableAutoCheckChildren",value:function(){this.$container.on("change",'input[type="checkbox"]',(function(e){var t=a(e.currentTarget);t.closest("li").find('ul input[type="checkbox"]').prop("checked",t.is(":checked"))}))}},{key:"enableAllInputs",value:function(){this.$container.find("input").removeAttr("disabled")}},{key:"disableAllInputs",value:function(){this.$container.find("input").attr("disabled","disabled")}},{key:"toggleChildTree",value:function(e){var t=e.closest("li");t.hasClass("expanded")?t.removeClass("expanded").addClass("collapsed"):t.hasClass("collapsed")&&t.removeClass("collapsed").addClass("expanded")}},{key:"toggleTree",value:function(e){var t=e.closest(".js-choice-tree-container"),n=e.data("action"),r={addClass:{expand:"expanded",collapse:"collapsed"},removeClass:{expand:"collapsed",collapse:"expanded"},nextAction:{expand:"collapse",collapse:"expand"},text:{expand:"collapsed-text",collapse:"expanded-text"},icon:{expand:"collapsed-icon",collapse:"expanded-icon"}};t.find("li").each((function(e,t){var i=a(t);i.hasClass(r.removeClass[n])&&i.removeClass(r.removeClass[n]).addClass(r.addClass[n])})),e.data("action",r.nextAction[n]),e.find(".material-icons").text(e.data(r.icon[n])),e.find(".js-toggle-text").text(e.data(r.text[n]))}}]),e}();t.default=s},85820:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=(r=n(99663))&&r.__esModule?r:{default:r},o=window.$;t.default=function e(){(0,i.default)(this,e),o(document).on("input",".js-recommended-length-input",(function(e){var t=o(e.currentTarget);o(t.data("recommended-length-counter")).find(".js-current-length").text(t.val().length)}))}},29573:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){var t=this;return(0,r.default)(this,e),{extend:function(e){return t.extend(e)}}}return(0,i.default)(e,[{key:"extend",value:function(e){e.getContainer().on("click",".js-delete-categories-bulk-action",(function(t){t.preventDefault();var n=a(t.currentTarget).data("categories-delete-url"),r=a("#"+e.getId()+"_grid_delete_categories_modal");r.modal("show"),r.on("click",".js-submit-delete-categories",(function(){var t=e.getContainer().find(".js-bulk-action-checkbox:checked"),i=a("#delete_categories_categories_to_delete");t.each((function(e,t){var n=a(t),r=i.data("prototype").replace(/__name__/g,n.val()),o=a(a.parseHTML(r)[0]);o.val(n.val()),i.append(o)}));var o=r.find("form");o.attr("action",n),o.submit()}))}))}}]),e}();t.default=s},9735:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){var t=this;return(0,r.default)(this,e),{extend:function(e){return t.extend(e)}}}return(0,i.default)(e,[{key:"extend",value:function(e){e.getContainer().on("click",".js-delete-category-row-action",(function(t){t.preventDefault();var n=a("#"+e.getId()+"_grid_delete_categories_modal");n.modal("show"),n.on("click",".js-submit-delete-categories",(function(){var e=a(t.currentTarget),r=e.data("category-id"),i=a("#delete_categories_categories_to_delete"),o=i.data("prototype").replace(/__name__/g,i.children().length),s=a(a.parseHTML(o)[0]);s.val(r),i.append(s);var l=n.find("form");l.attr("action",e.data("category-delete-url")),l.submit()}))}))}}]),e}();t.default=s},91781:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(99663)),i=a(n(22600)),o=a(n(68840));function a(e){return e&&e.__esModule?e:{default:e}}var s=window.$,l=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){var t=this;e.getContainer().on("click",".js-submit-row-action",(function(n){n.preventDefault();var r=s(n.currentTarget),i=r.data("confirmMessage"),o=r.data("title"),a=r.data("method");if(o)t.showConfirmModal(r,e,i,o,a);else{if(i.length&&!window.confirm(i))return;t.postForm(r,a)}}))}},{key:"postForm",value:function(e,t){var n=["GET","POST"].includes(t),r=s("<form>",{action:e.data("url"),method:n?t:"POST"}).appendTo("body");n||r.append(s("<input>",{type:"_hidden",name:"_method",value:t})),r.submit()}},{key:"showConfirmModal",value:function(e,t,n,r,i){var a=this,s=e.data("confirmButtonLabel"),l=e.data("closeButtonLabel"),c=e.data("confirmButtonClass");new o.default({id:t.getId()+"-grid-confirm-modal",confirmTitle:r,confirmMessage:n,confirmButtonLabel:s,closeButtonLabel:l,confirmButtonClass:c},(function(){return a.postForm(e,i)})).show()}}]),e}();t.default=l},5595:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){this.handleBulkActionCheckboxSelect(e),this.handleBulkActionSelectAllCheckbox(e)}},{key:"handleBulkActionSelectAllCheckbox",value:function(e){var t=this;e.getContainer().on("change",".js-bulk-action-select-all",(function(n){var r=a(n.currentTarget).is(":checked");r?t.enableBulkActionsBtn(e):t.disableBulkActionsBtn(e),e.getContainer().find(".js-bulk-action-checkbox").prop("checked",r)}))}},{key:"handleBulkActionCheckboxSelect",value:function(e){var t=this;e.getContainer().on("change",".js-bulk-action-checkbox",(function(){e.getContainer().find(".js-bulk-action-checkbox:checked").length>0?t.enableBulkActionsBtn(e):t.disableBulkActionsBtn(e)}))}},{key:"enableBulkActionsBtn",value:function(e){e.getContainer().find(".js-bulk-actions-btn").prop("disabled",!1)}},{key:"disableBulkActionsBtn",value:function(e){e.getContainer().find(".js-bulk-actions-btn").prop("disabled",!0)}}]),e}();t.default=s},29983:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}n(73867);var a=window.$,s=function(){function e(){var t=this;return(0,r.default)(this,e),{extend:function(e){return t.extend(e)}}}return(0,i.default)(e,[{key:"extend",value:function(e){var t=this;this.grid=e,this.addIdsToGridTableRows(),e.getContainer().find(".js-grid-table").tableDnD({dragHandle:".js-drag-handle",onDragClass:"dragging-row",onDragStart:function(){t.originalPositions=decodeURIComponent(a.tableDnD.serialize())},onDrop:function(e,n){return t.handleCategoryPositionChange(n)}})}},{key:"handleCategoryPositionChange",value:function(e){var t=decodeURIComponent(a.tableDnD.serialize()),n=this.originalPositions.indexOf(e.id)<t.indexOf(e.id)?1:0,r=a(e).find(".js-"+this.grid.getId()+"-position:first"),i=r.data("id"),o=r.data("id-parent"),s=r.data("position-update-url"),l=t.replace(new RegExp(this.grid.getId()+"_grid_table","g"),"positions"),c={id_category_parent:o,id_category_to_move:i,way:n};-1!==t.indexOf("_0&")&&(c.found_first=1),l+="&"+a.param(c),this.updateCategoryPosition(s,l)}},{key:"addIdsToGridTableRows",value:function(){this.grid.getContainer().find(".js-grid-table").find(".js-"+this.grid.getId()+"-position").each((function(e,t){var n=a(t),r=n.data("id"),i="tr_"+n.data("id-parent")+"_"+r+"_"+n.data("position");n.closest("tr").attr("id",i)}))}},{key:"updateCategoryIdsAndPositions",value:function(){this.grid.getContainer().find(".js-grid-table").find(".js-"+this.grid.getId()+"-position").each((function(e,t){var n=a(t),r=n.closest("tr"),i=n.data("pagination-offset"),o=i>0?e+i:e,s=r.attr("id");r.attr("id",s.replace(/_[0-9]$/g,"_"+o)),n.find(".js-position").text(o+1),n.data("position",o)}))}},{key:"updateCategoryPosition",value:function(e,t){var n=this;a.post({url:e,headers:{"cache-control":"no-cache"},data:t,dataType:"json"}).then((function(e){e.success?window.showSuccessMessage(e.message):window.showErrorMessage(e.message),n.updateCategoryIdsAndPositions()}))}}]),e}();t.default=s},51964:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){var t=this;return(0,r.default)(this,e),{extend:function(e){return t.extend(e)}}}return(0,i.default)(e,[{key:"extend",value:function(e){var t=this;e.getContainer().find(".js-grid-table").on("click",".ps-togglable-row",(function(e){var n=a(e.currentTarget);n.hasClass("ps-switch")||e.preventDefault(),a.post({url:n.data("toggle-url")}).then((function(e){if(e.status)return window.showSuccessMessage(e.message),void t.toggleButtonDisplay(n);window.showErrorMessage(e.message)})).catch((function(e){var t=e.responseJSON;window.showErrorMessage(t.message)}))}))}},{key:"toggleButtonDisplay",value:function(e){var t=e.hasClass("grid-toggler-icon-valid"),n=t?"grid-toggler-icon-not-valid":"grid-toggler-icon-valid",r=t?"grid-toggler-icon-valid":"grid-toggler-icon-not-valid",i=t?"clear":"check";e.removeClass(r),e.addClass(n),e.hasClass("material-icons")&&e.text(i)}}]),e}();t.default=s},2573:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){var t=this;e.getHeaderContainer().on("click",".js-common_show_query-grid-action",(function(){return t.onShowSqlQueryClick(e)})),e.getHeaderContainer().on("click",".js-common_export_sql_manager-grid-action",(function(){return t.onExportSqlManagerClick(e)}))}},{key:"onShowSqlQueryClick",value:function(e){var t=a("#"+e.getId()+"_common_show_query_modal_form");this.fillExportForm(t,e);var n=a("#"+e.getId()+"_grid_common_show_query_modal");n.modal("show"),n.on("click",".btn-sql-submit",(function(){return t.submit()}))}},{key:"onExportSqlManagerClick",value:function(e){var t=a("#"+e.getId()+"_common_show_query_modal_form");this.fillExportForm(t,e),t.submit()}},{key:"fillExportForm",value:function(e,t){var n=t.getContainer().find(".js-grid-table").data("query");e.find('textarea[name="sql"]').val(n),e.find('input[name="name"]').val(this.getNameFromBreadcrumb())}},{key:"getNameFromBreadcrumb",value:function(){var e=a(".header-toolbar").find(".breadcrumb-item"),t="";return e.each((function(e,n){var r=a(n),i=r.find("a").length>0?r.find("a").text():r.text();t.length>0&&(t=t.concat(" > ")),t=t.concat(i)})),t}}]),e}();t.default=s},96803:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(99663)),i=a(n(22600)),o=a(n(4110));function a(e){return e&&e.__esModule?e:{default:e}}var s=window.$,l=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){e.getContainer().on("click",".js-reset-search",(function(e){(0,o.default)(s(e.currentTarget).data("url"),s(e.currentTarget).data("redirect"))}))}}]),e}();t.default=l},91137:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){var t=e.getContainer().find(".column-filters");t.find(".grid-search-button").prop("disabled",!0),t.find("input:not(.js-bulk-action-select-all), select").on("input dp.change",(function(){t.find(".grid-search-button").prop("disabled",!1),t.find(".js-grid-reset-button").prop("hidden",!1)}))}}]),e}();t.default=a},58899:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){this.initRowLinks(e),this.initConfirmableActions(e)}},{key:"initConfirmableActions",value:function(e){e.getContainer().on("click",".js-link-row-action",(function(e){var t=a(e.currentTarget).data("confirm-message");t.length&&!window.confirm(t)&&e.preventDefault()}))}},{key:"initRowLinks",value:function(e){a("tr",e.getContainer()).each((function(){var e=a(this);a(".js-link-row-action[data-clickable-row=1]:first",e).each((function(){var t=a(this),n=t.closest("td"),r=a("td.clickable",e).not(n),i=!1;r.addClass("cursor-pointer").mousedown((function(){a(window).mousemove((function(){i=!0,a(window).unbind("mousemove")}))})),r.mouseup((function(){var e=i;if(i=!1,a(window).unbind("mousemove"),!e){var n=t.data("confirm-message");n.length&&!window.confirm(n)||(document.location=t.attr("href"))}}))}))}))}}]),e}();t.default=s},37758:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){e.getHeaderContainer().on("click",".js-common_refresh_list-grid-action",(function(){window.location.reload()}))}}]),e}();t.default=a},58630:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(99663)),i=a(n(22600)),o=a(n(61353));function a(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){var t=e.getContainer().find("table.table");new o.default(t).attach()}}]),e}();t.default=s},17868:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(99663)),i=a(n(22600)),o=a(n(68840));function a(e){return e&&e.__esModule?e:{default:e}}var s=window.$,l=function(){function e(){var t=this;return(0,r.default)(this,e),{extend:function(e){return t.extend(e)}}}return(0,i.default)(e,[{key:"extend",value:function(e){var t=this;e.getContainer().on("click",".js-bulk-action-submit-btn",(function(n){t.submit(n,e)}))}},{key:"submit",value:function(e,t){var n=s(e.currentTarget),r=n.data("confirm-message"),i=n.data("confirmTitle");void 0!==r&&r.length>0?void 0!==i?this.showConfirmModal(n,t,r,i):window.confirm(r)&&this.postForm(n,t):this.postForm(n,t)}},{key:"showConfirmModal",value:function(e,t,n,r){var i=this,a=e.data("confirmButtonLabel"),s=e.data("closeButtonLabel"),l=e.data("confirmButtonClass");new o.default({id:t.getId()+"-grid-confirm-modal",confirmTitle:r,confirmMessage:n,confirmButtonLabel:a,closeButtonLabel:s,confirmButtonClass:l},(function(){return i.postForm(e,t)})).show()}},{key:"postForm",value:function(e,t){var n=s("#"+t.getId()+"_filter_form");n.attr("action",e.data("form-url")),n.attr("method",e.data("form-method")),n.submit()}}]),e}();t.default=l},53277:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(t){(0,r.default)(this,e),this.id=t,this.$container=a("#"+this.id+"_grid")}return(0,i.default)(e,[{key:"getId",value:function(){return this.id}},{key:"getContainer",value:function(){return this.$container}},{key:"getHeaderContainer",value:function(){return this.$container.closest(".js-grid-panel").find(".js-grid-header")}},{key:"addExtension",value:function(e){e.extend(this)}}]),e}();t.default=s},68840:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=(r=n(85315))&&r.__esModule?r:{default:r};t.default=function(e,t,n){var r=this,a=e.id,s=e.closable;this.modal=function(e){var t,n=e.id,r=void 0===n?"confirm-modal":n,o=e.confirmTitle,a=e.confirmMessage,s=void 0===a?"":a,l=e.closeButtonLabel,c=void 0===l?"Close":l,u=e.confirmButtonLabel,f=void 0===u?"Accept":u,d=e.confirmButtonClass,p=void 0===d?"btn-primary":d,v=e.customButtons,h=void 0===v?[]:v,m={};return m.container=document.createElement("div"),m.container.classList.add("modal","fade"),m.container.id=r,m.dialog=document.createElement("div"),m.dialog.classList.add("modal-dialog"),m.content=document.createElement("div"),m.content.classList.add("modal-content"),m.header=document.createElement("div"),m.header.classList.add("modal-header"),o&&(m.title=document.createElement("h4"),m.title.classList.add("modal-title"),m.title.innerHTML=o),m.closeIcon=document.createElement("button"),m.closeIcon.classList.add("close"),m.closeIcon.setAttribute("type","button"),m.closeIcon.dataset.dismiss="modal",m.closeIcon.innerHTML="×",m.body=document.createElement("div"),m.body.classList.add("modal-body","text-left","font-weight-normal"),m.message=document.createElement("p"),m.message.classList.add("confirm-message"),m.message.innerHTML=s,m.footer=document.createElement("div"),m.footer.classList.add("modal-footer"),m.closeButton=document.createElement("button"),m.closeButton.setAttribute("type","button"),m.closeButton.classList.add("btn","btn-outline-secondary","btn-lg"),m.closeButton.dataset.dismiss="modal",m.closeButton.innerHTML=c,m.confirmButton=document.createElement("button"),m.confirmButton.setAttribute("type","button"),m.confirmButton.classList.add("btn",p,"btn-lg","btn-confirm-submit"),m.confirmButton.dataset.dismiss="modal",m.confirmButton.innerHTML=f,o?m.header.append(m.title,m.closeIcon):m.header.appendChild(m.closeIcon),m.body.appendChild(m.message),(t=m.footer).append.apply(t,[m.closeButton].concat((0,i.default)(h),[m.confirmButton])),m.content.append(m.header,m.body,m.footer),m.dialog.appendChild(m.content),m.container.appendChild(m.dialog),m}(e),this.$modal=o(this.modal.container),this.show=function(){r.$modal.modal()},this.modal.confirmButton.addEventListener("click",t),this.$modal.modal({backdrop:!!s||"static",keyboard:void 0===s||s,closable:void 0===s||s,show:!1}),this.$modal.on("hidden.bs.modal",(function(){document.querySelector("#"+a).remove(),n&&n()})),document.body.appendChild(this.modal.container)};var o=window.$},3010:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(){(0,r.default)(this,e)}return(0,i.default)(e,[{key:"extend",value:function(e){var t=e.getContainer();t.on("click",".js-remove-helper-block",(function(e){t.remove();var n=a(e.target),r=n.data("closeUrl"),i=n.data("cardName");r&&a.post(r,{close:1,name:i})}))}}]),e}();t.default=s},50204:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(99663)),i=o(n(22600));function o(e){return e&&e.__esModule?e:{default:e}}var a=window.$,s=function(){function e(t){(0,r.default)(this,e),this.id=t,this.$container=a("#"+this.id)}return(0,i.default)(e,[{key:"getContainer",value:function(){return this.$container}},{key:"addExtension",value:function(e){e.extend(this)}}]),e}();t.default=s},48473:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=window.$;t.default=function(e){var t=e.sourceElementSelector,r=e.destinationElementSelector,i=e.options,o=void 0===i?{eventName:"input"}:i;n(document).on(o.eventName,""+t,(function(e){n(r).val(window.str2url(n(e.currentTarget).val(),"UTF-8"))}))}},66313:(e,t)=>{"use strict";Object.defineProperty(t,"X",{value:!0}),t.Z={name:"Serp",props:{url:{type:String,default:"https://www.example.com/"},description:{type:String,default:""},title:{type:String,default:""}},computed:{displayedTitle:function(){return this.title.length>70?this.title.substring(0,70)+"...":this.title},displayedDescription:function(){return this.description.length>150?this.description.substring(0,150)+"...":this.description}}}},24043:(e,t,n)=>{e.exports={default:n(47185),__esModule:!0}},32242:(e,t,n)=>{e.exports={default:n(33391),__esModule:!0}},99663:(e,t)=>{"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},22600:(e,t,n)=>{"use strict";t.__esModule=!0;var r,i=(r=n(32242))&&r.__esModule?r:{default:r};t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,i.default)(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()},85315:(e,t,n)=>{"use strict";t.__esModule=!0;var r,i=(r=n(24043))&&r.__esModule?r:{default:r};t.default=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return(0,i.default)(e)}},47185:(e,t,n)=>{n(91867),n(2586),e.exports=n(34579).Array.from},33391:(e,t,n)=>{n(31477);var r=n(34579).Object;e.exports=function(e,t,n){return r.defineProperty(e,t,n)}},85663:e=>{e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},12159:(e,t,n)=>{var r=n(36727);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},57428:(e,t,n)=>{var r=n(7932),i=n(78728),o=n(16531);e.exports=function(e){return function(t,n,a){var s,l=r(t),c=i(l.length),u=o(a,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}}},14677:(e,t,n)=>{var r=n(32894),i=n(22939)("toStringTag"),o="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:o?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},32894:e=>{var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},34579:e=>{var t=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=t)},52445:(e,t,n)=>{"use strict";var r=n(4743),i=n(83101);e.exports=function(e,t,n){t in e?r.f(e,t,i(0,n)):e[t]=n}},19216:(e,t,n)=>{var r=n(85663);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},8333:e=>{e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},89666:(e,t,n)=>{e.exports=!n(7929)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},97467:(e,t,n)=>{var r=n(36727),i=n(33938).document,o=r(i)&&r(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},73338:e=>{e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},83856:(e,t,n)=>{var r=n(33938),i=n(34579),o=n(19216),a=n(41818),s=n(27069),l=function(e,t,n){var c,u,f,d=e&l.F,p=e&l.G,v=e&l.S,h=e&l.P,m=e&l.B,g=e&l.W,y=p?i:i[t]||(i[t]={}),b=y.prototype,_=p?r:v?r[t]:(r[t]||{}).prototype;for(c in p&&(n=t),n)(u=!d&&_&&void 0!==_[c])&&s(y,c)||(f=u?_[c]:n[c],y[c]=p&&"function"!=typeof _[c]?n[c]:m&&u?o(f,r):g&&_[c]==f?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):h&&"function"==typeof f?o(Function.call,f):f,h&&((y.virtual||(y.virtual={}))[c]=f,e&l.R&&b&&!b[c]&&a(b,c,f)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},7929:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},33938:e=>{var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},27069:e=>{var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},41818:(e,t,n)=>{var r=n(4743),i=n(83101);e.exports=n(89666)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},54881:(e,t,n)=>{var r=n(33938).document;e.exports=r&&r.documentElement},33758:(e,t,n)=>{e.exports=!n(89666)&&!n(7929)((function(){return 7!=Object.defineProperty(n(97467)("div"),"a",{get:function(){return 7}}).a}))},50799:(e,t,n)=>{var r=n(32894);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},45991:(e,t,n)=>{var r=n(15449),i=n(22939)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||o[i]===e)}},36727:e=>{e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},95602:(e,t,n)=>{var r=n(12159);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&r(o.call(e)),t}}},33945:(e,t,n)=>{"use strict";var r=n(98989),i=n(83101),o=n(25378),a={};n(41818)(a,n(22939)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(a,{next:i(1,n)}),o(e,t+" Iterator")}},45700:(e,t,n)=>{"use strict";var r=n(16227),i=n(83856),o=n(57470),a=n(41818),s=n(15449),l=n(33945),c=n(25378),u=n(95089),f=n(22939)("iterator"),d=!([].keys&&"next"in[].keys()),p="keys",v="values",h=function(){return this};e.exports=function(e,t,n,m,g,y,b){l(n,t,m);var _,w,C,x=function(e){if(!d&&e in O)return O[e];switch(e){case p:case v:return function(){return new n(this,e)}}return function(){return new n(this,e)}},A=t+" Iterator",k=g==v,$=!1,O=e.prototype,D=O[f]||O["@@iterator"]||g&&O[g],S=D||x(g),T=g?k?x("entries"):S:void 0,j="Array"==t&&O.entries||D;if(j&&(C=u(j.call(new e)))!==Object.prototype&&C.next&&(c(C,A,!0),r||"function"==typeof C[f]||a(C,f,h)),k&&D&&D.name!==v&&($=!0,S=function(){return D.call(this)}),r&&!b||!d&&!$&&O[f]||a(O,f,S),s[t]=S,s[A]=h,g)if(_={values:k?S:x(v),keys:y?S:x(p),entries:T},b)for(w in _)w in O||o(O,w,_[w]);else i(i.P+i.F*(d||$),t,_);return _}},96630:(e,t,n)=>{var r=n(22939)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var n=!1;try{var o=[7],a=o[r]();a.next=function(){return{done:n=!0}},o[r]=function(){return a},e(o)}catch(e){}return n}},15449:e=>{e.exports={}},16227:e=>{e.exports=!0},98989:(e,t,n)=>{var r=n(12159),i=n(57856),o=n(73338),a=n(58989)("IE_PROTO"),s=function(){},l=function(){var e,t=n(97467)("iframe"),r=o.length;for(t.style.display="none",n(54881).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[o[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=r(e),n=new s,s.prototype=null,n[a]=e):n=l(),void 0===t?n:i(n,t)}},4743:(e,t,n)=>{var r=n(12159),i=n(33758),o=n(33206),a=Object.defineProperty;t.f=n(89666)?Object.defineProperty:function(e,t,n){if(r(e),t=o(t,!0),r(n),i)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},57856:(e,t,n)=>{var r=n(4743),i=n(12159),o=n(46162);e.exports=n(89666)?Object.defineProperties:function(e,t){i(e);for(var n,a=o(t),s=a.length,l=0;s>l;)r.f(e,n=a[l++],t[n]);return e}},95089:(e,t,n)=>{var r=n(27069),i=n(66530),o=n(58989)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),r(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},12963:(e,t,n)=>{var r=n(27069),i=n(7932),o=n(57428)(!1),a=n(58989)("IE_PROTO");e.exports=function(e,t){var n,s=i(e),l=0,c=[];for(n in s)n!=a&&r(s,n)&&c.push(n);for(;t.length>l;)r(s,n=t[l++])&&(~o(c,n)||c.push(n));return c}},46162:(e,t,n)=>{var r=n(12963),i=n(73338);e.exports=Object.keys||function(e){return r(e,i)}},83101:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},57470:(e,t,n)=>{e.exports=n(41818)},25378:(e,t,n)=>{var r=n(4743).f,i=n(27069),o=n(22939)("toStringTag");e.exports=function(e,t,n){e&&!i(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},58989:(e,t,n)=>{var r=n(20250)("keys"),i=n(65730);e.exports=function(e){return r[e]||(r[e]=i(e))}},20250:(e,t,n)=>{var r=n(34579),i=n(33938),o="__core-js_shared__",a=i[o]||(i[o]={});(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(16227)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},90510:(e,t,n)=>{var r=n(11052),i=n(8333);e.exports=function(e){return function(t,n){var o,a,s=String(i(t)),l=r(n),c=s.length;return l<0||l>=c?e?"":void 0:(o=s.charCodeAt(l))<55296||o>56319||l+1===c||(a=s.charCodeAt(l+1))<56320||a>57343?e?s.charAt(l):o:e?s.slice(l,l+2):a-56320+(o-55296<<10)+65536}}},16531:(e,t,n)=>{var r=n(11052),i=Math.max,o=Math.min;e.exports=function(e,t){return(e=r(e))<0?i(e+t,0):o(e,t)}},11052:e=>{var t=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:t)(e)}},7932:(e,t,n)=>{var r=n(50799),i=n(8333);e.exports=function(e){return r(i(e))}},78728:(e,t,n)=>{var r=n(11052),i=Math.min;e.exports=function(e){return e>0?i(r(e),9007199254740991):0}},66530:(e,t,n)=>{var r=n(8333);e.exports=function(e){return Object(r(e))}},33206:(e,t,n)=>{var r=n(36727);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},65730:e=>{var t=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+n).toString(36))}},22939:(e,t,n)=>{var r=n(20250)("wks"),i=n(65730),o=n(33938).Symbol,a="function"==typeof o;(e.exports=function(e){return r[e]||(r[e]=a&&o[e]||(a?o:i)("Symbol."+e))}).store=r},83728:(e,t,n)=>{var r=n(14677),i=n(22939)("iterator"),o=n(15449);e.exports=n(34579).getIteratorMethod=function(e){if(null!=e)return e[i]||e["@@iterator"]||o[r(e)]}},2586:(e,t,n)=>{"use strict";var r=n(19216),i=n(83856),o=n(66530),a=n(95602),s=n(45991),l=n(78728),c=n(52445),u=n(83728);i(i.S+i.F*!n(96630)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,i,f,d=o(e),p="function"==typeof this?this:Array,v=arguments.length,h=v>1?arguments[1]:void 0,m=void 0!==h,g=0,y=u(d);if(m&&(h=r(h,v>2?arguments[2]:void 0,2)),null==y||p==Array&&s(y))for(n=new p(t=l(d.length));t>g;g++)c(n,g,m?h(d[g],g):d[g]);else for(f=y.call(d),n=new p;!(i=f.next()).done;g++)c(n,g,m?a(f,h,[i.value,g],!0):i.value);return n.length=g,n}})},31477:(e,t,n)=>{var r=n(83856);r(r.S+r.F*!n(89666),"Object",{defineProperty:n(4743).f})},91867:(e,t,n)=>{"use strict";var r=n(90510)(!0);n(45700)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},20251:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});var r=n(94015),i=n.n(r),o=n(23645),a=n.n(o)()(i());a.push([e.id,".serp-preview[data-v-66c4c5ab]{margin-top:15px;margin-bottom:15px;border-radius:2px;box-shadow:0 0 5px 0 rgba(0,0,0,0.12);background-color:#ffffff;border:solid 1px #e7e7e7;padding:30px;max-width:700px}.serp-preview .serp-arrow[data-v-66c4c5ab]{border-bottom-color:#006621;border-bottom-style:solid;border-bottom-width:0px;border-left-color:rgba(0,0,0,0);border-left-style:solid;border-left-width:4px;border-right-color:rgba(0,0,0,0);border-right-style:solid;border-right-width:4px;border-top-color:#006621;border-top-style:solid;border-top-width:5px;color:gray;cursor:default;font-family:arial, sans-serif;font-size:11px;font-weight:bold;height:0px;position:absolute;line-height:27px;margin-left:3px;margin-top:6px;text-align:center;user-select:none;visibility:visible;white-space:nowrap;width:0px}.serp-preview .serp-title[data-v-66c4c5ab]{color:#1A0DAB;cursor:pointer;font-family:arial, regular;font-size:18px;font-weight:normal;text-align:left;text-decoration:none;visibility:visible;white-space:nowrap}.serp-preview .serp-url[data-v-66c4c5ab]{color:#006621;font-family:arial, regular;font-size:14px;font-style:normal;font-weight:normal;line-height:24px;text-align:left;visibility:visible}.serp-preview .serp-description[data-v-66c4c5ab]{color:#545454;font-family:arial, regular;font-size:13px;font-weight:normal;text-align:left;visibility:visible;word-wrap:break-word}\n","",{version:3,sources:["webpack://./js/app/utils/serp/serp.vue"],names:[],mappings:"AA6EA,+BACI,eAAgB,CAChB,kBAAmB,CACnB,iBAAkB,CAClB,qCAAyC,CACzC,wBAAyB,CACzB,wBAAyB,CACzB,YAAa,CACb,eAAgB,CARpB,2CAWQ,2BAAoC,CACpC,yBAA0B,CAC1B,uBAAwB,CACxB,+BAAmC,CACnC,uBAAwB,CACxB,qBAAsB,CACtB,gCAAoC,CACpC,wBAAyB,CACzB,sBAAuB,CACvB,wBAAiC,CACjC,sBAAuB,CACvB,oBAAqB,CACrB,UAAyB,CACzB,cAAe,CACf,6BAA8B,CAC9B,cAAe,CACf,gBAAiB,CACjB,UAAW,CACX,iBAAkB,CAClB,gBAAiB,CACjB,eAAgB,CAChB,cAAe,CACf,iBAAkB,CAClB,gBAAiB,CACjB,kBAAmB,CACnB,kBAAmB,CACnB,SAAU,CArClB,2CAyCQ,aAAc,CACd,cAAe,CACf,0BAA2B,CAC3B,cAAe,CACf,kBAAmB,CACnB,eAAgB,CAChB,oBAAqB,CACrB,kBAAmB,CACnB,kBAAmB,CAjD3B,yCAqDQ,aAAc,CACd,0BAA2B,CAC3B,cAAe,CACf,iBAAkB,CAClB,kBAAmB,CACnB,gBAAiB,CACjB,eAAgB,CAChB,kBAAmB,CA5D3B,iDAgEQ,aAAc,CACd,0BAA2B,CAC3B,cAAe,CACf,kBAAmB,CACnB,eAAgB,CAChB,kBAAmB,CACnB,oBAAqB",sourcesContent:["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.serp-preview {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    border-radius: 2px;\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.12);\n    background-color: #ffffff;\n    border: solid 1px #e7e7e7;\n    padding: 30px;\n    max-width: 700px;\n\n    .serp-arrow {\n        border-bottom-color: rgb(0, 102, 33);\n        border-bottom-style: solid;\n        border-bottom-width: 0px;\n        border-left-color: rgba(0, 0, 0, 0);\n        border-left-style: solid;\n        border-left-width: 4px;\n        border-right-color: rgba(0, 0, 0, 0);\n        border-right-style: solid;\n        border-right-width: 4px;\n        border-top-color: rgb(0, 102, 33);\n        border-top-style: solid;\n        border-top-width: 5px;\n        color: rgb(128, 128, 128);\n        cursor: default;\n        font-family: arial, sans-serif;\n        font-size: 11px;\n        font-weight: bold;\n        height: 0px;\n        position: absolute;\n        line-height: 27px;\n        margin-left: 3px;\n        margin-top: 6px;\n        text-align: center;\n        user-select: none;\n        visibility: visible;\n        white-space: nowrap;\n        width: 0px;\n    }\n\n    .serp-title {\n        color: #1A0DAB;\n        cursor: pointer;\n        font-family: arial, regular;\n        font-size: 18px;\n        font-weight: normal;\n        text-align: left;\n        text-decoration: none;\n        visibility: visible;\n        white-space: nowrap;\n    }\n\n    .serp-url {\n        color: #006621;\n        font-family: arial, regular;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: normal;\n        line-height: 24px;\n        text-align: left;\n        visibility: visible;\n    }\n\n    .serp-description {\n        color: #545454;\n        font-family: arial, regular;\n        font-size: 13px;\n        font-weight: normal;\n        text-align: left;\n        visibility: visible;\n        word-wrap: break-word;\n    }\n}\n"],sourceRoot:""}]);const s=a},23645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},94015:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,i=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(l," */"),u=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[o].concat(u).concat([c]).join("\n")}return[o].join("\n")}},17187:e=>{"use strict";var t,n="object"==typeof Reflect?Reflect:null,r=n&&"function"==typeof n.apply?n.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};t=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var i=Number.isNaN||function(e){return e!=e};function o(){o.init.call(this)}e.exports=o,o.EventEmitter=o,o.prototype._events=void 0,o.prototype._eventsCount=0,o.prototype._maxListeners=void 0;var a=10;function s(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function l(e){return void 0===e._maxListeners?o.defaultMaxListeners:e._maxListeners}function c(e,t,n,r){var i,o,a,c;if(s(n),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),o=e._events),a=o[t]),void 0===a)a=o[t]=n,++e._eventsCount;else if("function"==typeof a?a=o[t]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(i=l(e))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,c=u,console&&console.warn&&console.warn(c)}return e}function u(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function f(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=u.bind(r);return i.listener=n,r.wrapFn=i,i}function d(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?n?[i.listener||i]:[i]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(i):v(i,i.length)}function p(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function v(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}Object.defineProperty(o,"defaultMaxListeners",{enumerable:!0,get:function(){return a},set:function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");a=e}}),o.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},o.prototype.getMaxListeners=function(){return l(this)},o.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var i="error"===e,o=this._events;if(void 0!==o)i=i&&void 0===o.error;else if(!i)return!1;if(i){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var s=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw s.context=a,s}var l=o[e];if(void 0===l)return!1;if("function"==typeof l)r(l,this,t);else{var c=l.length,u=v(l,c);for(n=0;n<c;++n)r(u[n],this,t)}return!0},o.prototype.addListener=function(e,t){return c(this,e,t,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(e,t){return c(this,e,t,!0)},o.prototype.once=function(e,t){return s(t),this.on(e,f(this,e,t)),this},o.prototype.prependOnceListener=function(e,t){return s(t),this.prependListener(e,f(this,e,t)),this},o.prototype.removeListener=function(e,t){var n,r,i,o,a;if(s(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,a||t)}return this},o.prototype.off=o.prototype.removeListener,o.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)"removeListener"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},o.prototype.listeners=function(e){return d(this,e,!0)},o.prototype.rawListeners=function(e){return d(this,e,!1)},o.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):p.call(e,t)},o.prototype.listenerCount=p,o.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},73867:(e,t,n)=>{var r,i,o,a,s,l,c=n(73609);r=c,i=window,o=window.document,a="touchstart mousedown",s="touchmove mousemove",l="touchend mouseup",r(o).ready((function(){function e(e){for(var t={},n=e.match(/([^;:]+)/g)||[];n.length;)t[n.shift()]=n.shift().trim();return t}r("table").each((function(){"dnd"===r(this).data("table")&&r(this).tableDnD({onDragStyle:r(this).data("ondragstyle")&&e(r(this).data("ondragstyle"))||null,onDropStyle:r(this).data("ondropstyle")&&e(r(this).data("ondropstyle"))||null,onDragClass:void 0===r(this).data("ondragclass")?"tDnD_whileDrag":r(this).data("ondragclass"),onDrop:r(this).data("ondrop")&&new Function("table","row",r(this).data("ondrop")),onDragStart:r(this).data("ondragstart")&&new Function("table","row",r(this).data("ondragstart")),onDragStop:r(this).data("ondragstop")&&new Function("table","row",r(this).data("ondragstop")),scrollAmount:r(this).data("scrollamount")||5,sensitivity:r(this).data("sensitivity")||10,hierarchyLevel:r(this).data("hierarchylevel")||0,indentArtifact:r(this).data("indentartifact")||'<div class="indent">&nbsp;</div>',autoWidthAdjust:r(this).data("autowidthadjust")||!0,autoCleanRelations:r(this).data("autocleanrelations")||!0,jsonPretifySeparator:r(this).data("jsonpretifyseparator")||"\t",serializeRegexp:r(this).data("serializeregexp")&&new RegExp(r(this).data("serializeregexp"))||/[^\-]*$/,serializeParamName:r(this).data("serializeparamname")||!1,dragHandle:r(this).data("draghandle")||null})}))})),c.tableDnD={currentTable:null,dragObject:null,mouseOffset:null,oldX:0,oldY:0,build:function(e){return this.each((function(){this.tableDnDConfig=r.extend({onDragStyle:null,onDropStyle:null,onDragClass:"tDnD_whileDrag",onDrop:null,onDragStart:null,onDragStop:null,scrollAmount:5,sensitivity:10,hierarchyLevel:0,indentArtifact:'<div class="indent">&nbsp;</div>',autoWidthAdjust:!0,autoCleanRelations:!0,jsonPretifySeparator:"\t",serializeRegexp:/[^\-]*$/,serializeParamName:!1,dragHandle:null},e||{}),r.tableDnD.makeDraggable(this),this.tableDnDConfig.hierarchyLevel&&r.tableDnD.makeIndented(this)})),this},makeIndented:function(e){var t,n,i=e.tableDnDConfig,o=e.rows,a=r(o).first().find("td:first")[0],s=0,l=0;if(r(e).hasClass("indtd"))return null;n=r(e).addClass("indtd").attr("style"),r(e).css({whiteSpace:"nowrap"});for(var c=0;c<o.length;c++)l<r(o[c]).find("td:first").text().length&&(l=r(o[c]).find("td:first").text().length,t=c);for(r(a).css({width:"auto"}),c=0;c<i.hierarchyLevel;c++)r(o[t]).find("td:first").prepend(i.indentArtifact);for(a&&r(a).css({width:a.offsetWidth}),n&&r(e).css(n),c=0;c<i.hierarchyLevel;c++)r(o[t]).find("td:first").children(":first").remove();return i.hierarchyLevel&&r(o).each((function(){(s=r(this).data("level")||0)<=i.hierarchyLevel&&r(this).data("level",s)||r(this).data("level",0);for(var e=0;e<r(this).data("level");e++)r(this).find("td:first").prepend(i.indentArtifact)})),this},makeDraggable:function(e){var t=e.tableDnDConfig;t.dragHandle&&r(t.dragHandle,e).each((function(){r(this).bind(a,(function(n){return r.tableDnD.initialiseDrag(r(this).parents("tr")[0],e,this,n,t),!1}))}))||r(e.rows).each((function(){r(this).hasClass("nodrag")?r(this).css("cursor",""):r(this).bind(a,(function(n){if("TD"===n.target.tagName)return r.tableDnD.initialiseDrag(this,e,this,n,t),!1})).css("cursor","move")}))},currentOrder:function(){var e=this.currentTable.rows;return r.map(e,(function(e){return(r(e).data("level")+e.id).replace(/\s/g,"")})).join("")},initialiseDrag:function(e,t,n,i,a){this.dragObject=e,this.currentTable=t,this.mouseOffset=this.getMouseOffset(n,i),this.originalOrder=this.currentOrder(),r(o).bind(s,this.mousemove).bind(l,this.mouseup),a.onDragStart&&a.onDragStart(t,n)},updateTables:function(){this.each((function(){this.tableDnDConfig&&r.tableDnD.makeDraggable(this)}))},mouseCoords:function(e){return e.originalEvent.changedTouches?{x:e.originalEvent.changedTouches[0].clientX,y:e.originalEvent.changedTouches[0].clientY}:e.pageX||e.pageY?{x:e.pageX,y:e.pageY}:{x:e.clientX+o.body.scrollLeft-o.body.clientLeft,y:e.clientY+o.body.scrollTop-o.body.clientTop}},getMouseOffset:function(e,t){var n,r;return t=t||i.event,r=this.getPosition(e),{x:(n=this.mouseCoords(t)).x-r.x,y:n.y-r.y}},getPosition:function(e){var t=0,n=0;for(0===e.offsetHeight&&(e=e.firstChild);e.offsetParent;)t+=e.offsetLeft,n+=e.offsetTop,e=e.offsetParent;return{x:t+=e.offsetLeft,y:n+=e.offsetTop}},autoScroll:function(e){var t=this.currentTable.tableDnDConfig,n=i.pageYOffset,r=i.innerHeight?i.innerHeight:o.documentElement.clientHeight?o.documentElement.clientHeight:o.body.clientHeight;o.all&&(void 0!==o.compatMode&&"BackCompat"!==o.compatMode?n=o.documentElement.scrollTop:void 0!==o.body&&(n=o.body.scrollTop)),e.y-n<t.scrollAmount&&i.scrollBy(0,-t.scrollAmount)||r-(e.y-n)<t.scrollAmount&&i.scrollBy(0,t.scrollAmount)},moveVerticle:function(e,t){0!==e.vertical&&t&&this.dragObject!==t&&this.dragObject.parentNode===t.parentNode&&(0>e.vertical&&this.dragObject.parentNode.insertBefore(this.dragObject,t.nextSibling)||0<e.vertical&&this.dragObject.parentNode.insertBefore(this.dragObject,t))},moveHorizontal:function(e,t){var n,i=this.currentTable.tableDnDConfig;if(!i.hierarchyLevel||0===e.horizontal||!t||this.dragObject!==t)return null;n=r(t).data("level"),0<e.horizontal&&n>0&&r(t).find("td:first").children(":first").remove()&&r(t).data("level",--n),0>e.horizontal&&n<i.hierarchyLevel&&r(t).prev().data("level")>=n&&r(t).children(":first").prepend(i.indentArtifact)&&r(t).data("level",++n)},mousemove:function(e){var t,n,i,o,a,s=r(r.tableDnD.dragObject),l=r.tableDnD.currentTable.tableDnDConfig;return e&&e.preventDefault(),!!r.tableDnD.dragObject&&("touchmove"===e.type&&event.preventDefault(),l.onDragClass&&s.addClass(l.onDragClass)||s.css(l.onDragStyle),o=(n=r.tableDnD.mouseCoords(e)).x-r.tableDnD.mouseOffset.x,a=n.y-r.tableDnD.mouseOffset.y,r.tableDnD.autoScroll(n),t=r.tableDnD.findDropTargetRow(s,a),i=r.tableDnD.findDragDirection(o,a),r.tableDnD.moveVerticle(i,t),r.tableDnD.moveHorizontal(i,t),!1)},findDragDirection:function(e,t){var n=this.currentTable.tableDnDConfig.sensitivity,r=this.oldX,i=this.oldY,o={horizontal:e>=r-n&&e<=r+n?0:e>r?-1:1,vertical:t>=i-n&&t<=i+n?0:t>i?-1:1};return 0!==o.horizontal&&(this.oldX=e),0!==o.vertical&&(this.oldY=t),o},findDropTargetRow:function(e,t){for(var n=0,i=this.currentTable.rows,o=this.currentTable.tableDnDConfig,a=0,s=null,l=0;l<i.length;l++)if(s=i[l],a=this.getPosition(s).y,n=parseInt(s.offsetHeight)/2,0===s.offsetHeight&&(a=this.getPosition(s.firstChild).y,n=parseInt(s.firstChild.offsetHeight)/2),t>a-n&&t<a+n)return e.is(s)||o.onAllowDrop&&!o.onAllowDrop(e,s)||r(s).hasClass("nodrop")?null:s;return null},processMouseup:function(){if(!this.currentTable||!this.dragObject)return null;var e=this.currentTable.tableDnDConfig,t=this.dragObject,n=0,i=0;r(o).unbind(s,this.mousemove).unbind(l,this.mouseup),e.hierarchyLevel&&e.autoCleanRelations&&r(this.currentTable.rows).first().find("td:first").children().each((function(){(i=r(this).parents("tr:first").data("level"))&&r(this).parents("tr:first").data("level",--i)&&r(this).remove()}))&&e.hierarchyLevel>1&&r(this.currentTable.rows).each((function(){if((i=r(this).data("level"))>1)for(n=r(this).prev().data("level");i>n+1;)r(this).find("td:first").children(":first").remove(),r(this).data("level",--i)})),e.onDragClass&&r(t).removeClass(e.onDragClass)||r(t).css(e.onDropStyle),this.dragObject=null,e.onDrop&&this.originalOrder!==this.currentOrder()&&r(t).hide().fadeIn("fast")&&e.onDrop(this.currentTable,t),e.onDragStop&&e.onDragStop(this.currentTable,t),this.currentTable=null},mouseup:function(e){return e&&e.preventDefault(),r.tableDnD.processMouseup(),!1},jsonize:function(e){var t=this.currentTable;return e?JSON.stringify(this.tableData(t),null,t.tableDnDConfig.jsonPretifySeparator):JSON.stringify(this.tableData(t))},serialize:function(){return r.param(this.tableData(this.currentTable))},serializeTable:function(e){for(var t="",n=e.tableDnDConfig.serializeParamName||e.id,r=e.rows,i=0;i<r.length;i++){t.length>0&&(t+="&");var o=r[i].id;o&&e.tableDnDConfig&&e.tableDnDConfig.serializeRegexp&&(t+=n+"[]="+(o=o.match(e.tableDnDConfig.serializeRegexp)[0]))}return t},serializeTables:function(){var e=[];return r("table").each((function(){this.id&&e.push(r.param(r.tableDnD.tableData(this)))})),e.join("&")},tableData:function(e){var t,n,i,o,a=e.tableDnDConfig,s=[],l=0,c=0,u=null,f={};if(e||(e=this.currentTable),!e||!e.rows||!e.rows.length)return{error:{code:500,message:"Not a valid table."}};if(!e.id&&!a.serializeParamName)return{error:{code:500,message:"No serializable unique id provided."}};o=a.autoCleanRelations&&e.rows||r.makeArray(e.rows),t=function(e){return e&&a&&a.serializeRegexp?e.match(a.serializeRegexp)[0]:e},f[i=n=a.serializeParamName||e.id]=[],!a.autoCleanRelations&&r(o[0]).data("level")&&o.unshift({id:"undefined"});for(var d=0;d<o.length;d++)if(a.hierarchyLevel){if(0===(c=r(o[d]).data("level")||0))i=n,s=[];else if(c>l)s.push([i,l]),i=t(o[d-1].id);else if(c<l)for(var p=0;p<s.length;p++)s[p][1]===c&&(i=s[p][0]),s[p][1]>=l&&(s[p][1]=0);l=c,r.isArray(f[i])||(f[i]=[]),(u=t(o[d].id))&&f[i].push(u)}else(u=t(o[d].id))&&f[i].push(u);return f}},c.fn.extend({tableDnD:r.tableDnD.build,tableDnDUpdate:r.tableDnD.updateTables,tableDnDSerialize:r.proxy(r.tableDnD.serialize,r.tableDnD),tableDnDSerializeAll:r.tableDnD.serializeTables,tableDnDData:r.proxy(r.tableDnD.tableData,r.tableDnD)})},25121:(e,t,n)=>{"use strict";n.r(t),n.d(t,{__esModule:()=>i.X,default:()=>s});var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"serp"}},[n("div",{staticClass:"serp-preview"},[n("div",{staticClass:"serp-title"},[e._v("\n      "+e._s(e.displayedTitle)+"\n    ")]),e._v(" "),n("div",{staticClass:"serp-url"},[e._v("\n      "+e._s(e.url)),n("span",{staticClass:"serp-arrow"})]),e._v(" "),n("div",{staticClass:"serp-description"},[e._v("\n      "+e._s(e.displayedDescription)+"\n    ")])])])};r._withStripped=!0;var i=n(66313);const o=i.Z;n(69492);var a=(0,n(51900).Z)(o,r,[],!1,null,"66c4c5ab",null);a.options.__file="js/app/utils/serp/serp.vue";const s=a.exports},51900:(e,t,n)=>{"use strict";function r(e,t,n,r,i,o,a,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),r&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),a?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},c._ssrRegister=l):i&&(l=s?function(){i.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,t){return l.call(t),u(e,t)}}else{var f=c.beforeCreate;c.beforeCreate=f?[].concat(f,l):[l]}return{exports:e,options:c}}n.d(t,{Z:()=>r})},69492:(e,t,n)=>{var r=n(20251);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),(0,n(45346).Z)("2c83d4db",r,!1,{})},45346:(e,t,n)=>{"use strict";function r(e,t){for(var n=[],r={},i=0;i<t.length;i++){var o=t[i],a=o[0],s={id:e+":"+i,css:o[1],media:o[2],sourceMap:o[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}n.d(t,{Z:()=>v});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},a=i&&(document.head||document.getElementsByTagName("head")[0]),s=null,l=0,c=!1,u=function(){},f=null,d="data-vue-ssr-id",p="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function v(e,t,n,i){c=n,f=i||{};var a=r(e,t);return h(a),function(t){for(var n=[],i=0;i<a.length;i++){var s=a[i];(l=o[s.id]).refs--,n.push(l)}for(t?h(a=r(e,t)):a=[],i=0;i<n.length;i++){var l;if(0===(l=n[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete o[l.id]}}}}function h(e){for(var t=0;t<e.length;t++){var n=e[t],r=o[n.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](n.parts[i]);for(;i<n.parts.length;i++)r.parts.push(g(n.parts[i]));r.parts.length>n.parts.length&&(r.parts.length=n.parts.length)}else{var a=[];for(i=0;i<n.parts.length;i++)a.push(g(n.parts[i]));o[n.id]={id:n.id,refs:1,parts:a}}}}function m(){var e=document.createElement("style");return e.type="text/css",a.appendChild(e),e}function g(e){var t,n,r=document.querySelector("style["+d+'~="'+e.id+'"]');if(r){if(c)return u;r.parentNode.removeChild(r)}if(p){var i=l++;r=s||(s=m()),t=_.bind(null,r,i,!1),n=_.bind(null,r,i,!0)}else r=m(),t=w.bind(null,r),n=function(){r.parentNode.removeChild(r)};return t(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap)return;t(e=r)}else n()}}var y,b=(y=[],function(e,t){return y[e]=t,y.filter(Boolean).join("\n")});function _(e,t,n,r){var i=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=b(t,i);else{var o=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function w(e,t){var n=t.css,r=t.media,i=t.sourceMap;if(r&&e.setAttribute("media",r),f.ssrId&&e.setAttribute(d,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},72100:(e,t,n)=>{e.exports=n(91317)},91317:(e,t,n)=>{"use strict";var r=Object.freeze({});function i(e){return null==e}function o(e){return null!=e}function a(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return null!==e&&"object"==typeof e}var c=Object.prototype.toString;function u(e){return"[object Object]"===c.call(e)}function f(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function d(e){return o(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function p(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===c?JSON.stringify(e,null,2):String(e)}function v(e){var t=parseFloat(e);return isNaN(t)?e:t}function h(e,t){for(var n=Object.create(null),r=e.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var m=h("slot,component",!0),g=h("key,ref,slot,slot-scope,is");function y(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var b=Object.prototype.hasOwnProperty;function _(e,t){return b.call(e,t)}function w(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var C=/-(\w)/g,x=w((function(e){return e.replace(C,(function(e,t){return t?t.toUpperCase():""}))})),A=w((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),k=/\B([A-Z])/g,$=w((function(e){return e.replace(k,"-$1").toLowerCase()})),O=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function D(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function S(e,t){for(var n in t)e[n]=t[n];return e}function T(e){for(var t={},n=0;n<e.length;n++)e[n]&&S(t,e[n]);return t}function j(e,t,n){}var B=function(e,t,n){return!1},M=function(e){return e};function E(e,t){if(e===t)return!0;var n=l(e),r=l(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var i=Array.isArray(e),o=Array.isArray(t);if(i&&o)return e.length===t.length&&e.every((function(e,n){return E(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||o)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every((function(n){return E(e[n],t[n])}))}catch(e){return!1}}function L(e,t){for(var n=0;n<e.length;n++)if(E(e[n],t))return n;return-1}function P(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var I="data-server-rendered",N=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],R={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:B,isReservedAttr:B,isUnknownElement:B,getTagNamespace:j,parsePlatformTagName:M,mustUseProp:B,async:!0,_lifecycleHooks:F},z=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function U(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var H,q=new RegExp("[^"+z.source+".$_\\d]"),V="__proto__"in{},W="undefined"!=typeof window,J="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=J&&WXEnvironment.platform.toLowerCase(),X=W&&window.navigator.userAgent.toLowerCase(),G=X&&/msie|trident/.test(X),Z=X&&X.indexOf("msie 9.0")>0,Y=X&&X.indexOf("edge/")>0,Q=(X&&X.indexOf("android"),X&&/iphone|ipad|ipod|ios/.test(X)||"ios"===K),ee=(X&&/chrome\/\d+/.test(X),X&&/phantomjs/.test(X),X&&X.match(/firefox\/(\d+)/)),te={}.watch,ne=!1;if(W)try{var re={};Object.defineProperty(re,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,re)}catch(r){}var ie=function(){return void 0===H&&(H=!W&&!J&&void 0!==n.g&&n.g.process&&"server"===n.g.process.env.VUE_ENV),H},oe=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ae(e){return"function"==typeof e&&/native code/.test(e.toString())}var se,le="undefined"!=typeof Symbol&&ae(Symbol)&&"undefined"!=typeof Reflect&&ae(Reflect.ownKeys);se="undefined"!=typeof Set&&ae(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=j,ue=0,fe=function(){this.id=ue++,this.subs=[]};fe.prototype.addSub=function(e){this.subs.push(e)},fe.prototype.removeSub=function(e){y(this.subs,e)},fe.prototype.depend=function(){fe.target&&fe.target.addDep(this)},fe.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},fe.target=null;var de=[];function pe(e){de.push(e),fe.target=e}function ve(){de.pop(),fe.target=de[de.length-1]}var he=function(e,t,n,r,i,o,a,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},me={child:{configurable:!0}};me.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,me);var ge=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function ye(e){return new he(void 0,void 0,void 0,String(e))}function be(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var _e=Array.prototype,we=Object.create(_e);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=_e[e];U(we,e,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var i,o=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o}))}));var Ce=Object.getOwnPropertyNames(we),xe=!0;function Ae(e){xe=e}var ke=function(e){var t;this.value=e,this.dep=new fe,this.vmCount=0,U(e,"__ob__",this),Array.isArray(e)?(V?(t=we,e.__proto__=t):function(e,t,n){for(var r=0,i=n.length;r<i;r++){var o=n[r];U(e,o,t[o])}}(e,we,Ce),this.observeArray(e)):this.walk(e)};function $e(e,t){var n;if(l(e)&&!(e instanceof he))return _(e,"__ob__")&&e.__ob__ instanceof ke?n=e.__ob__:xe&&!ie()&&(Array.isArray(e)||u(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new ke(e)),t&&n&&n.vmCount++,n}function Oe(e,t,n,r,i){var o=new fe,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,l=a&&a.set;s&&!l||2!==arguments.length||(n=e[t]);var c=!i&&$e(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return fe.target&&(o.depend(),c&&(c.dep.depend(),Array.isArray(t)&&function e(t){for(var n=void 0,r=0,i=t.length;r<i;r++)(n=t[r])&&n.__ob__&&n.__ob__.dep.depend(),Array.isArray(n)&&e(n)}(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||s&&!l||(l?l.call(e,t):n=t,c=!i&&$e(t),o.notify())}})}}function De(e,t,n){if(Array.isArray(e)&&f(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(Oe(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function Se(e,t){if(Array.isArray(e)&&f(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||_(e,t)&&(delete e[t],n&&n.dep.notify())}}ke.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Oe(e,t[n])},ke.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)$e(e[t])};var Te=R.optionMergeStrategies;function je(e,t){if(!t)return e;for(var n,r,i,o=le?Reflect.ownKeys(t):Object.keys(t),a=0;a<o.length;a++)"__ob__"!==(n=o[a])&&(r=e[n],i=t[n],_(e,n)?r!==i&&u(r)&&u(i)&&je(r,i):De(e,n,i));return e}function Be(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,i="function"==typeof e?e.call(n,n):e;return r?je(r,i):i}:t?e?function(){return je("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Me(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Ee(e,t,n,r){var i=Object.create(e||null);return t?S(i,t):i}Te.data=function(e,t,n){return n?Be(e,t,n):t&&"function"!=typeof t?e:Be(e,t)},F.forEach((function(e){Te[e]=Me})),N.forEach((function(e){Te[e+"s"]=Ee})),Te.watch=function(e,t,n,r){if(e===te&&(e=void 0),t===te&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var o in S(i,e),t){var a=i[o],s=t[o];a&&!Array.isArray(a)&&(a=[a]),i[o]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},Te.props=Te.methods=Te.inject=Te.computed=function(e,t,n,r){if(!e)return t;var i=Object.create(null);return S(i,e),t&&S(i,t),i},Te.provide=Be;var Le=function(e,t){return void 0===t?e:t};function Pe(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,i,o={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(i=n[r])&&(o[x(i)]={type:null});else if(u(n))for(var a in n)i=n[a],o[x(a)]=u(i)?i:{type:i};e.props=o}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(u(n))for(var o in n){var a=n[o];r[o]=u(a)?S({from:o},a):{from:a}}}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=Pe(e,t.extends,n)),t.mixins))for(var r=0,i=t.mixins.length;r<i;r++)e=Pe(e,t.mixins[r],n);var o,a={};for(o in e)s(o);for(o in t)_(e,o)||s(o);function s(r){var i=Te[r]||Le;a[r]=i(e[r],t[r],n,r)}return a}function Ie(e,t,n,r){if("string"==typeof n){var i=e[t];if(_(i,n))return i[n];var o=x(n);if(_(i,o))return i[o];var a=A(o);return _(i,a)?i[a]:i[n]||i[o]||i[a]}}function Ne(e,t,n,r){var i=t[e],o=!_(n,e),a=n[e],s=ze(Boolean,i.type);if(s>-1)if(o&&!_(i,"default"))a=!1;else if(""===a||a===$(e)){var l=ze(String,i.type);(l<0||s<l)&&(a=!0)}if(void 0===a){a=function(e,t,n){if(_(t,"default")){var r=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:"function"==typeof r&&"Function"!==Fe(t.type)?r.call(e):r}}(r,i,e);var c=xe;Ae(!0),$e(a),Ae(c)}return a}function Fe(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Re(e,t){return Fe(e)===Fe(t)}function ze(e,t){if(!Array.isArray(t))return Re(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Re(t[n],e))return n;return-1}function Ue(e,t,n){pe();try{if(t)for(var r=t;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(r,e,t,n))return}catch(e){qe(e,r,"errorCaptured hook")}}qe(e,t,n)}finally{ve()}}function He(e,t,n,r,i){var o;try{(o=n?e.apply(t,n):e.call(t))&&!o._isVue&&d(o)&&!o._handled&&(o.catch((function(e){return Ue(e,r,i+" (Promise/async)")})),o._handled=!0)}catch(e){Ue(e,r,i)}return o}function qe(e,t,n){if(R.errorHandler)try{return R.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ve(t)}Ve(e)}function Ve(e,t,n){if(!W&&!J||"undefined"==typeof console)throw e;console.error(e)}var We,Je=!1,Ke=[],Xe=!1;function Ge(){Xe=!1;var e=Ke.slice(0);Ke.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&ae(Promise)){var Ze=Promise.resolve();We=function(){Ze.then(Ge),Q&&setTimeout(j)},Je=!0}else if(G||"undefined"==typeof MutationObserver||!ae(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())We="undefined"!=typeof setImmediate&&ae(setImmediate)?function(){setImmediate(Ge)}:function(){setTimeout(Ge,0)};else{var Ye=1,Qe=new MutationObserver(Ge),et=document.createTextNode(String(Ye));Qe.observe(et,{characterData:!0}),We=function(){Ye=(Ye+1)%2,et.data=String(Ye)},Je=!0}function tt(e,t){var n;if(Ke.push((function(){if(e)try{e.call(t)}catch(e){Ue(e,t,"nextTick")}else n&&n(t)})),Xe||(Xe=!0,We()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var nt=new se;function rt(e){!function e(t,n){var r,i,o=Array.isArray(t);if(!(!o&&!l(t)||Object.isFrozen(t)||t instanceof he)){if(t.__ob__){var a=t.__ob__.dep.id;if(n.has(a))return;n.add(a)}if(o)for(r=t.length;r--;)e(t[r],n);else for(r=(i=Object.keys(t)).length;r--;)e(t[i[r]],n)}}(e,nt),nt.clear()}var it=w((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function ot(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return He(r,null,arguments,t,"v-on handler");for(var i=r.slice(),o=0;o<i.length;o++)He(i[o],null,e,t,"v-on handler")}return n.fns=e,n}function at(e,t,n,r,o,s){var l,c,u,f;for(l in e)c=e[l],u=t[l],f=it(l),i(c)||(i(u)?(i(c.fns)&&(c=e[l]=ot(c,s)),a(f.once)&&(c=e[l]=o(f.name,c,f.capture)),n(f.name,c,f.capture,f.passive,f.params)):c!==u&&(u.fns=c,e[l]=u));for(l in t)i(e[l])&&r((f=it(l)).name,t[l],f.capture)}function st(e,t,n){var r;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var s=e[t];function l(){n.apply(this,arguments),y(r.fns,l)}i(s)?r=ot([l]):o(s.fns)&&a(s.merged)?(r=s).fns.push(l):r=ot([s,l]),r.merged=!0,e[t]=r}function lt(e,t,n,r,i){if(o(t)){if(_(t,n))return e[n]=t[n],i||delete t[n],!0;if(_(t,r))return e[n]=t[r],i||delete t[r],!0}return!1}function ct(e){return s(e)?[ye(e)]:Array.isArray(e)?function e(t,n){var r,l,c,u,f=[];for(r=0;r<t.length;r++)i(l=t[r])||"boolean"==typeof l||(u=f[c=f.length-1],Array.isArray(l)?l.length>0&&(ut((l=e(l,(n||"")+"_"+r))[0])&&ut(u)&&(f[c]=ye(u.text+l[0].text),l.shift()),f.push.apply(f,l)):s(l)?ut(u)?f[c]=ye(u.text+l):""!==l&&f.push(ye(l)):ut(l)&&ut(u)?f[c]=ye(u.text+l.text):(a(t._isVList)&&o(l.tag)&&i(l.key)&&o(n)&&(l.key="__vlist"+n+"_"+r+"__"),f.push(l)));return f}(e):void 0}function ut(e){return o(e)&&o(e.text)&&!1===e.isComment}function ft(e,t){if(e){for(var n=Object.create(null),r=le?Reflect.ownKeys(e):Object.keys(e),i=0;i<r.length;i++){var o=r[i];if("__ob__"!==o){for(var a=e[o].from,s=t;s;){if(s._provided&&_(s._provided,a)){n[o]=s._provided[a];break}s=s.$parent}if(!s&&"default"in e[o]){var l=e[o].default;n[o]="function"==typeof l?l.call(t):l}}}return n}}function dt(e,t){if(!e||!e.length)return{};for(var n={},r=0,i=e.length;r<i;r++){var o=e[r],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==t&&o.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(o);else{var s=a.slot,l=n[s]||(n[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in n)n[c].every(pt)&&delete n[c];return n}function pt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function vt(e,t,n){var i,o=Object.keys(t).length>0,a=e?!!e.$stable:!o,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(a&&n&&n!==r&&s===n.$key&&!o&&!n.$hasNormal)return n;for(var l in i={},e)e[l]&&"$"!==l[0]&&(i[l]=ht(t,l,e[l]))}else i={};for(var c in t)c in i||(i[c]=mt(t,c));return e&&Object.isExtensible(e)&&(e._normalized=i),U(i,"$stable",a),U(i,"$key",s),U(i,"$hasNormal",o),i}function ht(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ct(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function mt(e,t){return function(){return e[t]}}function gt(e,t){var n,r,i,a,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,i=e.length;r<i;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(l(e))if(le&&e[Symbol.iterator]){n=[];for(var c=e[Symbol.iterator](),u=c.next();!u.done;)n.push(t(u.value,n.length)),u=c.next()}else for(a=Object.keys(e),n=new Array(a.length),r=0,i=a.length;r<i;r++)s=a[r],n[r]=t(e[s],s,r);return o(n)||(n=[]),n._isVList=!0,n}function yt(e,t,n,r){var i,o=this.$scopedSlots[e];o?(n=n||{},r&&(n=S(S({},r),n)),i=o(n)||t):i=this.$slots[e]||t;var a=n&&n.slot;return a?this.$createElement("template",{slot:a},i):i}function bt(e){return Ie(this.$options,"filters",e)||M}function _t(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function wt(e,t,n,r,i){var o=R.keyCodes[t]||n;return i&&r&&!R.keyCodes[t]?_t(i,r):o?_t(o,e):r?$(r)!==t:void 0}function Ct(e,t,n,r,i){if(n&&l(n)){var o;Array.isArray(n)&&(n=T(n));var a=function(a){if("class"===a||"style"===a||g(a))o=e;else{var s=e.attrs&&e.attrs.type;o=r||R.mustUseProp(t,s,a)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=x(a),c=$(a);l in o||c in o||(o[a]=n[a],i&&((e.on||(e.on={}))["update:"+a]=function(e){n[a]=e}))};for(var s in n)a(s)}return e}function xt(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||kt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function At(e,t,n){return kt(e,"__once__"+t+(n?"_"+n:""),!0),e}function kt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&$t(e[r],t+"_"+r,n);else $t(e,t,n)}function $t(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Ot(e,t){if(t&&u(t)){var n=e.on=e.on?S({},e.on):{};for(var r in t){var i=n[r],o=t[r];n[r]=i?[].concat(i,o):o}}return e}function Dt(e,t,n,r){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var o=e[i];Array.isArray(o)?Dt(o,t,n):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function St(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function Tt(e,t){return"string"==typeof e?t+e:e}function jt(e){e._o=At,e._n=v,e._s=p,e._l=gt,e._t=yt,e._q=E,e._i=L,e._m=xt,e._f=bt,e._k=wt,e._b=Ct,e._v=ye,e._e=ge,e._u=Dt,e._g=Ot,e._d=St,e._p=Tt}function Bt(e,t,n,i,o){var s,l=this,c=o.options;_(i,"_uid")?(s=Object.create(i))._original=i:(s=i,i=i._original);var u=a(c._compiled),f=!u;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||r,this.injections=ft(c.inject,i),this.slots=function(){return l.$slots||vt(e.scopedSlots,l.$slots=dt(n,i)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return vt(e.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=vt(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,r){var o=Ft(s,e,t,n,r,f);return o&&!Array.isArray(o)&&(o.fnScopeId=c._scopeId,o.fnContext=i),o}:this._c=function(e,t,n,r){return Ft(s,e,t,n,r,f)}}function Mt(e,t,n,r,i){var o=be(e);return o.fnContext=n,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function Et(e,t){for(var n in t)e[x(n)]=t[n]}jt(Bt.prototype);var Lt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Lt.prepatch(n,n)}else(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;return o(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns),new e.componentOptions.Ctor(n)}(e,Xt)).$mount(t?e.elm:void 0,t)},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,i,o){var a=i.data.scopedSlots,s=e.$scopedSlots,l=!!(a&&!a.$stable||s!==r&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key),c=!!(o||e.$options._renderChildren||l);if(e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i),e.$options._renderChildren=o,e.$attrs=i.data.attrs||r,e.$listeners=n||r,t&&e.$options.props){Ae(!1);for(var u=e._props,f=e.$options._propKeys||[],d=0;d<f.length;d++){var p=f[d],v=e.$options.props;u[p]=Ne(p,v,t,e)}Ae(!0),e.$options.propsData=t}n=n||r;var h=e.$options._parentListeners;e.$options._parentListeners=n,Kt(e,n,h),c&&(e.$slots=dt(o,i.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,Qt(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,tn.push(t)):Yt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(!(n&&(t._directInactive=!0,Zt(t))||t._inactive)){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);Qt(t,"deactivated")}}(t,!0):t.$destroy())}},Pt=Object.keys(Lt);function It(e,t,n,s,c){if(!i(e)){var u=n.$options._base;if(l(e)&&(e=u.extend(e)),"function"==typeof e){var f;if(i(e.cid)&&void 0===(e=function(e,t){if(a(e.error)&&o(e.errorComp))return e.errorComp;if(o(e.resolved))return e.resolved;var n=zt;if(n&&o(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),a(e.loading)&&o(e.loadingComp))return e.loadingComp;if(n&&!o(e.owners)){var r=e.owners=[n],s=!0,c=null,u=null;n.$on("hook:destroyed",(function(){return y(r,n)}));var f=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==u&&(clearTimeout(u),u=null))},p=P((function(n){e.resolved=Ut(n,t),s?r.length=0:f(!0)})),v=P((function(t){o(e.errorComp)&&(e.error=!0,f(!0))})),h=e(p,v);return l(h)&&(d(h)?i(e.resolved)&&h.then(p,v):d(h.component)&&(h.component.then(p,v),o(h.error)&&(e.errorComp=Ut(h.error,t)),o(h.loading)&&(e.loadingComp=Ut(h.loading,t),0===h.delay?e.loading=!0:c=setTimeout((function(){c=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,f(!1))}),h.delay||200)),o(h.timeout)&&(u=setTimeout((function(){u=null,i(e.resolved)&&v(null)}),h.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}(f=e,u)))return function(e,t,n,r,i){var o=ge();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:i},o}(f,t,n,s,c);t=t||{},wn(e),o(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),a=i[r],s=t.model.callback;o(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(i[r]=[s].concat(a)):i[r]=s}(e.options,t);var p=function(e,t,n){var r=t.options.props;if(!i(r)){var a={},s=e.attrs,l=e.props;if(o(s)||o(l))for(var c in r){var u=$(c);lt(a,l,c,u,!0)||lt(a,s,c,u,!1)}return a}}(t,e);if(a(e.options.functional))return function(e,t,n,i,a){var s=e.options,l={},c=s.props;if(o(c))for(var u in c)l[u]=Ne(u,c,t||r);else o(n.attrs)&&Et(l,n.attrs),o(n.props)&&Et(l,n.props);var f=new Bt(n,l,a,i,e),d=s.render.call(null,f._c,f);if(d instanceof he)return Mt(d,n,f.parent,s);if(Array.isArray(d)){for(var p=ct(d)||[],v=new Array(p.length),h=0;h<p.length;h++)v[h]=Mt(p[h],n,f.parent,s);return v}}(e,p,t,n,s);var v=t.on;if(t.on=t.nativeOn,a(e.options.abstract)){var h=t.slot;t={},h&&(t.slot=h)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Pt.length;n++){var r=Pt[n],i=t[r],o=Lt[r];i===o||i&&i._merged||(t[r]=i?Nt(o,i):o)}}(t);var m=e.options.name||c;return new he("vue-component-"+e.cid+(m?"-"+m:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:p,listeners:v,tag:c,children:s},f)}}}function Nt(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function Ft(e,t,n,r,c,u){return(Array.isArray(n)||s(n))&&(c=r,r=n,n=void 0),a(u)&&(c=2),function(e,t,n,r,s){return o(n)&&o(n.__ob__)?ge():(o(n)&&o(n.is)&&(t=n.is),t?(Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0),2===s?r=ct(r):1===s&&(r=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(r)),"string"==typeof t?(u=e.$vnode&&e.$vnode.ns||R.getTagNamespace(t),c=R.isReservedTag(t)?new he(R.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!o(f=Ie(e.$options,"components",t))?new he(t,n,r,void 0,void 0,e):It(f,n,e,r,t)):c=It(t,n,e,r),Array.isArray(c)?c:o(c)?(o(u)&&function e(t,n,r){if(t.ns=n,"foreignObject"===t.tag&&(n=void 0,r=!0),o(t.children))for(var s=0,l=t.children.length;s<l;s++){var c=t.children[s];o(c.tag)&&(i(c.ns)||a(r)&&"svg"!==c.tag)&&e(c,n,r)}}(c,u),o(n)&&function(e){l(e.style)&&rt(e.style),l(e.class)&&rt(e.class)}(n),c):ge()):ge());var c,u,f}(e,t,n,r,c)}var Rt,zt=null;function Ut(e,t){return(e.__esModule||le&&"Module"===e[Symbol.toStringTag])&&(e=e.default),l(e)?t.extend(e):e}function Ht(e){return e.isComment&&e.asyncFactory}function qt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(o(n)&&(o(n.componentOptions)||Ht(n)))return n}}function Vt(e,t){Rt.$on(e,t)}function Wt(e,t){Rt.$off(e,t)}function Jt(e,t){var n=Rt;return function r(){null!==t.apply(null,arguments)&&n.$off(e,r)}}function Kt(e,t,n){Rt=e,at(t,n||{},Vt,Wt,Jt,e),Rt=void 0}var Xt=null;function Gt(e){var t=Xt;return Xt=e,function(){Xt=t}}function Zt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Yt(e,t){if(t){if(e._directInactive=!1,Zt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Yt(e.$children[n]);Qt(e,"activated")}}function Qt(e,t){pe();var n=e.$options[t],r=t+" hook";if(n)for(var i=0,o=n.length;i<o;i++)He(n[i],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),ve()}var en=[],tn=[],nn={},rn=!1,on=!1,an=0,sn=0,ln=Date.now;if(W&&!G){var cn=window.performance;cn&&"function"==typeof cn.now&&ln()>document.createEvent("Event").timeStamp&&(ln=function(){return cn.now()})}function un(){var e,t;for(sn=ln(),on=!0,en.sort((function(e,t){return e.id-t.id})),an=0;an<en.length;an++)(e=en[an]).before&&e.before(),t=e.id,nn[t]=null,e.run();var n=tn.slice(),r=en.slice();an=en.length=tn.length=0,nn={},rn=on=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Yt(e[t],!0)}(n),function(e){for(var t=e.length;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&Qt(r,"updated")}}(r),oe&&R.devtools&&oe.emit("flush")}var fn=0,dn=function(e,t,n,r,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++fn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new se,this.newDepIds=new se,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!q.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=j)),this.value=this.lazy?void 0:this.get()};dn.prototype.get=function(){var e;pe(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Ue(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&rt(e),ve(),this.cleanupDeps()}return e},dn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},dn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},dn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==nn[t]){if(nn[t]=!0,on){for(var n=en.length-1;n>an&&en[n].id>e.id;)n--;en.splice(n+1,0,e)}else en.push(e);rn||(rn=!0,tt(un))}}(this)},dn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Ue(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},dn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},dn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},dn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||y(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var pn={enumerable:!0,configurable:!0,get:j,set:j};function vn(e,t,n){pn.get=function(){return this[t][n]},pn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,pn)}var hn={lazy:!0};function mn(e,t,n){var r=!ie();"function"==typeof n?(pn.get=r?gn(t):yn(n),pn.set=j):(pn.get=n.get?r&&!1!==n.cache?gn(t):yn(n.get):j,pn.set=n.set||j),Object.defineProperty(e,t,pn)}function gn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),fe.target&&t.depend(),t.value}}function yn(e){return function(){return e.call(this,this)}}function bn(e,t,n,r){return u(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var _n=0;function wn(e){var t=e.options;if(e.super){var n=wn(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var i in n)n[i]!==r[i]&&(t||(t={}),t[i]=n[i]);return t}(e);r&&S(e.extendOptions,r),(t=e.options=Pe(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Cn(e){this._init(e)}function xn(e){return e&&(e.Ctor.options.name||e.tag)}function An(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:(n=e,"[object RegExp]"===c.call(n)&&e.test(t));var n}function kn(e,t){var n=e.cache,r=e.keys,i=e._vnode;for(var o in n){var a=n[o];if(a){var s=xn(a.componentOptions);s&&!t(s)&&$n(n,o,r,i)}}}function $n(e,t,n,r){var i=e[t];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),e[t]=null,y(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=_n++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var i=r.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Pe(wn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Kt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,i=n&&n.context;e.$slots=dt(t._renderChildren,i),e.$scopedSlots=r,e._c=function(t,n,r,i){return Ft(e,t,n,r,i,!1)},e.$createElement=function(t,n,r,i){return Ft(e,t,n,r,i,!0)};var o=n&&n.data;Oe(e,"$attrs",o&&o.attrs||r,null,!0),Oe(e,"$listeners",t._parentListeners||r,null,!0)}(t),Qt(t,"beforeCreate"),function(e){var t=ft(e.$options.inject,e);t&&(Ae(!1),Object.keys(t).forEach((function(n){Oe(e,n,t[n])})),Ae(!0))}(t),function(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},i=e.$options._propKeys=[];e.$parent&&Ae(!1);var o=function(o){i.push(o);var a=Ne(o,t,n,e);Oe(r,o,a),o in e||vn(e,"_props",o)};for(var a in t)o(a);Ae(!0)}(e,t.props),t.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?j:O(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;u(t=e._data="function"==typeof t?function(e,t){pe();try{return e.call(t,t)}catch(e){return Ue(e,t,"data()"),{}}finally{ve()}}(t,e):t||{})||(t={});for(var n,r=Object.keys(t),i=e.$options.props,o=(e.$options.methods,r.length);o--;){var a=r[o];i&&_(i,a)||36!==(n=(a+"").charCodeAt(0))&&95!==n&&vn(e,"_data",a)}$e(t,!0)}(e):$e(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=ie();for(var i in t){var o=t[i],a="function"==typeof o?o:o.get;r||(n[i]=new dn(e,a||j,j,hn)),i in e||mn(e,i,o)}}(e,t.computed),t.watch&&t.watch!==te&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)bn(e,n,r[i]);else bn(e,n,r)}}(e,t.watch)}(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),Qt(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Cn),function(e){Object.defineProperty(e.prototype,"$data",{get:function(){return this._data}}),Object.defineProperty(e.prototype,"$props",{get:function(){return this._props}}),e.prototype.$set=De,e.prototype.$delete=Se,e.prototype.$watch=function(e,t,n){if(u(t))return bn(this,e,t,n);(n=n||{}).user=!0;var r=new dn(this,e,t,n);if(n.immediate)try{t.call(this,r.value)}catch(e){Ue(e,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(Cn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var i=0,o=e.length;i<o;i++)r.$on(e[i],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,i=e.length;r<i;r++)n.$off(e[r],t);return n}var o,a=n._events[e];if(!a)return n;if(!t)return n._events[e]=null,n;for(var s=a.length;s--;)if((o=a[s])===t||o.fn===t){a.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this._events[e];if(t){t=t.length>1?D(t):t;for(var n=D(arguments,1),r='event handler for "'+e+'"',i=0,o=t.length;i<o;i++)He(t[i],this,n,this,r)}return this}}(Cn),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,i=n._vnode,o=Gt(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),o(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Qt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||y(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Qt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Cn),function(e){jt(e.prototype),e.prototype.$nextTick=function(e){return tt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,i=n._parentVnode;i&&(t.$scopedSlots=vt(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{zt=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){Ue(n,t,"render"),e=t._vnode}finally{zt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=ge()),e.parent=i,e}}(Cn);var On=[String,RegExp,Array],Dn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:On,exclude:On,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)$n(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){kn(e,(function(e){return An(t,e)}))})),this.$watch("exclude",(function(t){kn(e,(function(e){return!An(t,e)}))}))},render:function(){var e=this.$slots.default,t=qt(e),n=t&&t.componentOptions;if(n){var r=xn(n),i=this.include,o=this.exclude;if(i&&(!r||!An(i,r))||o&&r&&An(o,r))return t;var a=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;a[l]?(t.componentInstance=a[l].componentInstance,y(s,l),s.push(l)):(a[l]=t,s.push(l),this.max&&s.length>parseInt(this.max)&&$n(a,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return R}};Object.defineProperty(e,"config",t),e.util={warn:ce,extend:S,mergeOptions:Pe,defineReactive:Oe},e.set=De,e.delete=Se,e.nextTick=tt,e.observable=function(e){return $e(e),e},e.options=Object.create(null),N.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,S(e.options.components,Dn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=D(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Pe(this.options,e),this}}(e),function(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,i=e._Ctor||(e._Ctor={});if(i[r])return i[r];var o=e.name||n.options.name,a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=Pe(n.options,e),a.super=n,a.options.props&&function(e){var t=e.options.props;for(var n in t)vn(e.prototype,"_props",n)}(a),a.options.computed&&function(e){var t=e.options.computed;for(var n in t)mn(e.prototype,n,t[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,N.forEach((function(e){a[e]=n[e]})),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=S({},a.options),i[r]=a,a}}(e),function(e){N.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&u(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Cn),Object.defineProperty(Cn.prototype,"$isServer",{get:ie}),Object.defineProperty(Cn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Cn,"FunctionalRenderContext",{value:Bt}),Cn.version="2.6.12";var Sn=h("style,class"),Tn=h("input,textarea,option,select,progress"),jn=function(e,t,n){return"value"===n&&Tn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Bn=h("contenteditable,draggable,spellcheck"),Mn=h("events,caret,typing,plaintext-only"),En=h("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Ln="http://www.w3.org/1999/xlink",Pn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},In=function(e){return Pn(e)?e.slice(6,e.length):""},Nn=function(e){return null==e||!1===e};function Fn(e,t){return{staticClass:Rn(e.staticClass,t.staticClass),class:o(e.class)?[e.class,t.class]:t.class}}function Rn(e,t){return e?t?e+" "+t:e:t||""}function zn(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,i=e.length;r<i;r++)o(t=zn(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):l(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Un={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Hn=h("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),qn=h("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Vn=function(e){return Hn(e)||qn(e)};function Wn(e){return qn(e)?"svg":"math"===e?"math":void 0}var Jn=Object.create(null),Kn=h("text,number,password,search,email,tel,url");function Xn(e){return"string"==typeof e?document.querySelector(e)||document.createElement("div"):e}var Gn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Un[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Zn={create:function(e,t){Yn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Yn(e,!0),Yn(t))},destroy:function(e){Yn(e,!0)}};function Yn(e,t){var n=e.data.ref;if(o(n)){var r=e.context,i=e.componentInstance||e.elm,a=r.$refs;t?Array.isArray(a[n])?y(a[n],i):a[n]===i&&(a[n]=void 0):e.data.refInFor?Array.isArray(a[n])?a[n].indexOf(i)<0&&a[n].push(i):a[n]=[i]:a[n]=i}}var Qn=new he("",{},[]),er=["create","activate","update","remove","destroy"];function tr(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&o(e.data)===o(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=o(n=e.data)&&o(n=n.attrs)&&n.type,i=o(n=t.data)&&o(n=n.attrs)&&n.type;return r===i||Kn(r)&&Kn(i)}(e,t)||a(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&i(t.asyncFactory.error))}function nr(e,t,n){var r,i,a={};for(r=t;r<=n;++r)o(i=e[r].key)&&(a[i]=r);return a}var rr={create:ir,update:ir,destroy:function(e){ir(e,Qn)}};function ir(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,i,o=e===Qn,a=t===Qn,s=ar(e.data.directives,e.context),l=ar(t.data.directives,t.context),c=[],u=[];for(n in l)r=s[n],i=l[n],r?(i.oldValue=r.value,i.oldArg=r.arg,lr(i,"update",t,e),i.def&&i.def.componentUpdated&&u.push(i)):(lr(i,"bind",t,e),i.def&&i.def.inserted&&c.push(i));if(c.length){var f=function(){for(var n=0;n<c.length;n++)lr(c[n],"inserted",t,e)};o?st(t,"insert",f):f()}if(u.length&&st(t,"postpatch",(function(){for(var n=0;n<u.length;n++)lr(u[n],"componentUpdated",t,e)})),!o)for(n in s)l[n]||lr(s[n],"unbind",e,e,a)}(e,t)}var or=Object.create(null);function ar(e,t){var n,r,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=or),i[sr(r)]=r,r.def=Ie(t.$options,"directives",r.name);return i}function sr(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function lr(e,t,n,r,i){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,i)}catch(r){Ue(r,n.context,"directive "+e.name+" "+t+" hook")}}var cr=[Zn,rr];function ur(e,t){var n=t.componentOptions;if(!(o(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var r,a,s=t.elm,l=e.data.attrs||{},c=t.data.attrs||{};for(r in o(c.__ob__)&&(c=t.data.attrs=S({},c)),c)a=c[r],l[r]!==a&&fr(s,r,a);for(r in(G||Y)&&c.value!==l.value&&fr(s,"value",c.value),l)i(c[r])&&(Pn(r)?s.removeAttributeNS(Ln,In(r)):Bn(r)||s.removeAttribute(r))}}function fr(e,t,n){e.tagName.indexOf("-")>-1?dr(e,t,n):En(t)?Nn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Bn(t)?e.setAttribute(t,function(e,t){return Nn(t)||"false"===t?"false":"contenteditable"===e&&Mn(t)?t:"true"}(t,n)):Pn(t)?Nn(n)?e.removeAttributeNS(Ln,In(t)):e.setAttributeNS(Ln,t,n):dr(e,t,n)}function dr(e,t,n){if(Nn(n))e.removeAttribute(t);else{if(G&&!Z&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var pr={create:ur,update:ur};function vr(e,t){var n=t.elm,r=t.data,a=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var s=function(e){for(var t=e.data,n=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=Fn(r.data,t));for(;o(n=n.parent);)n&&n.data&&(t=Fn(t,n.data));return function(e,t){return o(e)||o(t)?Rn(e,zn(t)):""}(t.staticClass,t.class)}(t),l=n._transitionClasses;o(l)&&(s=Rn(s,zn(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var hr,mr,gr,yr,br,_r,wr={create:vr,update:vr},Cr=/[\w).+\-_$\]]/;function xr(e){var t,n,r,i,o,a=!1,s=!1,l=!1,c=!1,u=0,f=0,d=0,p=0;for(r=0;r<e.length;r++)if(n=t,t=e.charCodeAt(r),a)39===t&&92!==n&&(a=!1);else if(s)34===t&&92!==n&&(s=!1);else if(l)96===t&&92!==n&&(l=!1);else if(c)47===t&&92!==n&&(c=!1);else if(124!==t||124===e.charCodeAt(r+1)||124===e.charCodeAt(r-1)||u||f||d){switch(t){case 34:s=!0;break;case 39:a=!0;break;case 96:l=!0;break;case 40:d++;break;case 41:d--;break;case 91:f++;break;case 93:f--;break;case 123:u++;break;case 125:u--}if(47===t){for(var v=r-1,h=void 0;v>=0&&" "===(h=e.charAt(v));v--);h&&Cr.test(h)||(c=!0)}}else void 0===i?(p=r+1,i=e.slice(0,r).trim()):m();function m(){(o||(o=[])).push(e.slice(p,r).trim()),p=r+1}if(void 0===i?i=e.slice(0,r).trim():0!==p&&m(),o)for(r=0;r<o.length;r++)i=Ar(i,o[r]);return i}function Ar(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var r=t.slice(0,n),i=t.slice(n+1);return'_f("'+r+'")('+e+(")"!==i?","+i:i)}function kr(e,t){console.error("[Vue compiler]: "+e)}function $r(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Or(e,t,n,r,i){(e.props||(e.props=[])).push(Pr({name:t,value:n,dynamic:i},r)),e.plain=!1}function Dr(e,t,n,r,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(Pr({name:t,value:n,dynamic:i},r)),e.plain=!1}function Sr(e,t,n,r){e.attrsMap[t]=n,e.attrsList.push(Pr({name:t,value:n},r))}function Tr(e,t,n,r,i,o,a,s){(e.directives||(e.directives=[])).push(Pr({name:t,rawName:n,value:r,arg:i,isDynamicArg:o,modifiers:a},s)),e.plain=!1}function jr(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function Br(e,t,n,i,o,a,s,l){var c;(i=i||r).right?l?t="("+t+")==='click'?'contextmenu':("+t+")":"click"===t&&(t="contextmenu",delete i.right):i.middle&&(l?t="("+t+")==='click'?'mouseup':("+t+")":"click"===t&&(t="mouseup")),i.capture&&(delete i.capture,t=jr("!",t,l)),i.once&&(delete i.once,t=jr("~",t,l)),i.passive&&(delete i.passive,t=jr("&",t,l)),i.native?(delete i.native,c=e.nativeEvents||(e.nativeEvents={})):c=e.events||(e.events={});var u=Pr({value:n.trim(),dynamic:l},s);i!==r&&(u.modifiers=i);var f=c[t];Array.isArray(f)?o?f.unshift(u):f.push(u):c[t]=f?o?[u,f]:[f,u]:u,e.plain=!1}function Mr(e,t,n){var r=Er(e,":"+t)||Er(e,"v-bind:"+t);if(null!=r)return xr(r);if(!1!==n){var i=Er(e,t);if(null!=i)return JSON.stringify(i)}}function Er(e,t,n){var r;if(null!=(r=e.attrsMap[t]))for(var i=e.attrsList,o=0,a=i.length;o<a;o++)if(i[o].name===t){i.splice(o,1);break}return n&&delete e.attrsMap[t],r}function Lr(e,t){for(var n=e.attrsList,r=0,i=n.length;r<i;r++){var o=n[r];if(t.test(o.name))return n.splice(r,1),o}}function Pr(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function Ir(e,t,n){var r=n||{},i=r.number,o="$$v";r.trim&&(o="(typeof $$v === 'string'? $$v.trim(): $$v)"),i&&(o="_n("+o+")");var a=Nr(t,o);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+a+"}"}}function Nr(e,t){var n=function(e){if(e=e.trim(),hr=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<hr-1)return(yr=e.lastIndexOf("."))>-1?{exp:e.slice(0,yr),key:'"'+e.slice(yr+1)+'"'}:{exp:e,key:null};for(mr=e,yr=br=_r=0;!Rr();)zr(gr=Fr())?Hr(gr):91===gr&&Ur(gr);return{exp:e.slice(0,br),key:e.slice(br+1,_r)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function Fr(){return mr.charCodeAt(++yr)}function Rr(){return yr>=hr}function zr(e){return 34===e||39===e}function Ur(e){var t=1;for(br=yr;!Rr();)if(zr(e=Fr()))Hr(e);else if(91===e&&t++,93===e&&t--,0===t){_r=yr;break}}function Hr(e){for(var t=e;!Rr()&&(e=Fr())!==t;);}var qr;function Vr(e,t,n){var r=qr;return function i(){null!==t.apply(null,arguments)&&Kr(e,i,n,r)}}var Wr=Je&&!(ee&&Number(ee[1])<=53);function Jr(e,t,n,r){if(Wr){var i=sn,o=t;t=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}qr.addEventListener(e,t,ne?{capture:n,passive:r}:n)}function Kr(e,t,n,r){(r||qr).removeEventListener(e,t._wrapper||t,n)}function Xr(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},r=e.data.on||{};qr=t.elm,function(e){if(o(e.__r)){var t=G?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}o(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),at(n,r,Jr,Kr,Vr,t.context),qr=void 0}}var Gr,Zr={create:Xr,update:Xr};function Yr(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,r,a=t.elm,s=e.data.domProps||{},l=t.data.domProps||{};for(n in o(l.__ob__)&&(l=t.data.domProps=S({},l)),s)n in l||(a[n]="");for(n in l){if(r=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===s[n])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===n&&"PROGRESS"!==a.tagName){a._value=r;var c=i(r)?"":String(r);Qr(a,c)&&(a.value=c)}else if("innerHTML"===n&&qn(a.tagName)&&i(a.innerHTML)){(Gr=Gr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=Gr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;u.firstChild;)a.appendChild(u.firstChild)}else if(r!==s[n])try{a[n]=r}catch(e){}}}}function Qr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,r=e._vModifiers;if(o(r)){if(r.number)return v(n)!==v(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var ei={create:Yr,update:Yr},ti=w((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function ni(e){var t=ri(e.style);return e.staticStyle?S(e.staticStyle,t):t}function ri(e){return Array.isArray(e)?T(e):"string"==typeof e?ti(e):e}var ii,oi=/^--/,ai=/\s*!important$/,si=function(e,t,n){if(oi.test(t))e.style.setProperty(t,n);else if(ai.test(n))e.style.setProperty($(t),n.replace(ai,""),"important");else{var r=ci(t);if(Array.isArray(n))for(var i=0,o=n.length;i<o;i++)e.style[r]=n[i];else e.style[r]=n}},li=["Webkit","Moz","ms"],ci=w((function(e){if(ii=ii||document.createElement("div").style,"filter"!==(e=x(e))&&e in ii)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<li.length;n++){var r=li[n]+t;if(r in ii)return r}}));function ui(e,t){var n=t.data,r=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(r.staticStyle)&&i(r.style))){var a,s,l=t.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},f=c||u,d=ri(t.data.style)||{};t.data.normalizedStyle=o(d.__ob__)?S({},d):d;var p=function(e,t){for(var n,r={},i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=ni(i.data))&&S(r,n);(n=ni(e.data))&&S(r,n);for(var o=e;o=o.parent;)o.data&&(n=ni(o.data))&&S(r,n);return r}(t);for(s in f)i(p[s])&&si(l,s,"");for(s in p)(a=p[s])!==f[s]&&si(l,s,null==a?"":a)}}var fi={create:ui,update:ui},di=/\s+/;function pi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(di).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function vi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(di).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function hi(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&S(t,mi(e.name||"v")),S(t,e),t}return"string"==typeof e?mi(e):void 0}}var mi=w((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),gi=W&&!Z,yi="transition",bi="animation",_i="transition",wi="transitionend",Ci="animation",xi="animationend";gi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(_i="WebkitTransition",wi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ci="WebkitAnimation",xi="webkitAnimationEnd"));var Ai=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function ki(e){Ai((function(){Ai(e)}))}function $i(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),pi(e,t))}function Oi(e,t){e._transitionClasses&&y(e._transitionClasses,t),vi(e,t)}function Di(e,t,n){var r=Ti(e,t),i=r.type,o=r.timeout,a=r.propCount;if(!i)return n();var s=i===yi?wi:xi,l=0,c=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++l>=a&&c()};setTimeout((function(){l<a&&c()}),o+1),e.addEventListener(s,u)}var Si=/\b(transform|all)(,|$)/;function Ti(e,t){var n,r=window.getComputedStyle(e),i=(r[_i+"Delay"]||"").split(", "),o=(r[_i+"Duration"]||"").split(", "),a=ji(i,o),s=(r[Ci+"Delay"]||"").split(", "),l=(r[Ci+"Duration"]||"").split(", "),c=ji(s,l),u=0,f=0;return t===yi?a>0&&(n=yi,u=a,f=o.length):t===bi?c>0&&(n=bi,u=c,f=l.length):f=(n=(u=Math.max(a,c))>0?a>c?yi:bi:null)?n===yi?o.length:l.length:0,{type:n,timeout:u,propCount:f,hasTransform:n===yi&&Si.test(r[_i+"Property"])}}function ji(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Bi(t)+Bi(e[n])})))}function Bi(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Mi(e,t){var n=e.elm;o(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=hi(e.data.transition);if(!i(r)&&!o(n._enterCb)&&1===n.nodeType){for(var a=r.css,s=r.type,c=r.enterClass,u=r.enterToClass,f=r.enterActiveClass,d=r.appearClass,p=r.appearToClass,h=r.appearActiveClass,m=r.beforeEnter,g=r.enter,y=r.afterEnter,b=r.enterCancelled,_=r.beforeAppear,w=r.appear,C=r.afterAppear,x=r.appearCancelled,A=r.duration,k=Xt,$=Xt.$vnode;$&&$.parent;)k=$.context,$=$.parent;var O=!k._isMounted||!e.isRootInsert;if(!O||w||""===w){var D=O&&d?d:c,S=O&&h?h:f,T=O&&p?p:u,j=O&&_||m,B=O&&"function"==typeof w?w:g,M=O&&C||y,E=O&&x||b,L=v(l(A)?A.enter:A),I=!1!==a&&!Z,N=Pi(B),F=n._enterCb=P((function(){I&&(Oi(n,T),Oi(n,S)),F.cancelled?(I&&Oi(n,D),E&&E(n)):M&&M(n),n._enterCb=null}));e.data.show||st(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),B&&B(n,F)})),j&&j(n),I&&($i(n,D),$i(n,S),ki((function(){Oi(n,D),F.cancelled||($i(n,T),N||(Li(L)?setTimeout(F,L):Di(n,s,F)))}))),e.data.show&&(t&&t(),B&&B(n,F)),I||N||F()}}}function Ei(e,t){var n=e.elm;o(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=hi(e.data.transition);if(i(r)||1!==n.nodeType)return t();if(!o(n._leaveCb)){var a=r.css,s=r.type,c=r.leaveClass,u=r.leaveToClass,f=r.leaveActiveClass,d=r.beforeLeave,p=r.leave,h=r.afterLeave,m=r.leaveCancelled,g=r.delayLeave,y=r.duration,b=!1!==a&&!Z,_=Pi(p),w=v(l(y)?y.leave:y),C=n._leaveCb=P((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),b&&(Oi(n,u),Oi(n,f)),C.cancelled?(b&&Oi(n,c),m&&m(n)):(t(),h&&h(n)),n._leaveCb=null}));g?g(x):x()}function x(){C.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),d&&d(n),b&&($i(n,c),$i(n,f),ki((function(){Oi(n,c),C.cancelled||($i(n,u),_||(Li(w)?setTimeout(C,w):Di(n,s,C)))}))),p&&p(n,C),b||_||C())}}function Li(e){return"number"==typeof e&&!isNaN(e)}function Pi(e){if(i(e))return!1;var t=e.fns;return o(t)?Pi(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Ii(e,t){!0!==t.data.show&&Mi(t)}var Ni=function(e){var t,n,r={},l=e.modules,c=e.nodeOps;for(t=0;t<er.length;++t)for(r[er[t]]=[],n=0;n<l.length;++n)o(l[n][er[t]])&&r[er[t]].push(l[n][er[t]]);function u(e){var t=c.parentNode(e);o(t)&&c.removeChild(t,e)}function f(e,t,n,i,s,l,u){if(o(e.elm)&&o(l)&&(e=l[u]=be(e)),e.isRootInsert=!s,!function(e,t,n,i){var s=e.data;if(o(s)){var l=o(e.componentInstance)&&s.keepAlive;if(o(s=s.hook)&&o(s=s.init)&&s(e,!1),o(e.componentInstance))return d(e,t),p(n,e.elm,i),a(l)&&function(e,t,n,i){for(var a,s=e;s.componentInstance;)if(o(a=(s=s.componentInstance._vnode).data)&&o(a=a.transition)){for(a=0;a<r.activate.length;++a)r.activate[a](Qn,s);t.push(s);break}p(n,e.elm,i)}(e,t,n,i),!0}}(e,t,n,i)){var f=e.data,h=e.children,m=e.tag;o(m)?(e.elm=e.ns?c.createElementNS(e.ns,m):c.createElement(m,e),y(e),v(e,h,t),o(f)&&g(e,t),p(n,e.elm,i)):a(e.isComment)?(e.elm=c.createComment(e.text),p(n,e.elm,i)):(e.elm=c.createTextNode(e.text),p(n,e.elm,i))}}function d(e,t){o(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,m(e)?(g(e,t),y(e)):(Yn(e),t.push(e))}function p(e,t,n){o(e)&&(o(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function v(e,t,n){if(Array.isArray(t))for(var r=0;r<t.length;++r)f(t[r],n,e.elm,null,!0,t,r);else s(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function m(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return o(e.tag)}function g(e,n){for(var i=0;i<r.create.length;++i)r.create[i](Qn,e);o(t=e.data.hook)&&(o(t.create)&&t.create(Qn,e),o(t.insert)&&n.push(e))}function y(e){var t;if(o(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)o(t=n.context)&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;o(t=Xt)&&t!==e.context&&t!==e.fnContext&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function b(e,t,n,r,i,o){for(;r<=i;++r)f(n[r],o,e,t,!1,n,r)}function _(e){var t,n,i=e.data;if(o(i))for(o(t=i.hook)&&o(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(o(t=e.children))for(n=0;n<e.children.length;++n)_(e.children[n])}function w(e,t,n){for(;t<=n;++t){var r=e[t];o(r)&&(o(r.tag)?(C(r),_(r)):u(r.elm))}}function C(e,t){if(o(t)||o(e.data)){var n,i=r.remove.length+1;for(o(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,i),o(n=e.componentInstance)&&o(n=n._vnode)&&o(n.data)&&C(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);o(n=e.data.hook)&&o(n=n.remove)?n(e,t):t()}else u(e.elm)}function x(e,t,n,r){for(var i=n;i<r;i++){var a=t[i];if(o(a)&&tr(e,a))return i}}function A(e,t,n,s,l,u){if(e!==t){o(t.elm)&&o(s)&&(t=s[l]=be(t));var d=t.elm=e.elm;if(a(e.isAsyncPlaceholder))o(t.asyncFactory.resolved)?O(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(a(t.isStatic)&&a(e.isStatic)&&t.key===e.key&&(a(t.isCloned)||a(t.isOnce)))t.componentInstance=e.componentInstance;else{var p,v=t.data;o(v)&&o(p=v.hook)&&o(p=p.prepatch)&&p(e,t);var h=e.children,g=t.children;if(o(v)&&m(t)){for(p=0;p<r.update.length;++p)r.update[p](e,t);o(p=v.hook)&&o(p=p.update)&&p(e,t)}i(t.text)?o(h)&&o(g)?h!==g&&function(e,t,n,r,a){for(var s,l,u,d=0,p=0,v=t.length-1,h=t[0],m=t[v],g=n.length-1,y=n[0],_=n[g],C=!a;d<=v&&p<=g;)i(h)?h=t[++d]:i(m)?m=t[--v]:tr(h,y)?(A(h,y,r,n,p),h=t[++d],y=n[++p]):tr(m,_)?(A(m,_,r,n,g),m=t[--v],_=n[--g]):tr(h,_)?(A(h,_,r,n,g),C&&c.insertBefore(e,h.elm,c.nextSibling(m.elm)),h=t[++d],_=n[--g]):tr(m,y)?(A(m,y,r,n,p),C&&c.insertBefore(e,m.elm,h.elm),m=t[--v],y=n[++p]):(i(s)&&(s=nr(t,d,v)),i(l=o(y.key)?s[y.key]:x(y,t,d,v))?f(y,r,e,h.elm,!1,n,p):tr(u=t[l],y)?(A(u,y,r,n,p),t[l]=void 0,C&&c.insertBefore(e,u.elm,h.elm)):f(y,r,e,h.elm,!1,n,p),y=n[++p]);d>v?b(e,i(n[g+1])?null:n[g+1].elm,n,p,g,r):p>g&&w(t,d,v)}(d,h,g,n,u):o(g)?(o(e.text)&&c.setTextContent(d,""),b(d,null,g,0,g.length-1,n)):o(h)?w(h,0,h.length-1):o(e.text)&&c.setTextContent(d,""):e.text!==t.text&&c.setTextContent(d,t.text),o(v)&&o(p=v.hook)&&o(p=p.postpatch)&&p(e,t)}}}function k(e,t,n){if(a(n)&&o(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var $=h("attrs,class,staticClass,staticStyle,key");function O(e,t,n,r){var i,s=t.tag,l=t.data,c=t.children;if(r=r||l&&l.pre,t.elm=e,a(t.isComment)&&o(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(i=l.hook)&&o(i=i.init)&&i(t,!0),o(i=t.componentInstance)))return d(t,n),!0;if(o(s)){if(o(c))if(e.hasChildNodes())if(o(i=l)&&o(i=i.domProps)&&o(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var u=!0,f=e.firstChild,p=0;p<c.length;p++){if(!f||!O(f,c[p],n,r)){u=!1;break}f=f.nextSibling}if(!u||f)return!1}else v(t,c,n);if(o(l)){var h=!1;for(var m in l)if(!$(m)){h=!0,g(t,n);break}!h&&l.class&&rt(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,s){if(!i(t)){var l,u=!1,d=[];if(i(e))u=!0,f(t,d);else{var p=o(e.nodeType);if(!p&&tr(e,t))A(e,t,d,null,null,s);else{if(p){if(1===e.nodeType&&e.hasAttribute(I)&&(e.removeAttribute(I),n=!0),a(n)&&O(e,t,d))return k(t,d,!0),e;l=e,e=new he(c.tagName(l).toLowerCase(),{},[],void 0,l)}var v=e.elm,h=c.parentNode(v);if(f(t,d,v._leaveCb?null:h,c.nextSibling(v)),o(t.parent))for(var g=t.parent,y=m(t);g;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](g);if(g.elm=t.elm,y){for(var C=0;C<r.create.length;++C)r.create[C](Qn,g);var x=g.data.hook.insert;if(x.merged)for(var $=1;$<x.fns.length;$++)x.fns[$]()}else Yn(g);g=g.parent}o(h)?w([e],0,0):o(e.tag)&&_(e)}}return k(t,d,u),t.elm}o(e)&&_(e)}}({nodeOps:Gn,modules:[pr,wr,Zr,ei,fi,W?{create:Ii,activate:Ii,remove:function(e,t){!0!==e.data.show?Ei(e,t):t()}}:{}].concat(cr)});Z&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Wi(e,"input")}));var Fi={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?st(n,"postpatch",(function(){Fi.componentUpdated(e,t,n)})):Ri(e,t,n.context),e._vOptions=[].map.call(e.options,Hi)):("textarea"===n.tag||Kn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",qi),e.addEventListener("compositionend",Vi),e.addEventListener("change",Vi),Z&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Ri(e,t,n.context);var r=e._vOptions,i=e._vOptions=[].map.call(e.options,Hi);i.some((function(e,t){return!E(e,r[t])}))&&(e.multiple?t.value.some((function(e){return Ui(e,i)})):t.value!==t.oldValue&&Ui(t.value,i))&&Wi(e,"change")}}};function Ri(e,t,n){zi(e,t),(G||Y)&&setTimeout((function(){zi(e,t)}),0)}function zi(e,t,n){var r=t.value,i=e.multiple;if(!i||Array.isArray(r)){for(var o,a,s=0,l=e.options.length;s<l;s++)if(a=e.options[s],i)o=L(r,Hi(a))>-1,a.selected!==o&&(a.selected=o);else if(E(Hi(a),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function Ui(e,t){return t.every((function(t){return!E(t,e)}))}function Hi(e){return"_value"in e?e._value:e.value}function qi(e){e.target.composing=!0}function Vi(e){e.target.composing&&(e.target.composing=!1,Wi(e.target,"input"))}function Wi(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Ji(e){return!e.componentInstance||e.data&&e.data.transition?e:Ji(e.componentInstance._vnode)}var Ki={model:Fi,show:{bind:function(e,t,n){var r=t.value,i=(n=Ji(n)).data&&n.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&i?(n.data.show=!0,Mi(n,(function(){e.style.display=o}))):e.style.display=r?o:"none"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=Ji(n)).data&&n.data.transition?(n.data.show=!0,r?Mi(n,(function(){e.style.display=e.__vOriginalDisplay})):Ei(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,i){i||(e.style.display=e.__vOriginalDisplay)}}},Xi={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Gi(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Gi(qt(t.children)):e}function Zi(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var i=n._parentListeners;for(var o in i)t[x(o)]=i[o];return t}function Yi(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Qi=function(e){return e.tag||Ht(e)},eo=function(e){return"show"===e.name},to={name:"transition",props:Xi,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Qi)).length){var r=this.mode,i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var o=Gi(i);if(!o)return i;if(this._leaving)return Yi(e,i);var a="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?a+"comment":a+o.tag:s(o.key)?0===String(o.key).indexOf(a)?o.key:a+o.key:o.key;var l=(o.data||(o.data={})).transition=Zi(this),c=this._vnode,u=Gi(c);if(o.data.directives&&o.data.directives.some(eo)&&(o.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(o,u)&&!Ht(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var f=u.data.transition=S({},l);if("out-in"===r)return this._leaving=!0,st(f,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Yi(e,i);if("in-out"===r){if(Ht(o))return c;var d,p=function(){d()};st(l,"afterEnter",p),st(l,"enterCancelled",p),st(f,"delayLeave",(function(e){d=e}))}}return i}}},no=S({tag:String,moveClass:String},Xi);function ro(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function io(e){e.data.newPos=e.elm.getBoundingClientRect()}function oo(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,i=t.top-n.top;if(r||i){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+i+"px)",o.transitionDuration="0s"}}delete no.mode;var ao={Transition:to,TransitionGroup:{props:no,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var i=Gt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=Zi(this),s=0;s<i.length;s++){var l=i[s];l.tag&&null!=l.key&&0!==String(l.key).indexOf("__vlist")&&(o.push(l),n[l.key]=l,(l.data||(l.data={})).transition=a)}if(r){for(var c=[],u=[],f=0;f<r.length;f++){var d=r[f];d.data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?c.push(d):u.push(d)}this.kept=e(t,null,c),this.removed=u}return e(t,null,o)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(ro),e.forEach(io),e.forEach(oo),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;$i(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(wi,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(wi,e),n._moveCb=null,Oi(n,t))})}})))},methods:{hasMove:function(e,t){if(!gi)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){vi(n,e)})),pi(n,t),n.style.display="none",this.$el.appendChild(n);var r=Ti(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};Cn.config.mustUseProp=jn,Cn.config.isReservedTag=Vn,Cn.config.isReservedAttr=Sn,Cn.config.getTagNamespace=Wn,Cn.config.isUnknownElement=function(e){if(!W)return!0;if(Vn(e))return!1;if(e=e.toLowerCase(),null!=Jn[e])return Jn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Jn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Jn[e]=/HTMLUnknownElement/.test(t.toString())},S(Cn.options.directives,Ki),S(Cn.options.components,ao),Cn.prototype.__patch__=W?Ni:j,Cn.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=ge),Qt(e,"beforeMount"),r=function(){e._update(e._render(),n)},new dn(e,r,j,{before:function(){e._isMounted&&!e._isDestroyed&&Qt(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,Qt(e,"mounted")),e}(this,e=e&&W?Xn(e):void 0,t)},W&&setTimeout((function(){R.devtools&&oe&&oe.emit("init",Cn)}),0);var so,lo=/\{\{((?:.|\r?\n)+?)\}\}/g,co=/[-.*+?^${}()|[\]\/\\]/g,uo=w((function(e){var t=e[0].replace(co,"\\$&"),n=e[1].replace(co,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")})),fo={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=Er(e,"class");n&&(e.staticClass=JSON.stringify(n));var r=Mr(e,"class",!1);r&&(e.classBinding=r)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}},po={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=Er(e,"style");n&&(e.staticStyle=JSON.stringify(ti(n)));var r=Mr(e,"style",!1);r&&(e.styleBinding=r)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},vo=h("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),ho=h("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),mo=h("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),go=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,yo=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,bo="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+z.source+"]*",_o="((?:"+bo+"\\:)?"+bo+")",wo=new RegExp("^<"+_o),Co=/^\s*(\/?)>/,xo=new RegExp("^<\\/"+_o+"[^>]*>"),Ao=/^<!DOCTYPE [^>]+>/i,ko=/^<!\--/,$o=/^<!\[/,Oo=h("script,style,textarea",!0),Do={},So={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},To=/&(?:lt|gt|quot|amp|#39);/g,jo=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Bo=h("pre,textarea",!0),Mo=function(e,t){return e&&Bo(e)&&"\n"===t[0]};function Eo(e,t){var n=t?jo:To;return e.replace(n,(function(e){return So[e]}))}var Lo,Po,Io,No,Fo,Ro,zo,Uo,Ho=/^@|^v-on:/,qo=/^v-|^@|^:|^#/,Vo=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Wo=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Jo=/^\(|\)$/g,Ko=/^\[.*\]$/,Xo=/:(.*)$/,Go=/^:|^\.|^v-bind:/,Zo=/\.[^.\]]+(?=[^\]]*$)/g,Yo=/^v-slot(:|$)|^#/,Qo=/[\r\n]/,ea=/\s+/g,ta=w((function(e){return(so=so||document.createElement("div")).innerHTML=e,so.textContent})),na="_empty_";function ra(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:ca(t),rawAttrsMap:{},parent:n,children:[]}}function ia(e,t){var n,r;(r=Mr(n=e,"key"))&&(n.key=r),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=Mr(e,"ref");t&&(e.ref=t,e.refInFor=function(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=Er(e,"scope"),e.slotScope=t||Er(e,"slot-scope")):(t=Er(e,"slot-scope"))&&(e.slotScope=t);var n=Mr(e,"slot");if(n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Dr(e,"slot",n,function(e,t){return e.rawAttrsMap[":"+t]||e.rawAttrsMap["v-bind:"+t]||e.rawAttrsMap[t]}(e,"slot"))),"template"===e.tag){var r=Lr(e,Yo);if(r){var i=sa(r),o=i.name,a=i.dynamic;e.slotTarget=o,e.slotTargetDynamic=a,e.slotScope=r.value||na}}else{var s=Lr(e,Yo);if(s){var l=e.scopedSlots||(e.scopedSlots={}),c=sa(s),u=c.name,f=c.dynamic,d=l[u]=ra("template",[],e);d.slotTarget=u,d.slotTargetDynamic=f,d.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=d,!0})),d.slotScope=s.value||na,e.children=[],e.plain=!1}}}(e),function(e){"slot"===e.tag&&(e.slotName=Mr(e,"name"))}(e),function(e){var t;(t=Mr(e,"is"))&&(e.component=t),null!=Er(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var i=0;i<Io.length;i++)e=Io[i](e,t)||e;return function(e){var t,n,r,i,o,a,s,l,c=e.attrsList;for(t=0,n=c.length;t<n;t++)if(r=i=c[t].name,o=c[t].value,qo.test(r))if(e.hasBindings=!0,(a=la(r.replace(qo,"")))&&(r=r.replace(Zo,"")),Go.test(r))r=r.replace(Go,""),o=xr(o),(l=Ko.test(r))&&(r=r.slice(1,-1)),a&&(a.prop&&!l&&"innerHtml"===(r=x(r))&&(r="innerHTML"),a.camel&&!l&&(r=x(r)),a.sync&&(s=Nr(o,"$event"),l?Br(e,'"update:"+('+r+")",s,null,!1,0,c[t],!0):(Br(e,"update:"+x(r),s,null,!1,0,c[t]),$(r)!==x(r)&&Br(e,"update:"+$(r),s,null,!1,0,c[t])))),a&&a.prop||!e.component&&zo(e.tag,e.attrsMap.type,r)?Or(e,r,o,c[t],l):Dr(e,r,o,c[t],l);else if(Ho.test(r))r=r.replace(Ho,""),(l=Ko.test(r))&&(r=r.slice(1,-1)),Br(e,r,o,a,!1,0,c[t],l);else{var u=(r=r.replace(qo,"")).match(Xo),f=u&&u[1];l=!1,f&&(r=r.slice(0,-(f.length+1)),Ko.test(f)&&(f=f.slice(1,-1),l=!0)),Tr(e,r,i,o,f,l,a,c[t])}else Dr(e,r,JSON.stringify(o),c[t]),!e.component&&"muted"===r&&zo(e.tag,e.attrsMap.type,r)&&Or(e,r,"true",c[t])}(e),e}function oa(e){var t;if(t=Er(e,"v-for")){var n=function(e){var t=e.match(Vo);if(t){var n={};n.for=t[2].trim();var r=t[1].trim().replace(Jo,""),i=r.match(Wo);return i?(n.alias=r.replace(Wo,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=r,n}}(t);n&&S(e,n)}}function aa(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function sa(e){var t=e.name.replace(Yo,"");return t||"#"!==e.name[0]&&(t="default"),Ko.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function la(e){var t=e.match(Zo);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function ca(e){for(var t={},n=0,r=e.length;n<r;n++)t[e[n].name]=e[n].value;return t}var ua=/^xmlns:NS\d+/,fa=/^NS\d+:/;function da(e){return ra(e.tag,e.attrsList.slice(),e.parent)}var pa,va,ha=[fo,po,{preTransformNode:function(e,t){if("input"===e.tag){var n,r=e.attrsMap;if(!r["v-model"])return;if((r[":type"]||r["v-bind:type"])&&(n=Mr(e,"type")),r.type||n||!r["v-bind"]||(n="("+r["v-bind"]+").type"),n){var i=Er(e,"v-if",!0),o=i?"&&("+i+")":"",a=null!=Er(e,"v-else",!0),s=Er(e,"v-else-if",!0),l=da(e);oa(l),Sr(l,"type","checkbox"),ia(l,t),l.processed=!0,l.if="("+n+")==='checkbox'"+o,aa(l,{exp:l.if,block:l});var c=da(e);Er(c,"v-for",!0),Sr(c,"type","radio"),ia(c,t),aa(l,{exp:"("+n+")==='radio'"+o,block:c});var u=da(e);return Er(u,"v-for",!0),Sr(u,":type",n),ia(u,t),aa(l,{exp:i,block:u}),a?l.else=!0:s&&(l.elseif=s),l}}}}],ma={expectHTML:!0,modules:ha,directives:{model:function(e,t,n){var r=t.value,i=t.modifiers,o=e.tag,a=e.attrsMap.type;if(e.component)return Ir(e,r,i),!1;if("select"===o)!function(e,t,n){var r='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";Br(e,"change",r=r+" "+Nr(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),null,!0)}(e,r,i);else if("input"===o&&"checkbox"===a)!function(e,t,n){var r=n&&n.number,i=Mr(e,"value")||"null",o=Mr(e,"true-value")||"true",a=Mr(e,"false-value")||"false";Or(e,"checked","Array.isArray("+t+")?_i("+t+","+i+")>-1"+("true"===o?":("+t+")":":_q("+t+","+o+")")),Br(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+o+"):("+a+");if(Array.isArray($$a)){var $$v="+(r?"_n("+i+")":i)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Nr(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Nr(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Nr(t,"$$c")+"}",null,!0)}(e,r,i);else if("input"===o&&"radio"===a)!function(e,t,n){var r=n&&n.number,i=Mr(e,"value")||"null";Or(e,"checked","_q("+t+","+(i=r?"_n("+i+")":i)+")"),Br(e,"change",Nr(t,i),null,!0)}(e,r,i);else if("input"===o||"textarea"===o)!function(e,t,n){var r=e.attrsMap.type,i=n||{},o=i.lazy,a=i.number,s=i.trim,l=!o&&"range"!==r,c=o?"change":"range"===r?"__r":"input",u="$event.target.value";s&&(u="$event.target.value.trim()"),a&&(u="_n("+u+")");var f=Nr(t,u);l&&(f="if($event.target.composing)return;"+f),Or(e,"value","("+t+")"),Br(e,c,f,null,!0),(s||a)&&Br(e,"blur","$forceUpdate()")}(e,r,i);else if(!R.isReservedTag(o))return Ir(e,r,i),!1;return!0},text:function(e,t){t.value&&Or(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&Or(e,"innerHTML","_s("+t.value+")",t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:vo,mustUseProp:jn,canBeLeftOpenTag:ho,isReservedTag:Vn,getTagNamespace:Wn,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(ha)},ga=w((function(e){return h("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))})),ya=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,ba=/\([^)]*?\);*$/,_a=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,wa={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Ca={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},xa=function(e){return"if("+e+")return null;"},Aa={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:xa("$event.target !== $event.currentTarget"),ctrl:xa("!$event.ctrlKey"),shift:xa("!$event.shiftKey"),alt:xa("!$event.altKey"),meta:xa("!$event.metaKey"),left:xa("'button' in $event && $event.button !== 0"),middle:xa("'button' in $event && $event.button !== 1"),right:xa("'button' in $event && $event.button !== 2")};function ka(e,t){var n=t?"nativeOn:":"on:",r="",i="";for(var o in e){var a=$a(e[o]);e[o]&&e[o].dynamic?i+=o+","+a+",":r+='"'+o+'":'+a+","}return r="{"+r.slice(0,-1)+"}",i?n+"_d("+r+",["+i.slice(0,-1)+"])":n+r}function $a(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return $a(e)})).join(",")+"]";var t=_a.test(e.value),n=ya.test(e.value),r=_a.test(e.value.replace(ba,""));if(e.modifiers){var i="",o="",a=[];for(var s in e.modifiers)if(Aa[s])o+=Aa[s],wa[s]&&a.push(s);else if("exact"===s){var l=e.modifiers;o+=xa(["ctrl","shift","alt","meta"].filter((function(e){return!l[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else a.push(s);return a.length&&(i+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(Oa).join("&&")+")return null;"}(a)),o&&(i+=o),"function($event){"+i+(t?"return "+e.value+"($event)":n?"return ("+e.value+")($event)":r?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(r?"return "+e.value:e.value)+"}"}function Oa(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=wa[e],r=Ca[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(r)+")"}var Da={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:j},Sa=function(e){this.options=e,this.warn=e.warn||kr,this.transforms=$r(e.modules,"transformCode"),this.dataGenFns=$r(e.modules,"genData"),this.directives=S(S({},Da),e.directives);var t=e.isReservedTag||B;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Ta(e,t){var n=new Sa(t);return{render:"with(this){return "+(e?ja(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function ja(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Ba(e,t);if(e.once&&!e.onceProcessed)return Ma(e,t);if(e.for&&!e.forProcessed)return La(e,t);if(e.if&&!e.ifProcessed)return Ea(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',r=Fa(e,t),i="_t("+n+(r?","+r:""),o=e.attrs||e.dynamicAttrs?Ua((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:x(e.name),value:e.value,dynamic:e.dynamic}}))):null,a=e.attrsMap["v-bind"];return!o&&!a||r||(i+=",null"),o&&(i+=","+o),a&&(i+=(o?"":",null")+","+a),i+")"}(e,t);var n;if(e.component)n=function(e,t,n){var r=t.inlineTemplate?null:Fa(t,n,!0);return"_c("+e+","+Pa(t,n)+(r?","+r:"")+")"}(e.component,e,t);else{var r;(!e.plain||e.pre&&t.maybeComponent(e))&&(r=Pa(e,t));var i=e.inlineTemplate?null:Fa(e,t,!0);n="_c('"+e.tag+"'"+(r?","+r:"")+(i?","+i:"")+")"}for(var o=0;o<t.transforms.length;o++)n=t.transforms[o](e,n);return n}return Fa(e,t)||"void 0"}function Ba(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+ja(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function Ma(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Ea(e,t);if(e.staticInFor){for(var n="",r=e.parent;r;){if(r.for){n=r.key;break}r=r.parent}return n?"_o("+ja(e,t)+","+t.onceId+++","+n+")":ja(e,t)}return Ba(e,t)}function Ea(e,t,n,r){return e.ifProcessed=!0,function e(t,n,r,i){if(!t.length)return i||"_e()";var o=t.shift();return o.exp?"("+o.exp+")?"+a(o.block)+":"+e(t,n,r,i):""+a(o.block);function a(e){return r?r(e,n):e.once?Ma(e,n):ja(e,n)}}(e.ifConditions.slice(),t,n,r)}function La(e,t,n,r){var i=e.for,o=e.alias,a=e.iterator1?","+e.iterator1:"",s=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(r||"_l")+"(("+i+"),function("+o+a+s+"){return "+(n||ja)(e,t)+"})"}function Pa(e,t){var n="{",r=function(e,t){var n=e.directives;if(n){var r,i,o,a,s="directives:[",l=!1;for(r=0,i=n.length;r<i;r++){o=n[r],a=!0;var c=t.directives[o.name];c&&(a=!!c(e,o,t.warn)),a&&(l=!0,s+='{name:"'+o.name+'",rawName:"'+o.rawName+'"'+(o.value?",value:("+o.value+"),expression:"+JSON.stringify(o.value):"")+(o.arg?",arg:"+(o.isDynamicArg?o.arg:'"'+o.arg+'"'):"")+(o.modifiers?",modifiers:"+JSON.stringify(o.modifiers):"")+"},")}return l?s.slice(0,-1)+"]":void 0}}(e,t);r&&(n+=r+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+="attrs:"+Ua(e.attrs)+","),e.props&&(n+="domProps:"+Ua(e.props)+","),e.events&&(n+=ka(e.events,!1)+","),e.nativeEvents&&(n+=ka(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var r=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Ia(n)})),i=!!e.if;if(!r)for(var o=e.parent;o;){if(o.slotScope&&o.slotScope!==na||o.for){r=!0;break}o.if&&(i=!0),o=o.parent}var a=Object.keys(t).map((function(e){return Na(t[e],n)})).join(",");return"scopedSlots:_u(["+a+"]"+(r?",null,true":"")+(!r&&i?",null,false,"+function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(a):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var o=function(e,t){var n=e.children[0];if(n&&1===n.type){var r=Ta(n,t.options);return"inlineTemplate:{render:function(){"+r.render+"},staticRenderFns:["+r.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);o&&(n+=o+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+Ua(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Ia(e){return 1===e.type&&("slot"===e.tag||e.children.some(Ia))}function Na(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return Ea(e,t,Na,"null");if(e.for&&!e.forProcessed)return La(e,t,Na);var r=e.slotScope===na?"":String(e.slotScope),i="function("+r+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(Fa(e,t)||"undefined")+":undefined":Fa(e,t)||"undefined":ja(e,t))+"}",o=r?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+i+o+"}"}function Fa(e,t,n,r,i){var o=e.children;if(o.length){var a=o[0];if(1===o.length&&a.for&&"template"!==a.tag&&"slot"!==a.tag){var s=n?t.maybeComponent(a)?",1":",0":"";return""+(r||ja)(a,t)+s}var l=n?function(e,t){for(var n=0,r=0;r<e.length;r++){var i=e[r];if(1===i.type){if(Ra(i)||i.ifConditions&&i.ifConditions.some((function(e){return Ra(e.block)}))){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(o,t.maybeComponent):0,c=i||za;return"["+o.map((function(e){return c(e,t)})).join(",")+"]"+(l?","+l:"")}}function Ra(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function za(e,t){return 1===e.type?ja(e,t):3===e.type&&e.isComment?(r=e,"_e("+JSON.stringify(r.text)+")"):"_v("+(2===(n=e).type?n.expression:Ha(JSON.stringify(n.text)))+")";var n,r}function Ua(e){for(var t="",n="",r=0;r<e.length;r++){var i=e[r],o=Ha(i.value);i.dynamic?n+=i.name+","+o+",":t+='"'+i.name+'":'+o+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function Ha(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function qa(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),j}}function Va(e){var t=Object.create(null);return function(n,r,i){(r=S({},r)).warn,delete r.warn;var o=r.delimiters?String(r.delimiters)+n:n;if(t[o])return t[o];var a=e(n,r),s={},l=[];return s.render=qa(a.render,l),s.staticRenderFns=a.staticRenderFns.map((function(e){return qa(e,l)})),t[o]=s}}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b");var Wa,Ja,Ka=(Wa=function(e,t){var n=function(e,t){Lo=t.warn||kr,Ro=t.isPreTag||B,zo=t.mustUseProp||B,Uo=t.getTagNamespace||B,t.isReservedTag,Io=$r(t.modules,"transformNode"),No=$r(t.modules,"preTransformNode"),Fo=$r(t.modules,"postTransformNode"),Po=t.delimiters;var n,r,i=[],o=!1!==t.preserveWhitespace,a=t.whitespace,s=!1,l=!1;function c(e){if(u(e),s||e.processed||(e=ia(e,t)),i.length||e===n||n.if&&(e.elseif||e.else)&&aa(n,{exp:e.elseif,block:e}),r&&!e.forbidden)if(e.elseif||e.else)a=e,(c=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(r.children))&&c.if&&aa(c,{exp:a.elseif,block:a});else{if(e.slotScope){var o=e.slotTarget||'"default"';(r.scopedSlots||(r.scopedSlots={}))[o]=e}r.children.push(e),e.parent=r}var a,c;e.children=e.children.filter((function(e){return!e.slotScope})),u(e),e.pre&&(s=!1),Ro(e.tag)&&(l=!1);for(var f=0;f<Fo.length;f++)Fo[f](e,t)}function u(e){if(!l)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,r,i=[],o=t.expectHTML,a=t.isUnaryTag||B,s=t.canBeLeftOpenTag||B,l=0;e;){if(n=e,r&&Oo(r)){var c=0,u=r.toLowerCase(),f=Do[u]||(Do[u]=new RegExp("([\\s\\S]*?)(</"+u+"[^>]*>)","i")),d=e.replace(f,(function(e,n,r){return c=r.length,Oo(u)||"noscript"===u||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Mo(u,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));l+=e.length-d.length,e=d,$(u,l-c,l)}else{var p=e.indexOf("<");if(0===p){if(ko.test(e)){var v=e.indexOf("--\x3e");if(v>=0){t.shouldKeepComment&&t.comment(e.substring(4,v),l,l+v+3),x(v+3);continue}}if($o.test(e)){var h=e.indexOf("]>");if(h>=0){x(h+2);continue}}var m=e.match(Ao);if(m){x(m[0].length);continue}var g=e.match(xo);if(g){var y=l;x(g[0].length),$(g[1],y,l);continue}var b=A();if(b){k(b),Mo(b.tagName,e)&&x(1);continue}}var _=void 0,w=void 0,C=void 0;if(p>=0){for(w=e.slice(p);!(xo.test(w)||wo.test(w)||ko.test(w)||$o.test(w)||(C=w.indexOf("<",1))<0);)p+=C,w=e.slice(p);_=e.substring(0,p)}p<0&&(_=e),_&&x(_.length),t.chars&&_&&t.chars(_,l-_.length,l)}if(e===n){t.chars&&t.chars(e);break}}function x(t){l+=t,e=e.substring(t)}function A(){var t=e.match(wo);if(t){var n,r,i={tagName:t[1],attrs:[],start:l};for(x(t[0].length);!(n=e.match(Co))&&(r=e.match(yo)||e.match(go));)r.start=l,x(r[0].length),r.end=l,i.attrs.push(r);if(n)return i.unarySlash=n[1],x(n[0].length),i.end=l,i}}function k(e){var n=e.tagName,l=e.unarySlash;o&&("p"===r&&mo(n)&&$(r),s(n)&&r===n&&$(n));for(var c=a(n)||!!l,u=e.attrs.length,f=new Array(u),d=0;d<u;d++){var p=e.attrs[d],v=p[3]||p[4]||p[5]||"",h="a"===n&&"href"===p[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;f[d]={name:p[1],value:Eo(v,h)}}c||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:f,start:e.start,end:e.end}),r=n),t.start&&t.start(n,f,c,e.start,e.end)}function $(e,n,o){var a,s;if(null==n&&(n=l),null==o&&(o=l),e)for(s=e.toLowerCase(),a=i.length-1;a>=0&&i[a].lowerCasedTag!==s;a--);else a=0;if(a>=0){for(var c=i.length-1;c>=a;c--)t.end&&t.end(i[c].tag,n,o);i.length=a,r=a&&i[a-1].tag}else"br"===s?t.start&&t.start(e,[],!0,n,o):"p"===s&&(t.start&&t.start(e,[],!1,n,o),t.end&&t.end(e,n,o))}$()}(e,{warn:Lo,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,o,a,u,f){var d=r&&r.ns||Uo(e);G&&"svg"===d&&(o=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];ua.test(r.name)||(r.name=r.name.replace(fa,""),t.push(r))}return t}(o));var p,v=ra(e,o,r);d&&(v.ns=d),"style"!==(p=v).tag&&("script"!==p.tag||p.attrsMap.type&&"text/javascript"!==p.attrsMap.type)||ie()||(v.forbidden=!0);for(var h=0;h<No.length;h++)v=No[h](v,t)||v;s||(function(e){null!=Er(e,"v-pre")&&(e.pre=!0)}(v),v.pre&&(s=!0)),Ro(v.tag)&&(l=!0),s?function(e){var t=e.attrsList,n=t.length;if(n)for(var r=e.attrs=new Array(n),i=0;i<n;i++)r[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(r[i].start=t[i].start,r[i].end=t[i].end);else e.pre||(e.plain=!0)}(v):v.processed||(oa(v),function(e){var t=Er(e,"v-if");if(t)e.if=t,aa(e,{exp:t,block:e});else{null!=Er(e,"v-else")&&(e.else=!0);var n=Er(e,"v-else-if");n&&(e.elseif=n)}}(v),function(e){null!=Er(e,"v-once")&&(e.once=!0)}(v)),n||(n=v),a?c(v):(r=v,i.push(v))},end:function(e,t,n){var o=i[i.length-1];i.length-=1,r=i[i.length-1],c(o)},chars:function(e,t,n){if(r&&(!G||"textarea"!==r.tag||r.attrsMap.placeholder!==e)){var i,c,u,f=r.children;(e=l||e.trim()?"script"===(i=r).tag||"style"===i.tag?e:ta(e):f.length?a?"condense"===a&&Qo.test(e)?"":" ":o?" ":"":"")&&(l||"condense"!==a||(e=e.replace(ea," ")),!s&&" "!==e&&(c=function(e,t){var n=t?uo(t):lo;if(n.test(e)){for(var r,i,o,a=[],s=[],l=n.lastIndex=0;r=n.exec(e);){(i=r.index)>l&&(s.push(o=e.slice(l,i)),a.push(JSON.stringify(o)));var c=xr(r[1].trim());a.push("_s("+c+")"),s.push({"@binding":c}),l=i+r[0].length}return l<e.length&&(s.push(o=e.slice(l)),a.push(JSON.stringify(o))),{expression:a.join("+"),tokens:s}}}(e,Po))?u={type:2,expression:c.expression,tokens:c.tokens,text:e}:" "===e&&f.length&&" "===f[f.length-1].text||(u={type:3,text:e}),u&&f.push(u))}},comment:function(e,t,n){if(r){var i={type:3,text:e,isComment:!0};r.children.push(i)}}}),n}(e.trim(),t);!1!==t.optimize&&function(e,t){e&&(pa=ga(t.staticKeys||""),va=t.isReservedTag||B,function e(t){if(t.static=function(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||m(e.tag)||!va(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(pa))))}(t),1===t.type){if(!va(t.tag)&&"slot"!==t.tag&&null==t.attrsMap["inline-template"])return;for(var n=0,r=t.children.length;n<r;n++){var i=t.children[n];e(i),i.static||(t.static=!1)}if(t.ifConditions)for(var o=1,a=t.ifConditions.length;o<a;o++){var s=t.ifConditions[o].block;e(s),s.static||(t.static=!1)}}}(e),function e(t,n){if(1===t.type){if((t.static||t.once)&&(t.staticInFor=n),t.static&&t.children.length&&(1!==t.children.length||3!==t.children[0].type))return void(t.staticRoot=!0);if(t.staticRoot=!1,t.children)for(var r=0,i=t.children.length;r<i;r++)e(t.children[r],n||!!t.for);if(t.ifConditions)for(var o=1,a=t.ifConditions.length;o<a;o++)e(t.ifConditions[o].block,n)}}(e,!1))}(n,t);var r=Ta(n,t);return{ast:n,render:r.render,staticRenderFns:r.staticRenderFns}},function(e){function t(t,n){var r=Object.create(e),i=[],o=[];if(n)for(var a in n.modules&&(r.modules=(e.modules||[]).concat(n.modules)),n.directives&&(r.directives=S(Object.create(e.directives||null),n.directives)),n)"modules"!==a&&"directives"!==a&&(r[a]=n[a]);r.warn=function(e,t,n){(n?o:i).push(e)};var s=Wa(t.trim(),r);return s.errors=i,s.tips=o,s}return{compile:t,compileToFunctions:Va(t)}})(ma),Xa=(Ka.compile,Ka.compileToFunctions);function Ga(e){return(Ja=Ja||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',Ja.innerHTML.indexOf("&#10;")>0}var Za=!!W&&Ga(!1),Ya=!!W&&Ga(!0),Qa=w((function(e){var t=Xn(e);return t&&t.innerHTML})),es=Cn.prototype.$mount;Cn.prototype.$mount=function(e,t){if((e=e&&Xn(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var r=n.template;if(r)if("string"==typeof r)"#"===r.charAt(0)&&(r=Qa(r));else{if(!r.nodeType)return this;r=r.innerHTML}else e&&(r=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(r){var i=Xa(r,{outputSourceRange:!1,shouldDecodeNewlines:Za,shouldDecodeNewlinesForHref:Ya,delimiters:n.delimiters,comments:n.comments},this),o=i.render,a=i.staticRenderFns;n.render=o,n.staticRenderFns=a}}return es.call(this,e,t)},Cn.compile=Xa,e.exports=Cn},73609:e=>{"use strict";e.exports=window.jQuery}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=x(n(53277)),t=x(n(96803)),r=x(n(58630)),i=x(n(2573)),o=x(n(37758)),a=x(n(5595)),s=x(n(17868)),l=x(n(91781)),c=x(n(58899)),u=x(n(29983)),f=x(n(51964)),d=x(n(9735)),p=x(n(29573)),v=x(n(34684)),h=x(n(48473)),m=x(n(19078)),g=x(n(29145)),y=x(n(91137)),b=x(n(50204)),_=x(n(3010)),w=x(n(85820)),C=x(n(43284));function x(e){return e&&e.__esModule?e:{default:e}}var A=window.$;A((function(){var n=new e.default("category");n.addExtension(new t.default),n.addExtension(new r.default),n.addExtension(new u.default),n.addExtension(new i.default),n.addExtension(new o.default),n.addExtension(new a.default),n.addExtension(new s.default),n.addExtension(new l.default),n.addExtension(new c.default),n.addExtension(new f.default),n.addExtension(new d.default),n.addExtension(new p.default),n.addExtension(new y.default),new b.default("categoriesShowcaseCard").addExtension(new _.default),window.prestashop.component.initComponents(["TranslatableField","TinyMCEEditor","TranslatableInput"]);var x=window.prestashop.instance.translatableInput;new v.default,new w.default,(0,h.default)({sourceElementSelector:'input[name^="category[name]"]',destinationElementSelector:x.localeInputSelector+':not(.d-none) input[name^="category[link_rewrite]"]'}),(0,h.default)({sourceElementSelector:'input[name^="root_category[name]"]',destinationElementSelector:x.localeInputSelector+':not(.d-none) input[name^="root_category[link_rewrite]"]'}),new C.default({container:"#serp-app",defaultTitle:'input[name^="category[name]"]',watchedTitle:'input[name^="category[meta_title]"]',defaultDescription:'textarea[name^="category[description]"]',watchedDescription:'textarea[name^="category[meta_description]"]',watchedMetaUrl:'input[name^="category[link_rewrite]"]',multiLanguageInput:x.localeInputSelector+":not(.d-none)",multiLanguageItem:x.localeItemSelector},A("#serp-app").data("category-url")),new g.default,new window.prestashop.component.TaggableField({tokenFieldSelector:"input.js-taggable-field",options:{createTokensOnBlur:!0}}),new m.default("#category_id_parent"),new m.default("#category_shop_association").enableAutoCheckChildren(),new m.default("#root_category_id_parent"),new m.default("#root_category_shop_association").enableAutoCheckChildren()}))})(),window.category={}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9hcHAvdXRpbHMvcmVzZXRfc2VhcmNoLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2FwcC91dGlscy9zZXJwL2luZGV4LmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2FwcC91dGlscy90YWJsZS1zb3J0aW5nLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvY2hvaWNlLXRhYmxlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZXZlbnQtZW1pdHRlci5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2Zvcm0tc3VibWl0LWJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2Zvcm0vY2hvaWNlLXRyZWUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9mb3JtL3RleHQtd2l0aC1yZWNvbW1lbmRlZC1sZW5ndGgtY291bnRlci5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL2FjdGlvbi9idWxrL2NhdGVnb3J5L2RlbGV0ZS1jYXRlZ29yaWVzLWJ1bGstYWN0aW9uLWV4dGVuc2lvbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL2FjdGlvbi9yb3cvY2F0ZWdvcnkvZGVsZXRlLWNhdGVnb3J5LXJvdy1hY3Rpb24tZXh0ZW5zaW9uLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vYWN0aW9uL3Jvdy9zdWJtaXQtcm93LWFjdGlvbi1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9idWxrLWFjdGlvbi1jaGVja2JveC1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9jb2x1bW4vY2F0YWxvZy9jYXRlZ29yeS1wb3NpdGlvbi1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9jb2x1bW4vY29tbW9uL2FzeW5jLXRvZ2dsZS1jb2x1bW4tZXh0ZW5zaW9uLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vZXhwb3J0LXRvLXNxbC1tYW5hZ2VyLWV4dGVuc2lvbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL2ZpbHRlcnMtcmVzZXQtZXh0ZW5zaW9uLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vZmlsdGVycy1zdWJtaXQtYnV0dG9uLWVuYWJsZXItZXh0ZW5zaW9uLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vbGluay1yb3ctYWN0aW9uLWV4dGVuc2lvbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL3JlbG9hZC1saXN0LWV4dGVuc2lvbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL3NvcnRpbmctZXh0ZW5zaW9uLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vc3VibWl0LWJ1bGstYWN0aW9uLWV4dGVuc2lvbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2dyaWQvZ3JpZC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL21vZGFsLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvc2hvd2Nhc2UtY2FyZC9leHRlbnNpb24vc2hvd2Nhc2UtY2FyZC1jbG9zZS1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9zaG93Y2FzZS1jYXJkL3Nob3djYXNlLWNhcmQuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy90ZXh0LXRvLWxpbmstcmV3cml0ZS1jb3BpZXIuanMiLCJ3ZWJwYWNrOi8vW25hbWVdL2pzL2FwcC91dGlscy9zZXJwL3NlcnAudnVlIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvYXJyYXkvZnJvbS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvdG9Db25zdW1hYmxlQXJyYXkuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9hcnJheS9mcm9tLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NsYXNzb2YuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3JlYXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19leHBvcnQuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mYWlscy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hhcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19odG1sLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pb2JqZWN0LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY2FsbC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWRldGVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXJhdG9ycy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2xpYnJhcnkuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1ncG8uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3JlZGVmaW5lLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQta2V5LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWxlbmd0aC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuZnJvbS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvYXBwL3V0aWxzL3NlcnAvc2VycC52dWU/ZmE4YyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy90YWJsZWRuZC9kaXN0L2pxdWVyeS50YWJsZWRuZC5taW4uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvYXBwL3V0aWxzL3NlcnAvc2VycC52dWU/M2Q4NSIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9hcHAvdXRpbHMvc2VycC9zZXJwLnZ1ZT9iZjYyIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2FwcC91dGlscy9zZXJwL3NlcnAudnVlIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvYXBwL3V0aWxzL3NlcnAvc2VycC52dWU/YjAyMCIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvbGlzdFRvU3R5bGVzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL3Z1ZS9kaXN0L3Z1ZS5jb21tb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL3Z1ZS9kaXN0L3Z1ZS5jb21tb24ucHJvZC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vZXh0ZXJuYWwgXCJqUXVlcnlcIiIsIndlYnBhY2s6Ly9bbmFtZV0vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vW25hbWVdL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL1tuYW1lXS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vW25hbWVdL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vW25hbWVdL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vW25hbWVdL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvcGFnZXMvY2F0ZWdvcnkvaW5kZXguanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsInVybCIsInJlZGlyZWN0VXJsIiwicG9zdCIsInRoZW4iLCJsb2NhdGlvbiIsImFzc2lnbiIsIlNlcnBBcHAiLCJzZWxlY3RvcnMiLCJjb250YWluZXIiLCJsZW5ndGgiLCJ0aGlzIiwib3JpZ2luYWxVcmwiLCJ1c2VNdWx0aUxhbmciLCJ1bmRlZmluZWQiLCJtdWx0aUxhbmd1YWdlSW5wdXQiLCJtdWx0aUxhbmd1YWdlRmllbGQiLCJwb3NzaWJsZVNlbGVjdG9ycyIsInB1c2giLCJtdWx0aUxhbmdTZWxlY3RvciIsImpvaW4iLCJhdHRhY2hNdWx0aUxhbmdFdmVudHMiLCJkYXRhIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInZtIiwiVnVlIiwiZWwiLCJ0ZW1wbGF0ZSIsImNvbXBvbmVudHMiLCJzZXJwIiwiaW5pdGlhbGl6ZVNlbGVjdG9ycyIsImF0dGFjaElucHV0RXZlbnRzIiwiaXRlbVNlbGVjdG9yIiwib24iLCJjaGVja1RpdGxlIiwiY2hlY2tEZXNjIiwiY2hlY2tVcmwiLCJFdmVudEVtaXR0ZXIiLCJkZWZhdWx0VGl0bGUiLCJ3YXRjaGVkVGl0bGUiLCJkZWZhdWx0RGVzY3JpcHRpb24iLCJ3YXRjaGVkRGVzY3JpcHRpb24iLCJ3YXRjaGVkTWV0YVVybCIsInJld3JpdGUiLCJyZXBsYWNlIiwiY2xvc2VzdCIsImZpbmQiLCJ0aXRsZTEiLCJ2YWwiLCJ0aXRsZTIiLCJzZXRUaXRsZSIsImlzIiwiZGVzYzEiLCJpbm5lclRleHQiLCJkZXNjMiIsInRleHQiLCJzZXREZXNjcmlwdGlvbiIsInNldFVybCIsIlRhYmxlU29ydGluZyIsInRhYmxlIiwic2VsZWN0b3IiLCJjb2x1bW5zIiwiZSIsIiRjb2x1bW4iLCJkZWxlZ2F0ZVRhcmdldCIsInNvcnRCeUNvbHVtbiIsImdldFRvZ2dsZWRTb3J0RGlyZWN0aW9uIiwiY29sdW1uTmFtZSIsImRpcmVjdGlvbiIsIkVycm9yIiwiY29sdW1uIiwiZ2V0VXJsIiwiY29sTmFtZSIsInByZWZpeCIsIlVSTCIsImhyZWYiLCJwYXJhbXMiLCJzZWFyY2hQYXJhbXMiLCJzZXQiLCJ0b1N0cmluZyIsIkNob2ljZVRhYmxlIiwiZG9jdW1lbnQiLCJoYW5kbGVTZWxlY3RBbGwiLCJldmVudCIsIiRzZWxlY3RBbGxDaGVja2JveGVzIiwidGFyZ2V0IiwiaXNTZWxlY3RBbGxDaGVja2VkIiwicHJvcCIsIkV2ZW50RW1pdHRlckNsYXNzIiwicHJldmVudERlZmF1bHQiLCIkYnRuIiwiY29uZmlybSIsIm1ldGhvZCIsImFkZElucHV0IiwiYnRuTWV0aG9kIiwiaXNHZXRPclBvc3RNZXRob2QiLCJpbmNsdWRlcyIsInR5cGUiLCJuYW1lIiwidmFsdWUiLCIkZm9ybSIsImFjdGlvbiIsImFwcGVuZCIsImFwcGVuZFRvIiwic3VibWl0IiwiQ2hvaWNlVHJlZSIsInRyZWVTZWxlY3RvciIsIiRjb250YWluZXIiLCIkaW5wdXRXcmFwcGVyIiwiY3VycmVudFRhcmdldCIsInRvZ2dsZUNoaWxkVHJlZSIsIiRhY3Rpb24iLCJ0b2dnbGVUcmVlIiwiZW5hYmxlQXV0b0NoZWNrQ2hpbGRyZW4iLCJlbmFibGVBbGxJbnB1dHMiLCJkaXNhYmxlQWxsSW5wdXRzIiwiJGNsaWNrZWRDaGVja2JveCIsInJlbW92ZUF0dHIiLCJhdHRyIiwiJHBhcmVudFdyYXBwZXIiLCJoYXNDbGFzcyIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCIkcGFyZW50Q29udGFpbmVyIiwiY29uZmlnIiwiZXhwYW5kIiwiY29sbGFwc2UiLCJuZXh0QWN0aW9uIiwiaWNvbiIsImVhY2giLCJpbmRleCIsIml0ZW0iLCIkaXRlbSIsIiRpbnB1dCIsIkRlbGV0ZUNhdGVnb3JpZXNCdWxrQWN0aW9uRXh0ZW5zaW9uIiwiZXh0ZW5kIiwiZ3JpZCIsImdldENvbnRhaW5lciIsInN1Ym1pdFVybCIsIiRkZWxldGVDYXRlZ29yaWVzTW9kYWwiLCJnZXRJZCIsIm1vZGFsIiwiJGNoZWNrYm94ZXMiLCIkY2F0ZWdvcmllc1RvRGVsZXRlSW5wdXRCbG9jayIsImkiLCJlbGVtZW50IiwiJGNoZWNrYm94IiwiY2F0ZWdvcnlJbnB1dCIsInBhcnNlSFRNTCIsIkRlbGV0ZUNhdGVnb3J5Um93QWN0aW9uRXh0ZW5zaW9uIiwiJGJ1dHRvbiIsImNhdGVnb3J5SWQiLCJjaGlsZHJlbiIsIlN1Ym1pdFJvd0FjdGlvbkV4dGVuc2lvbiIsImNvbmZpcm1NZXNzYWdlIiwiY29uZmlybVRpdGxlIiwic2hvd0NvbmZpcm1Nb2RhbCIsInBvc3RGb3JtIiwiJHN1Ym1pdEJ0biIsImNvbmZpcm1CdXR0b25MYWJlbCIsImNsb3NlQnV0dG9uTGFiZWwiLCJjb25maXJtQnV0dG9uQ2xhc3MiLCJDb25maXJtTW9kYWwiLCJpZCIsInNob3ciLCJCdWxrQWN0aW9uQ2hlY2tib3hFeHRlbnNpb24iLCJoYW5kbGVCdWxrQWN0aW9uQ2hlY2tib3hTZWxlY3QiLCJoYW5kbGVCdWxrQWN0aW9uU2VsZWN0QWxsQ2hlY2tib3giLCJpc0NoZWNrZWQiLCJlbmFibGVCdWxrQWN0aW9uc0J0biIsImRpc2FibGVCdWxrQWN0aW9uc0J0biIsIkNhdGVnb3J5UG9zaXRpb25FeHRlbnNpb24iLCJhZGRJZHNUb0dyaWRUYWJsZVJvd3MiLCJ0YWJsZURuRCIsImRyYWdIYW5kbGUiLCJvbkRyYWdDbGFzcyIsIm9uRHJhZ1N0YXJ0Iiwib3JpZ2luYWxQb3NpdGlvbnMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJvbkRyb3AiLCJyb3ciLCJoYW5kbGVDYXRlZ29yeVBvc2l0aW9uQ2hhbmdlIiwicG9zaXRpb25zIiwid2F5IiwiaW5kZXhPZiIsIiRjYXRlZ29yeVBvc2l0aW9uQ29udGFpbmVyIiwiY2F0ZWdvcnlQYXJlbnRJZCIsInBvc2l0aW9uVXBkYXRlVXJsIiwiUmVnRXhwIiwicXVlcnlQYXJhbXMiLCJpZF9jYXRlZ29yeV9wYXJlbnQiLCJpZF9jYXRlZ29yeV90b19tb3ZlIiwiZm91bmRfZmlyc3QiLCJwYXJhbSIsInVwZGF0ZUNhdGVnb3J5UG9zaXRpb24iLCJwb3NpdGlvbldyYXBwZXIiLCIkcG9zaXRpb25XcmFwcGVyIiwiJHJvdyIsIm9mZnNldCIsIm5ld1Bvc2l0aW9uIiwib2xkSWQiLCJoZWFkZXJzIiwiZGF0YVR5cGUiLCJyZXNwb25zZSIsInN1Y2Nlc3MiLCJzaG93U3VjY2Vzc01lc3NhZ2UiLCJtZXNzYWdlIiwic2hvd0Vycm9yTWVzc2FnZSIsInVwZGF0ZUNhdGVnb3J5SWRzQW5kUG9zaXRpb25zIiwiQXN5bmNUb2dnbGVDb2x1bW5FeHRlbnNpb24iLCJzdGF0dXMiLCJ0b2dnbGVCdXR0b25EaXNwbGF5IiwiY2F0Y2giLCJlcnJvciIsInJlc3BvbnNlSlNPTiIsImlzQWN0aXZlIiwiY2xhc3NUb0FkZCIsImNsYXNzVG9SZW1vdmUiLCJFeHBvcnRUb1NxbE1hbmFnZXJFeHRlbnNpb24iLCJnZXRIZWFkZXJDb250YWluZXIiLCJvblNob3dTcWxRdWVyeUNsaWNrIiwib25FeHBvcnRTcWxNYW5hZ2VyQ2xpY2siLCIkc3FsTWFuYWdlckZvcm0iLCJmaWxsRXhwb3J0Rm9ybSIsIiRtb2RhbCIsInF1ZXJ5IiwiZ2V0TmFtZUZyb21CcmVhZGNydW1iIiwiJGJyZWFkY3J1bWJzIiwiJGJyZWFkY3J1bWIiLCJicmVhZGNydW1iVGl0bGUiLCJjb25jYXQiLCJGaWx0ZXJzUmVzZXRFeHRlbnNpb24iLCJGaWx0ZXJzU3VibWl0QnV0dG9uRW5hYmxlckV4dGVuc2lvbiIsIiRmaWx0ZXJzUm93IiwiTGlua1Jvd0FjdGlvbkV4dGVuc2lvbiIsImluaXRSb3dMaW5rcyIsImluaXRDb25maXJtYWJsZUFjdGlvbnMiLCIkcGFyZW50Um93IiwiJHJvd0FjdGlvbiIsIiRwYXJlbnRDZWxsIiwiY2xpY2thYmxlQ2VsbHMiLCJub3QiLCJpc0RyYWdnaW5nIiwibW91c2Vkb3duIiwibW91c2Vtb3ZlIiwidW5iaW5kIiwibW91c2V1cCIsIndhc0RyYWdnaW5nIiwiUmVsb2FkTGlzdEV4dGVuc2lvbiIsInJlbG9hZCIsIlNvcnRpbmdFeHRlbnNpb24iLCIkc29ydGFibGVUYWJsZSIsImF0dGFjaCIsIlN1Ym1pdEJ1bGtBY3Rpb25FeHRlbnNpb24iLCJHcmlkIiwiZXh0ZW5zaW9uIiwiY29uZmlybUNhbGxiYWNrIiwiY2FuY2VsQ2FsbGJhY2siLCJjbG9zYWJsZSIsImN1c3RvbUJ1dHRvbnMiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiZGlhbG9nIiwiY29udGVudCIsImhlYWRlciIsImlubmVySFRNTCIsImNsb3NlSWNvbiIsInNldEF0dHJpYnV0ZSIsImRhdGFzZXQiLCJkaXNtaXNzIiwiYm9keSIsImZvb3RlciIsImNsb3NlQnV0dG9uIiwiY29uZmlybUJ1dHRvbiIsImFwcGVuZENoaWxkIiwiTW9kYWwiLCJhZGRFdmVudExpc3RlbmVyIiwiYmFja2Ryb3AiLCJrZXlib2FyZCIsInF1ZXJ5U2VsZWN0b3IiLCJyZW1vdmUiLCJTaG93Y2FzZUNhcmRDbG9zZUV4dGVuc2lvbiIsImhlbHBlckJsb2NrIiwiZXZ0IiwiY2FyZE5hbWUiLCJjbG9zZSIsIlNob3djYXNlQ2FyZCIsInNvdXJjZUVsZW1lbnRTZWxlY3RvciIsImRlc3RpbmF0aW9uRWxlbWVudFNlbGVjdG9yIiwib3B0aW9ucyIsImV2ZW50TmFtZSIsInN0cjJ1cmwiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwib2JqIiwiX2RlZmluZVByb3BlcnR5MiIsImRlZmluZVByb3BlcnRpZXMiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJrZXkiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJfZnJvbTIiLCJhcnIiLCJBcnJheSIsImlzQXJyYXkiLCJhcnIyIiwiJE9iamVjdCIsIml0IiwiZGVzYyIsImRlZmluZVByb3BlcnR5IiwiaXNPYmplY3QiLCJ0b0lPYmplY3QiLCJ0b0xlbmd0aCIsInRvQWJzb2x1dGVJbmRleCIsIklTX0lOQ0xVREVTIiwiJHRoaXMiLCJmcm9tSW5kZXgiLCJPIiwiY29mIiwiVEFHIiwiQVJHIiwiYXJndW1lbnRzIiwiVCIsIkIiLCJ0cnlHZXQiLCJPYmplY3QiLCJjYWxsZWUiLCJjYWxsIiwic2xpY2UiLCJjb3JlIiwidmVyc2lvbiIsIl9fZSIsIiRkZWZpbmVQcm9wZXJ0eSIsImNyZWF0ZURlc2MiLCJvYmplY3QiLCJmIiwiYUZ1bmN0aW9uIiwiZm4iLCJ0aGF0IiwiYSIsImIiLCJjIiwiYXBwbHkiLCJnZXQiLCJzcGxpdCIsImdsb2JhbCIsImN0eCIsImhpZGUiLCJoYXMiLCIkZXhwb3J0Iiwic291cmNlIiwib3duIiwib3V0IiwiSVNfRk9SQ0VEIiwiRiIsIklTX0dMT0JBTCIsIkciLCJJU19TVEFUSUMiLCJTIiwiSVNfUFJPVE8iLCJQIiwiSVNfQklORCIsIklTX1dSQVAiLCJXIiwiZXhwUHJvdG8iLCJDIiwiRnVuY3Rpb24iLCJ2aXJ0dWFsIiwiUiIsIlUiLCJleGVjIiwiTWF0aCIsInNlbGYiLCJfX2ciLCJoYXNPd25Qcm9wZXJ0eSIsImRQIiwiZG9jdW1lbnRFbGVtZW50IiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJJdGVyYXRvcnMiLCJJVEVSQVRPUiIsIkFycmF5UHJvdG8iLCJhbk9iamVjdCIsIml0ZXJhdG9yIiwiZW50cmllcyIsInJldCIsImNyZWF0ZSIsInNldFRvU3RyaW5nVGFnIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJOQU1FIiwibmV4dCIsIkxJQlJBUlkiLCJyZWRlZmluZSIsIiRpdGVyQ3JlYXRlIiwiZ2V0UHJvdG90eXBlT2YiLCJCVUdHWSIsImtleXMiLCJLRVlTIiwiVkFMVUVTIiwicmV0dXJuVGhpcyIsIkJhc2UiLCJERUZBVUxUIiwiSVNfU0VUIiwiRk9SQ0VEIiwibWV0aG9kcyIsImdldE1ldGhvZCIsImtpbmQiLCJwcm90byIsIkRFRl9WQUxVRVMiLCJWQUxVRVNfQlVHIiwiJG5hdGl2ZSIsIiRkZWZhdWx0IiwiJGVudHJpZXMiLCIkYW55TmF0aXZlIiwidmFsdWVzIiwiU0FGRV9DTE9TSU5HIiwicml0ZXIiLCJmcm9tIiwic2tpcENsb3NpbmciLCJzYWZlIiwiaXRlciIsImRvbmUiLCJkUHMiLCJlbnVtQnVnS2V5cyIsIklFX1BST1RPIiwiRW1wdHkiLCJjcmVhdGVEaWN0IiwiaWZyYW1lRG9jdW1lbnQiLCJpZnJhbWUiLCJzdHlsZSIsImRpc3BsYXkiLCJzcmMiLCJjb250ZW50V2luZG93Iiwib3BlbiIsIndyaXRlIiwibHQiLCJQcm9wZXJ0aWVzIiwicmVzdWx0IiwiSUU4X0RPTV9ERUZJTkUiLCJ0b1ByaW1pdGl2ZSIsIkF0dHJpYnV0ZXMiLCJnZXRLZXlzIiwidG9PYmplY3QiLCJPYmplY3RQcm90byIsImNvbnN0cnVjdG9yIiwiYXJyYXlJbmRleE9mIiwibmFtZXMiLCIka2V5cyIsImJpdG1hcCIsImRlZiIsInRhZyIsInN0YXQiLCJzaGFyZWQiLCJ1aWQiLCJTSEFSRUQiLCJzdG9yZSIsIm1vZGUiLCJjb3B5cmlnaHQiLCJ0b0ludGVnZXIiLCJkZWZpbmVkIiwiVE9fU1RSSU5HIiwicG9zIiwicyIsIlN0cmluZyIsImwiLCJjaGFyQ29kZUF0IiwiY2hhckF0IiwibWF4IiwibWluIiwiY2VpbCIsImZsb29yIiwiaXNOYU4iLCJJT2JqZWN0IiwidmFsdWVPZiIsInB4IiwicmFuZG9tIiwiU3ltYm9sIiwiVVNFX1NZTUJPTCIsImNsYXNzb2YiLCJpc0FycmF5SXRlciIsImNyZWF0ZVByb3BlcnR5IiwiZ2V0SXRlckZuIiwiYXJyYXlMaWtlIiwic3RlcCIsImFMZW4iLCJtYXBmbiIsIm1hcHBpbmciLCJpdGVyRm4iLCIkYXQiLCJpdGVyYXRlZCIsIl90IiwiX2kiLCJwb2ludCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJtYXAiLCJtb2R1bGVzIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJfYXJyYXlMaWtlVG9BcnJheSIsImxlbiIsIl9pdGVtIiwiX2FycmF5V2l0aEhvbGVzIiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwiZXJyIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibyIsIm1pbkxlbiIsIm4iLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5Iiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsIlJlZmxlY3RPd25LZXlzIiwiUmVmbGVjdCIsIlJlZmxlY3RBcHBseSIsInJlY2VpdmVyIiwiYXJncyIsIm93bktleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiTnVtYmVySXNOYU4iLCJOdW1iZXIiLCJpbml0IiwiX2V2ZW50cyIsIl9ldmVudHNDb3VudCIsIl9tYXhMaXN0ZW5lcnMiLCJkZWZhdWx0TWF4TGlzdGVuZXJzIiwiY2hlY2tMaXN0ZW5lciIsImxpc3RlbmVyIiwiX2dldE1heExpc3RlbmVycyIsIl9hZGRMaXN0ZW5lciIsInByZXBlbmQiLCJtIiwiZXZlbnRzIiwiZXhpc3RpbmciLCJ3YXJuaW5nIiwibmV3TGlzdGVuZXIiLCJlbWl0IiwidW5zaGlmdCIsIndhcm5lZCIsInciLCJlbWl0dGVyIiwiY291bnQiLCJjb25zb2xlIiwid2FybiIsIm9uY2VXcmFwcGVyIiwiZmlyZWQiLCJyZW1vdmVMaXN0ZW5lciIsIndyYXBGbiIsIl9vbmNlV3JhcCIsInN0YXRlIiwid3JhcHBlZCIsImJpbmQiLCJfbGlzdGVuZXJzIiwidW53cmFwIiwiZXZsaXN0ZW5lciIsInVud3JhcExpc3RlbmVycyIsImFycmF5Q2xvbmUiLCJsaXN0ZW5lckNvdW50IiwiY29weSIsImFyZyIsIlJhbmdlRXJyb3IiLCJzZXRNYXhMaXN0ZW5lcnMiLCJnZXRNYXhMaXN0ZW5lcnMiLCJkb0Vycm9yIiwiZXIiLCJjb250ZXh0IiwiaGFuZGxlciIsImxpc3RlbmVycyIsImFkZExpc3RlbmVyIiwicHJlcGVuZExpc3RlbmVyIiwib25jZSIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJwb3NpdGlvbiIsIm9yaWdpbmFsTGlzdGVuZXIiLCJzaGlmdCIsInBvcCIsInNwbGljZU9uZSIsIm9mZiIsInJlbW92ZUFsbExpc3RlbmVycyIsInJhd0xpc3RlbmVycyIsImV2ZW50TmFtZXMiLCJnIiwialF1ZXJ5IiwicmVhZHkiLCJtYXRjaCIsInRyaW0iLCJvbkRyYWdTdHlsZSIsIm9uRHJvcFN0eWxlIiwib25EcmFnU3RvcCIsInNjcm9sbEFtb3VudCIsInNlbnNpdGl2aXR5IiwiaGllcmFyY2h5TGV2ZWwiLCJpbmRlbnRBcnRpZmFjdCIsImF1dG9XaWR0aEFkanVzdCIsImF1dG9DbGVhblJlbGF0aW9ucyIsImpzb25QcmV0aWZ5U2VwYXJhdG9yIiwic2VyaWFsaXplUmVnZXhwIiwic2VyaWFsaXplUGFyYW1OYW1lIiwiY3VycmVudFRhYmxlIiwiZHJhZ09iamVjdCIsIm1vdXNlT2Zmc2V0Iiwib2xkWCIsIm9sZFkiLCJidWlsZCIsInRhYmxlRG5EQ29uZmlnIiwibWFrZURyYWdnYWJsZSIsIm1ha2VJbmRlbnRlZCIsImQiLCJyb3dzIiwiZmlyc3QiLCJoIiwiY3NzIiwid2hpdGVTcGFjZSIsImoiLCJ3aWR0aCIsIm9mZnNldFdpZHRoIiwiaW5pdGlhbGlzZURyYWciLCJwYXJlbnRzIiwidGFnTmFtZSIsImN1cnJlbnRPcmRlciIsImdldE1vdXNlT2Zmc2V0Iiwib3JpZ2luYWxPcmRlciIsInVwZGF0ZVRhYmxlcyIsIm1vdXNlQ29vcmRzIiwib3JpZ2luYWxFdmVudCIsImNoYW5nZWRUb3VjaGVzIiwieCIsImNsaWVudFgiLCJ5IiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzY3JvbGxMZWZ0IiwiY2xpZW50TGVmdCIsInNjcm9sbFRvcCIsImNsaWVudFRvcCIsImdldFBvc2l0aW9uIiwib2Zmc2V0SGVpZ2h0IiwiZmlyc3RDaGlsZCIsIm9mZnNldFBhcmVudCIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJhdXRvU2Nyb2xsIiwicGFnZVlPZmZzZXQiLCJpbm5lckhlaWdodCIsImNsaWVudEhlaWdodCIsImFsbCIsImNvbXBhdE1vZGUiLCJzY3JvbGxCeSIsIm1vdmVWZXJ0aWNsZSIsInZlcnRpY2FsIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSIsIm5leHRTaWJsaW5nIiwibW92ZUhvcml6b250YWwiLCJob3Jpem9udGFsIiwicHJldiIsImZpbmREcm9wVGFyZ2V0Um93IiwiZmluZERyYWdEaXJlY3Rpb24iLCJwYXJzZUludCIsIm9uQWxsb3dEcm9wIiwicHJvY2Vzc01vdXNldXAiLCJmYWRlSW4iLCJqc29uaXplIiwidGFibGVEYXRhIiwic2VyaWFsaXplVGFibGUiLCJzZXJpYWxpemVUYWJsZXMiLCJrIiwiY29kZSIsIm1ha2VBcnJheSIsInRhYmxlRG5EVXBkYXRlIiwidGFibGVEbkRTZXJpYWxpemUiLCJwcm94eSIsInRhYmxlRG5EU2VyaWFsaXplQWxsIiwidGFibGVEbkREYXRhIiwicmVuZGVyIiwiX3ZtIiwiX2giLCIkY3JlYXRlRWxlbWVudCIsIl9jIiwiX3NlbGYiLCJhdHRycyIsInN0YXRpY0NsYXNzIiwiX3YiLCJkaXNwbGF5ZWRUaXRsZSIsImRpc3BsYXllZERlc2NyaXB0aW9uIiwiX3dpdGhTdHJpcHBlZCIsImNvbXBvbmVudCIsIl9fZmlsZSIsIm5vcm1hbGl6ZUNvbXBvbmVudCIsInNjcmlwdEV4cG9ydHMiLCJzdGF0aWNSZW5kZXJGbnMiLCJmdW5jdGlvbmFsVGVtcGxhdGUiLCJpbmplY3RTdHlsZXMiLCJzY29wZUlkIiwibW9kdWxlSWRlbnRpZmllciIsInNoYWRvd01vZGUiLCJob29rIiwiX2NvbXBpbGVkIiwiZnVuY3Rpb25hbCIsIl9zY29wZUlkIiwiJHZub2RlIiwic3NyQ29udGV4dCIsInBhcmVudCIsIl9fVlVFX1NTUl9DT05URVhUX18iLCJfcmVnaXN0ZXJlZENvbXBvbmVudHMiLCJfc3NyUmVnaXN0ZXIiLCIkcm9vdCIsIiRvcHRpb25zIiwic2hhZG93Um9vdCIsIl9pbmplY3RTdHlsZXMiLCJvcmlnaW5hbFJlbmRlciIsImJlZm9yZUNyZWF0ZSIsImxvY2FscyIsImxpc3RUb1N0eWxlcyIsInBhcmVudElkIiwic3R5bGVzIiwibmV3U3R5bGVzIiwicGFydCIsIm1lZGlhIiwic291cmNlTWFwIiwicGFydHMiLCJoYXNEb2N1bWVudCIsIkRFQlVHIiwic3R5bGVzSW5Eb20iLCJoZWFkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzaW5nbGV0b25FbGVtZW50Iiwic2luZ2xldG9uQ291bnRlciIsImlzUHJvZHVjdGlvbiIsIm5vb3AiLCJzc3JJZEtleSIsImlzT2xkSUUiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ0b0xvd2VyQ2FzZSIsImFkZFN0eWxlc0NsaWVudCIsIl9pc1Byb2R1Y3Rpb24iLCJfb3B0aW9ucyIsImFkZFN0eWxlc1RvRG9tIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsImRvbVN0eWxlIiwicmVmcyIsImFkZFN0eWxlIiwiY3JlYXRlU3R5bGVFbGVtZW50Iiwic3R5bGVFbGVtZW50IiwidXBkYXRlIiwicmVtb3ZlQ2hpbGQiLCJzdHlsZUluZGV4IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsImFwcGx5VG9UYWciLCJuZXdPYmoiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsInNzcklkIiwiZnJlZXplIiwidCIsInIiLCJwYXJzZUZsb2F0IiwiaXNGaW5pdGUiLCJ1IiwicCIsInYiLCJzcGxpY2UiLCJfIiwidG9VcHBlckNhc2UiLCJfbGVuZ3RoIiwiQSIsIkUiLCJOIiwiZXZlcnkiLCJEYXRlIiwiZ2V0VGltZSIsIkQiLCJMIiwiTSIsIkkiLCJvcHRpb25NZXJnZVN0cmF0ZWdpZXMiLCJzaWxlbnQiLCJwcm9kdWN0aW9uVGlwIiwiZGV2dG9vbHMiLCJwZXJmb3JtYW5jZSIsImVycm9ySGFuZGxlciIsIndhcm5IYW5kbGVyIiwiaWdub3JlZEVsZW1lbnRzIiwia2V5Q29kZXMiLCJpc1Jlc2VydmVkVGFnIiwiaXNSZXNlcnZlZEF0dHIiLCJpc1Vua25vd25FbGVtZW50IiwiZ2V0VGFnTmFtZXNwYWNlIiwicGFyc2VQbGF0Zm9ybVRhZ05hbWUiLCJtdXN0VXNlUHJvcCIsImFzeW5jIiwiX2xpZmVjeWNsZUhvb2tzIiwiSCIsInoiLCJWIiwiV1hFbnZpcm9ubWVudCIsInBsYXRmb3JtIiwiSyIsIkoiLCJxIiwiWiIsIlgiLCJZIiwid2F0Y2giLCJRIiwiZWUiLCJ0ZSIsInByb2Nlc3MiLCJlbnYiLCJWVUVfRU5WIiwibmUiLCJfX1ZVRV9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwicmUiLCJpZSIsIm9lIiwiU2V0IiwiY2xlYXIiLCJhZSIsInNlIiwiY2UiLCJzdWJzIiwiYWRkU3ViIiwicmVtb3ZlU3ViIiwiZGVwZW5kIiwiYWRkRGVwIiwibm90aWZ5IiwidWUiLCJsZSIsImZlIiwicGUiLCJlbG0iLCJucyIsImZuQ29udGV4dCIsImZuT3B0aW9ucyIsImZuU2NvcGVJZCIsImNvbXBvbmVudE9wdGlvbnMiLCJjb21wb25lbnRJbnN0YW5jZSIsInJhdyIsImlzU3RhdGljIiwiaXNSb290SW5zZXJ0IiwiaXNDb21tZW50IiwiaXNDbG9uZWQiLCJpc09uY2UiLCJhc3luY0ZhY3RvcnkiLCJhc3luY01ldGEiLCJpc0FzeW5jUGxhY2Vob2xkZXIiLCJkZSIsImNoaWxkIiwidmUiLCJoZSIsIm1lIiwieWUiLCJnZSIsImZvckVhY2giLCJfX29iX18iLCJvYnNlcnZlQXJyYXkiLCJkZXAiLCJiZSIsIiRlIiwid2UiLCJ2bUNvdW50IiwiX19wcm90b19fIiwid2FsayIsIkNlIiwiaXNFeHRlbnNpYmxlIiwiX2lzVnVlIiwieGUiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZSIsIkFlIiwiT2UiLCJTZSIsIlRlIiwiRWUiLCJOZSIsImluamVjdCIsImNvbXB1dGVkIiwicHJvdmlkZSIsImplIiwiRGUiLCJkaXJlY3RpdmVzIiwiX2Jhc2UiLCJleHRlbmRzIiwibWl4aW5zIiwiTGUiLCJNZSIsIlBlIiwicHJvcHNEYXRhIiwiX3Byb3BzIiwiSWUiLCJGZSIsIlJlIiwiJHBhcmVudCIsImVycm9yQ2FwdHVyZWQiLCJCZSIsIkhlIiwiX2hhbmRsZWQiLCJVZSIsInplIiwiVmUiLCJLZSIsIkplIiwicWUiLCJQcm9taXNlIiwiV2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJzZXRJbW1lZGlhdGUiLCJaZSIsIkdlIiwiWGUiLCJvYnNlcnZlIiwiY2hhcmFjdGVyRGF0YSIsIlllIiwiUWUiLCJldCIsImlzRnJvemVuIiwidHQiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIm50IiwiZm5zIiwicnQiLCJtZXJnZWQiLCJvdCIsImF0Iiwic3QiLCJfaXNWTGlzdCIsImN0IiwiX3Byb3ZpZGVkIiwidXQiLCJzbG90IiwiZnQiLCIkc3RhYmxlIiwiJGtleSIsIl9ub3JtYWxpemVkIiwiJGhhc05vcm1hbCIsInB0IiwiZHQiLCJ2dCIsImh0IiwiJHNjb3BlZFNsb3RzIiwiJHNsb3RzIiwibXQiLCJ5dCIsImd0IiwiZG9tUHJvcHMiLCJidCIsIl9zdGF0aWNUcmVlcyIsInd0IiwiX3JlbmRlclByb3h5IiwiJHQiLCJDdCIsInh0Iiwia3QiLCJBdCIsIk90IiwiU3QiLCJfbyIsIl9sIiwiX3EiLCJfbSIsIl9mIiwiX2siLCJfYiIsIl91IiwiX2ciLCJfcCIsIlR0IiwiX29yaWdpbmFsIiwiaW5qZWN0aW9ucyIsInNsb3RzIiwic2NvcGVkU2xvdHMiLCJQdCIsIkV0IiwiTnQiLCJqdCIsIl9pc0Rlc3Ryb3llZCIsImtlZXBBbGl2ZSIsInByZXBhdGNoIiwiX2lzQ29tcG9uZW50IiwiX3BhcmVudFZub2RlIiwiaW5saW5lVGVtcGxhdGUiLCJDdG9yIiwiV3QiLCIkbW91bnQiLCJfcmVuZGVyQ2hpbGRyZW4iLCJfdm5vZGUiLCIkYXR0cnMiLCIkbGlzdGVuZXJzIiwiX3Byb3BLZXlzIiwiX3BhcmVudExpc3RlbmVycyIsInF0IiwiJGZvcmNlVXBkYXRlIiwiaW5zZXJ0IiwiX2lzTW91bnRlZCIsIll0IiwiX2luYWN0aXZlIiwiZW4iLCJYdCIsImRlc3Ryb3kiLCJfZGlyZWN0SW5hY3RpdmUiLCJHdCIsIiRjaGlsZHJlbiIsIiRkZXN0cm95IiwiRHQiLCJMdCIsImNpZCIsImVycm9yQ29tcCIsInJlc29sdmVkIiwiSHQiLCJvd25lcnMiLCJsb2FkaW5nIiwibG9hZGluZ0NvbXAiLCIkb24iLCJjbGVhclRpbWVvdXQiLCJCdCIsImRlbGF5IiwidGltZW91dCIsIiRuIiwibW9kZWwiLCJjYWxsYmFjayIsIm5hdGl2ZU9uIiwiYWJzdHJhY3QiLCJfbWVyZ2VkIiwiTXQiLCJwcmUiLCJjbGFzcyIsIlJ0IiwidG9TdHJpbmdUYWciLCJVdCIsInp0IiwiVnQiLCJLdCIsIiRvZmYiLCJKdCIsIlp0IiwiX2hhc0hvb2tFdmVudCIsIiRlbWl0IiwiUXQiLCJ0biIsIm5uIiwicm4iLCJhbiIsInNuIiwibm93IiwiY24iLCJjcmVhdGVFdmVudCIsInRpbWVTdGFtcCIsInVuIiwic29ydCIsImJlZm9yZSIsInJ1biIsIl93YXRjaGVyIiwibG4iLCJfd2F0Y2hlcnMiLCJkZWVwIiwidXNlciIsImxhenkiLCJzeW5jIiwiY2IiLCJhY3RpdmUiLCJkaXJ0eSIsImRlcHMiLCJuZXdEZXBzIiwiZGVwSWRzIiwibmV3RGVwSWRzIiwiZXhwcmVzc2lvbiIsImdldHRlciIsImNsZWFudXBEZXBzIiwiZXZhbHVhdGUiLCJ0ZWFyZG93biIsIl9pc0JlaW5nRGVzdHJveWVkIiwicG4iLCJkbiIsImhuIiwibW4iLCJ5biIsImduIiwiY2FjaGUiLCJfY29tcHV0ZWRXYXRjaGVycyIsIiR3YXRjaCIsImJuIiwic3VwZXIiLCJzdXBlck9wdGlvbnMiLCJzZWFsZWRPcHRpb25zIiwiZXh0ZW5kT3B0aW9ucyIsInduIiwiX2luaXQiLCJ4biIsImtuIiwiQW4iLCJPbiIsIl91aWQiLCJfY29tcG9uZW50VGFnIiwiJHJlZnMiLCJfZGF0YSIsInZuIiwiJHNldCIsIiRkZWxldGUiLCJpbW1lZGlhdGUiLCIkb25jZSIsIl91cGRhdGUiLCIkZWwiLCJfX3BhdGNoX18iLCJfX3Z1ZV9fIiwiJG5leHRUaWNrIiwiX3JlbmRlciIsIlNuIiwiVG4iLCJLZWVwQWxpdmUiLCJpbmNsdWRlIiwiZXhjbHVkZSIsImNyZWF0ZWQiLCJkZXN0cm95ZWQiLCJtb3VudGVkIiwidXRpbCIsIm1lcmdlT3B0aW9ucyIsImRlZmluZVJlYWN0aXZlIiwiZGVsZXRlIiwibmV4dFRpY2siLCJvYnNlcnZhYmxlIiwidXNlIiwiX2luc3RhbGxlZFBsdWdpbnMiLCJpbnN0YWxsIiwibWl4aW4iLCJfQ3RvciIsIkNuIiwiRW4iLCJObiIsImpuIiwiRG4iLCJMbiIsIkluIiwiRm4iLCJQbiIsIlJuIiwiSG4iLCJVbiIsInpuIiwiVm4iLCJLbiIsInN2ZyIsIm1hdGgiLCJKbiIsInFuIiwiV24iLCJabiIsIkduIiwiWG4iLCJZbiIsIlFuIiwibXVsdGlwbGUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVDb21tZW50Iiwic2V0VGV4dENvbnRlbnQiLCJ0ZXh0Q29udGVudCIsInNldFN0eWxlU2NvcGUiLCJ0ciIsInJlZiIsInJlZkluRm9yIiwibnIiLCJyciIsImlyIiwib3IiLCJhciIsInNyIiwidXIiLCJvbGRWYWx1ZSIsIm9sZEFyZyIsImZyIiwiY29tcG9uZW50VXBkYXRlZCIsImluc2VydGVkIiwiY3IiLCJtb2RpZmllcnMiLCJsciIsInJhd05hbWUiLCJwciIsImRyIiwiaW5oZXJpdEF0dHJzIiwidnIiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsInJlbW92ZUF0dHJpYnV0ZSIsImhyIiwiTW4iLCJzZXRBdHRyaWJ1dGVOUyIsIl9faWVwaCIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJtciIsInlyIiwiQm4iLCJfdHJhbnNpdGlvbkNsYXNzZXMiLCJfcHJldkNsYXNzIiwiZ3IiLCJfciIsImJyIiwiJHIiLCJ3ciIsIkNyIiwieHIiLCJrciIsIkFyIiwiT3IiLCJTciIsIlRyIiwiRXIiLCJSciIsImR5bmFtaWMiLCJwbGFpbiIsIk5yIiwiZHluYW1pY0F0dHJzIiwianIiLCJhdHRyc01hcCIsImF0dHJzTGlzdCIsIkRyIiwiaXNEeW5hbWljQXJnIiwiTHIiLCJNciIsInJpZ2h0IiwibWlkZGxlIiwibmF0aXZlIiwibmF0aXZlRXZlbnRzIiwiSXIiLCJGciIsIlByIiwic3RhcnQiLCJlbmQiLCJIciIsIm51bWJlciIsIkJyIiwibGFzdEluZGV4T2YiLCJleHAiLCJ6ciIsIlZyIiwiVXIiLCJKciIsIktyIiwicXIiLCJHciIsIlFyIiwiWHIiLCJZciIsIl93cmFwcGVyIiwib3duZXJEb2N1bWVudCIsImVpIiwiY2hhbmdlIiwidGkiLCJuaSIsInJpIiwiX3ZhbHVlIiwiaWkiLCJjb21wb3NpbmciLCJhY3RpdmVFbGVtZW50IiwiX3ZNb2RpZmllcnMiLCJvaSIsImFpIiwic2kiLCJjaSIsInN0YXRpY1N0eWxlIiwidWkiLCJsaSIsImZpIiwicGkiLCJzZXRQcm9wZXJ0eSIsInZpIiwiZGkiLCJoaSIsIm5vcm1hbGl6ZWRTdHlsZSIsIm1pIiwieWkiLCJnaSIsImdldEF0dHJpYnV0ZSIsImJpIiwiJGkiLCJlbnRlckNsYXNzIiwiZW50ZXJUb0NsYXNzIiwiZW50ZXJBY3RpdmVDbGFzcyIsImxlYXZlQ2xhc3MiLCJsZWF2ZVRvQ2xhc3MiLCJsZWF2ZUFjdGl2ZUNsYXNzIiwid2kiLCJDaSIsInhpIiwia2kiLCJBaSIsIk9pIiwiU2kiLCJvbnRyYW5zaXRpb25lbmQiLCJvbndlYmtpdHRyYW5zaXRpb25lbmQiLCJvbmFuaW1hdGlvbmVuZCIsIm9ud2Via2l0YW5pbWF0aW9uZW5kIiwiVGkiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJFaSIsIk5pIiwiamkiLCJEaSIsIk1pIiwicHJvcENvdW50IiwiTGkiLCJnZXRDb21wdXRlZFN0eWxlIiwiSWkiLCJoYXNUcmFuc2Zvcm0iLCJGaSIsIlBpIiwiX2xlYXZlQ2IiLCJjYW5jZWxsZWQiLCJ0cmFuc2l0aW9uIiwiX2VudGVyQ2IiLCJub2RlVHlwZSIsImFwcGVhckNsYXNzIiwiYXBwZWFyVG9DbGFzcyIsImFwcGVhckFjdGl2ZUNsYXNzIiwiYmVmb3JlRW50ZXIiLCJlbnRlciIsImFmdGVyRW50ZXIiLCJlbnRlckNhbmNlbGxlZCIsImJlZm9yZUFwcGVhciIsImFwcGVhciIsImFmdGVyQXBwZWFyIiwiYXBwZWFyQ2FuY2VsbGVkIiwiZHVyYXRpb24iLCJCaSIsIl9wZW5kaW5nIiwiSGkiLCJSaSIsImJlZm9yZUxlYXZlIiwibGVhdmUiLCJhZnRlckxlYXZlIiwibGVhdmVDYW5jZWxsZWQiLCJkZWxheUxlYXZlIiwiVWkiLCJ6aSIsIm5vZGVPcHMiLCJhY3RpdmF0ZSIsInBlbmRpbmdJbnNlcnQiLCJwb3N0cGF0Y2giLCJoYXNDaGlsZE5vZGVzIiwiaGFzQXR0cmlidXRlIiwidm1vZGVsIiwiWGkiLCJWaSIsIl92T3B0aW9ucyIsIktpIiwiV2kiLCJaaSIsIkdpIiwic29tZSIsInFpIiwiSmkiLCJzZWxlY3RlZCIsInNlbGVjdGVkSW5kZXgiLCJpbml0RXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiWWkiLCJRaSIsIl9fdk9yaWdpbmFsRGlzcGxheSIsImVvIiwidG8iLCJubyIsInJvIiwiaW8iLCJvbyIsImFvIiwiX2xlYXZpbmciLCJzbyIsIm1vdmVDbGFzcyIsImNvIiwiX21vdmVDYiIsInVvIiwibmV3UG9zIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibG8iLCJsZWZ0IiwidG9wIiwibW92ZWQiLCJ0cmFuc2Zvcm0iLCJXZWJraXRUcmFuc2Zvcm0iLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJmbyIsIlRyYW5zaXRpb24iLCJUcmFuc2l0aW9uR3JvdXAiLCJiZWZvcmVNb3VudCIsImtlcHQiLCJwcmV2Q2hpbGRyZW4iLCJyZW1vdmVkIiwidXBkYXRlZCIsImhhc01vdmUiLCJfcmVmbG93IiwicHJvcGVydHlOYW1lIiwiX2hhc01vdmUiLCJjbG9uZU5vZGUiLCJIVE1MVW5rbm93bkVsZW1lbnQiLCJIVE1MRWxlbWVudCIsInlvIiwicG8iLCJ2byIsImhvIiwibW8iLCJzdGF0aWNLZXlzIiwidHJhbnNmb3JtTm9kZSIsImNsYXNzQmluZGluZyIsImdlbkRhdGEiLCJnbyIsInN0eWxlQmluZGluZyIsImJvIiwiJG8iLCJ3byIsIkNvIiwieG8iLCJrbyIsIkFvIiwiT28iLCJTbyIsIlRvIiwiRW8iLCJObyIsImpvIiwiRG8iLCJMbyIsIk1vIiwiSW8iLCJGbyIsIlBvIiwiUm8iLCJIbyIsIkJvIiwiVW8iLCJ6byIsIlZvIiwiS28iLCJKbyIsInFvIiwiV28iLCJabyIsIkdvIiwiWG8iLCJZbyIsIlFvIiwiZWEiLCJ0YSIsIm5hIiwicmEiLCJpYSIsIm9hIiwiYWEiLCJzYSIsImNhIiwidWEiLCJtYSIsInJhd0F0dHJzTWFwIiwiZmEiLCJmb3IiLCJzbG90U2NvcGUiLCJzbG90VGFyZ2V0Iiwic2xvdFRhcmdldER5bmFtaWMiLCJ2YSIsInNsb3ROYW1lIiwiaGFzQmluZGluZ3MiLCJoYSIsImNhbWVsIiwicGEiLCJhbGlhcyIsIml0ZXJhdG9yMSIsIml0ZXJhdG9yMiIsImRhIiwiaWZDb25kaXRpb25zIiwieWEiLCJnYSIsIl9hIiwiJGEiLCJ3YSIsImJhIiwicHJlVHJhbnNmb3JtTm9kZSIsInByb2Nlc3NlZCIsImlmIiwiYmxvY2siLCJlbHNlIiwiZWxzZWlmIiwiQ2EiLCJleHBlY3RIVE1MIiwiaHRtbCIsImlzUHJlVGFnIiwiaXNVbmFyeVRhZyIsImNhbkJlTGVmdE9wZW5UYWciLCJyZWR1Y2UiLCJ4YSIsIkFhIiwiT2EiLCJTYSIsIlRhIiwiZXNjIiwidGFiIiwic3BhY2UiLCJ1cCIsImRvd24iLCJFYSIsIk5hIiwiamEiLCJzdG9wIiwicHJldmVudCIsImN0cmwiLCJhbHQiLCJtZXRhIiwiRGEiLCJMYSIsIk1hIiwiSWEiLCJ3cmFwTGlzdGVuZXJzIiwid3JhcERhdGEiLCJjbG9hayIsIkZhIiwidHJhbnNmb3JtcyIsImRhdGFHZW5GbnMiLCJtYXliZUNvbXBvbmVudCIsIm9uY2VJZCIsIlBhIiwiUmEiLCJzdGF0aWNSb290Iiwic3RhdGljUHJvY2Vzc2VkIiwiSGEiLCJvbmNlUHJvY2Vzc2VkIiwiQmEiLCJmb3JQcm9jZXNzZWQiLCJ6YSIsImlmUHJvY2Vzc2VkIiwiVWEiLCJxYSIsIkdhIiwiVmEiLCJzdGF0aWNJbkZvciIsIkthIiwiSmEiLCJXYSIsIlphIiwiWGEiLCJZYSIsIlFhIiwiZGVsaW1pdGVycyIsImVzIiwidHMiLCJwcmVzZXJ2ZVdoaXRlc3BhY2UiLCJ3aGl0ZXNwYWNlIiwiZm9yYmlkZGVuIiwiY2hhcnMiLCJzaG91bGRLZWVwQ29tbWVudCIsImNvbW1lbnQiLCJzdWJzdHJpbmciLCJ1bmFyeVNsYXNoIiwic2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmIiwic2hvdWxkRGVjb2RlTmV3bGluZXMiLCJsb3dlckNhc2VkVGFnIiwiY29tbWVudHMiLCJvdXRwdXRTb3VyY2VSYW5nZSIsInBsYWNlaG9sZGVyIiwibGFzdEluZGV4IiwidG9rZW5zIiwibGEiLCJvcHRpbWl6ZSIsInN0YXRpYyIsImthIiwiYXN0IiwiZXJyb3JzIiwidGlwcyIsImNvbXBpbGUiLCJjb21waWxlVG9GdW5jdGlvbnMiLCJycyIsIm9zIiwiYXMiLCJzcyIsImNzIiwib3V0ZXJIVE1MIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImRlZmluaXRpb24iLCJnbG9iYWxUaGlzIiwiY2F0ZWdvcmllc0dyaWQiLCJhZGRFeHRlbnNpb24iLCJTdWJtaXRCdWxrRXh0ZW5zaW9uIiwicHJlc3Rhc2hvcCIsImluaXRDb21wb25lbnRzIiwidHJhbnNsYXRvcklucHV0IiwidHJhbnNsYXRhYmxlSW5wdXQiLCJUZXh0V2l0aFJlY29tbWVuZGVkTGVuZ3RoQ291bnRlciIsImxvY2FsZUlucHV0U2VsZWN0b3IiLCJTZXJwIiwibXVsdGlMYW5ndWFnZUl0ZW0iLCJsb2NhbGVJdGVtU2VsZWN0b3IiLCJGb3JtU3VibWl0QnV0dG9uIiwiVGFnZ2FibGVGaWVsZCIsInRva2VuRmllbGRTZWxlY3RvciIsImNyZWF0ZVRva2Vuc09uQmx1ciJdLCJtYXBwaW5ncyI6Ijs0RkE2Qk9BLEVBQUtDLE9BQUxELEUsVUFFTSxTQUFxQkUsRUFBS0MsR0FDckNILEVBQUVJLEtBQUtGLEdBQUtHLE1BQUssa0JBQU1KLE9BQU9LLFNBQVNDLE9BQU9KLFEsa0hDUmhELFVBQ0EsVyxJQUNBLFUsdURBRU9ILEVBQUtDLE9BQUxELEVBUURRLEUsV0FDSixXQUFZQyxFQUFXUCxHQUVyQixJQUYwQixxQkFFWSxJQUFsQ0YsRUFBRVMsRUFBVUMsV0FBV0MsT0FBM0IsQ0FPQSxHQUhBQyxLQUFLQyxZQUFjWCxFQUNuQlUsS0FBS0Usa0JBQWdEQyxJQUFqQ04sRUFBVU8seUJBQXFFRCxJQUFqQ04sRUFBVVEsbUJBRXhFTCxLQUFLRSxhQUFjLENBQ3JCLElBQU1JLEVBQW9CLEdBRXRCVCxFQUFVTyxvQkFDWkUsRUFBa0JDLEtBQUtWLEVBQVVPLG9CQUUvQlAsRUFB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QkFDekJzekMsYUFBYSxJQUFJM3pDLFdBRTlCNVIsT0FBT3lsRCxXQUFXNTRCLFVBQVU2NEIsZUFDMUIsQ0FDRSxvQkFDQSxnQkFDQSxzQkFJSixJQUFNQyxFQUFrQjNsRCxPQUFPeWxELFdBQVc5eUMsU0FBU2l6QyxrQkFDbkQsSUFBSTNnRCxVQUNKLElBQUk0Z0QsV0FFSixhQUF3QixDQUN0QjN6QyxzQkFBdUIsZ0NBRXZCQywyQkFBK0J3ekMsRUFBZ0JHLG9CQUEvQyx5REFHRixhQUF3QixDQUN0QjV6QyxzQkFBdUIscUNBRXZCQywyQkFBK0J3ekMsRUFBZ0JHLG9CQUEvQyw2REFHRixJQUFJQyxVQUNGLENBQ0V0bEQsVUFBVyxZQUNYOEIsYUFBYyxnQ0FDZEMsYUFBYyxzQ0FDZEMsbUJBQW9CLDBDQUNwQkMsbUJBQW9CLCtDQUNwQkMsZUFBZ0Isd0NBQ2hCNUIsbUJBQXVCNGtELEVBQWdCRyxvQkFBdkMsZ0JBQ0FFLGtCQUFtQkwsRUFBZ0JNLG9CQUVyQ2xtRCxFQUFFLGFBQWF1QixLQUFLLGlCQUd0QixJQUFJNGtELFVBRUosSUFBSWxtRCxPQUFPeWxELFdBQVc1NEIsVUFBVXM1QixjQUFjLENBQzVDQyxtQkFBb0IsMEJBQ3BCaDBDLFFBQVMsQ0FDUGkwQyxvQkFBb0IsS0FJeEIsSUFBSTMvQyxVQUFXLHVCQUNmLElBQUlBLFVBQVcsOEJBQThCUSwwQkFFN0MsSUFBSVIsVUFBVyw0QkFDZixJQUFJQSxVQUFXLG1DQUFtQ1EsOEIiLCJmaWxlIjoiY2F0ZWdvcnkuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCBzaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xyXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXHJcbiAqXHJcbiAqIE5PVElDRSBPRiBMSUNFTlNFXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxyXG4gKiB0aGF0IGlzIGJ1bmRsZWQgd2l0aCB0aGlzIHBhY2thZ2UgaW4gdGhlIGZpbGUgTElDRU5TRS5tZC5cclxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XHJcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxyXG4gKiBJZiB5b3UgZGlkIG5vdCByZWNlaXZlIGEgY29weSBvZiB0aGUgbGljZW5zZSBhbmQgYXJlIHVuYWJsZSB0b1xyXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXHJcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cclxuICpcclxuICogRElTQ0xBSU1FUlxyXG4gKlxyXG4gKiBEbyBub3QgZWRpdCBvciBhZGQgdG8gdGhpcyBmaWxlIGlmIHlvdSB3aXNoIHRvIHVwZ3JhZGUgUHJlc3RhU2hvcCB0byBuZXdlclxyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cclxuICpcclxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XHJcbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcclxuICogQGxpY2Vuc2UgICBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjAgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBTZW5kIGEgUG9zdCBSZXF1ZXN0IHRvIHJlc2V0IHNlYXJjaCBBY3Rpb24uXHJcbiAqL1xyXG5cclxuY29uc3QgeyR9ID0gd2luZG93O1xyXG5cclxuY29uc3QgaW5pdCA9IGZ1bmN0aW9uIHJlc2V0U2VhcmNoKHVybCwgcmVkaXJlY3RVcmwpIHtcclxuICAkLnBvc3QodXJsKS50aGVuKCgpID0+IHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24ocmVkaXJlY3RVcmwpKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGluaXQ7XHJcbiIsIi8qKlxyXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcclxuICogUHJlc3RhU2hvcCBpcyBhbiBJbnRlcm5hdGlvbmFsIFJlZ2lzdGVyZWQgVHJhZGVtYXJrICYgUHJvcGVydHkgb2YgUHJlc3RhU2hvcCBTQVxyXG4gKlxyXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcclxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXHJcbiAqIEl0IGlzIGFsc28gYXZhaWxhYmxlIHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViIGF0IHRoaXMgVVJMOlxyXG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcclxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cclxuICogb2J0YWluIGl0IHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbFxyXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXHJcbiAqXHJcbiAqIERJU0NMQUlNRVJcclxuICpcclxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcclxuICogdmVyc2lvbnMgaW4gdGhlIGZ1dHVyZS4gSWYgeW91IHdpc2ggdG8gY3VzdG9taXplIFByZXN0YVNob3AgZm9yIHlvdXJcclxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXHJcbiAqXHJcbiAqIEBhdXRob3IgICAgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzIDxjb250YWN0QHByZXN0YXNob3AuY29tPlxyXG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXHJcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcclxuICovXHJcbmltcG9ydCBWdWUgZnJvbSAndnVlJztcclxuaW1wb3J0IHtFdmVudEVtaXR0ZXJ9IGZyb20gJ0Bjb21wb25lbnRzL2V2ZW50LWVtaXR0ZXInO1xyXG5pbXBvcnQgc2VycCBmcm9tICcuL3NlcnAudnVlJztcclxuXHJcbmNvbnN0IHskfSA9IHdpbmRvdztcclxuXHJcbi8qKlxyXG4gKiBWdWUgY29tcG9uZW50IGRpc3BsYXlpbmcgYSBzZWFyY2ggcGFnZSByZXN1bHQsIEdvb2dsZSBzdHlsZS5cclxuICogUmVxdWlyZXMgYSB0YWcgd2l0aCB0aGUgaWQgXCIjc2VycC1hcHBcIiB0byBiZSBwcmVzZW50IGluIHRoZSBET00gdG8gcnVuIGl0LlxyXG4gKiBUaGUgY29tcG9uZW50IGlzIGF1dG9tYXRpY2FsbHkgdXBkYXRlZCBieSB3YXRjaGluZyBzZXZlcmFsIGlucHV0cy5cclxuICogU2V0IHRoZSBwcm9wZXIgY2xhc3MgdG8gbGluayBhIGlucHV0IHRvIGEgcGFydCBvZiB0aGUgcGFuZWwuXHJcbiAqL1xyXG5jbGFzcyBTZXJwQXBwIHtcclxuICBjb25zdHJ1Y3RvcihzZWxlY3RvcnMsIHVybCkge1xyXG4gICAgLy8gSWYgdGhlIHNlbGVjdG9yIGNhbm5vdCBiZSBmb3VuZCwgd2UgZG8gbm90IGxvYWQgdGhlIFZ1ZSBhcHBcclxuICAgIGlmICgkKHNlbGVjdG9ycy5jb250YWluZXIpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5vcmlnaW5hbFVybCA9IHVybDtcclxuICAgIHRoaXMudXNlTXVsdGlMYW5nID0gc2VsZWN0b3JzLm11bHRpTGFuZ3VhZ2VJbnB1dCAhPT0gdW5kZWZpbmVkIHx8IHNlbGVjdG9ycy5tdWx0aUxhbmd1YWdlRmllbGQgIT09IHVuZGVmaW5lZDtcclxuXHJcbiAgICBpZiAodGhpcy51c2VNdWx0aUxhbmcpIHtcclxuICAgICAgY29uc3QgcG9zc2libGVTZWxlY3RvcnMgPSBbXTtcclxuXHJcbiAgICAgIGlmIChzZWxlY3RvcnMubXVsdGlMYW5ndWFnZUlucHV0KSB7XHJcbiAgICAgICAgcG9zc2libGVTZWxlY3RvcnMucHVzaChzZWxlY3RvcnMubXVsdGlMYW5ndWFnZUlucHV0KTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoc2VsZWN0b3JzLm11bHRpTGFuZ3VhZ2VGaWVsZCkge1xyXG4gICAgICAgIHBvc3NpYmxlU2VsZWN0b3JzLnB1c2goc2VsZWN0b3JzLm11bHRpTGFuZ3VhZ2VGaWVsZCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5tdWx0aUxhbmdTZWxlY3RvciA9IHBvc3NpYmxlU2VsZWN0b3JzLmpvaW4oJywnKTtcclxuICAgICAgdGhpcy5hdHRhY2hNdWx0aUxhbmdFdmVudHMoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmRhdGEgPSB7XHJcbiAgICAgIHVybCxcclxuICAgICAgdGl0bGU6ICcnLFxyXG4gICAgICBkZXNjcmlwdGlvbjogJycsXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMudm0gPSBuZXcgVnVlKHtcclxuICAgICAgZWw6IHNlbGVjdG9ycy5jb250YWluZXIsXHJcbiAgICAgIHRlbXBsYXRlOiAnPHNlcnAgcmVmPVwic2VycFwiIDp1cmw9XCJ1cmxcIiA6dGl0bGU9XCJ0aXRsZVwiIDpkZXNjcmlwdGlvbj1cImRlc2NyaXB0aW9uXCIgLz4nLFxyXG4gICAgICBjb21wb25lbnRzOiB7c2VycH0sXHJcbiAgICAgIGRhdGE6IHRoaXMuZGF0YSxcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuaW5pdGlhbGl6ZVNlbGVjdG9ycyhzZWxlY3RvcnMpO1xyXG4gICAgdGhpcy5hdHRhY2hJbnB1dEV2ZW50cygpO1xyXG4gIH1cclxuXHJcbiAgYXR0YWNoTXVsdGlMYW5nRXZlbnRzKGl0ZW1TZWxlY3Rvcikge1xyXG4gICAgJCgnYm9keScpLm9uKFxyXG4gICAgICAnY2xpY2snLFxyXG4gICAgICBpdGVtU2VsZWN0b3IsXHJcbiAgICAgICgpID0+IHtcclxuICAgICAgICB0aGlzLmNoZWNrVGl0bGUoKTtcclxuICAgICAgICB0aGlzLmNoZWNrRGVzYygpO1xyXG4gICAgICAgIHRoaXMuY2hlY2tVcmwoKTtcclxuICAgICAgfSxcclxuICAgICk7XHJcblxyXG4gICAgRXZlbnRFbWl0dGVyLm9uKCdsYW5ndWFnZVNlbGVjdGVkJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLmNoZWNrVGl0bGUoKTtcclxuICAgICAgdGhpcy5jaGVja0Rlc2MoKTtcclxuICAgICAgdGhpcy5jaGVja1VybCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBpbml0aWFsaXplU2VsZWN0b3JzKHNlbGVjdG9ycykge1xyXG4gICAgdGhpcy5kZWZhdWx0VGl0bGUgPSAkKHNlbGVjdG9ycy5kZWZhdWx0VGl0bGUpO1xyXG4gICAgdGhpcy53YXRjaGVkVGl0bGUgPSAkKHNlbGVjdG9ycy53YXRjaGVkVGl0bGUpO1xyXG4gICAgdGhpcy5kZWZhdWx0RGVzY3JpcHRpb24gPSAkKHNlbGVjdG9ycy5kZWZhdWx0RGVzY3JpcHRpb24pO1xyXG4gICAgdGhpcy53YXRjaGVkRGVzY3JpcHRpb24gPSAkKHNlbGVjdG9ycy53YXRjaGVkRGVzY3JpcHRpb24pO1xyXG4gICAgdGhpcy53YXRjaGVkTWV0YVVybCA9ICQoc2VsZWN0b3JzLndhdGNoZWRNZXRhVXJsKTtcclxuICB9XHJcblxyXG4gIGF0dGFjaElucHV0RXZlbnRzKCkge1xyXG4gICAgJCh0aGlzLmRlZmF1bHRUaXRsZSkub24oJ2tleXVwIGNoYW5nZScsICgpID0+IHRoaXMuY2hlY2tUaXRsZSgpKTtcclxuICAgICQodGhpcy53YXRjaGVkVGl0bGUpLm9uKCdrZXl1cCBjaGFuZ2UnLCAoKSA9PiB0aGlzLmNoZWNrVGl0bGUoKSk7XHJcbiAgICAkKHRoaXMuZGVmYXVsdERlc2NyaXB0aW9uKS5vbigna2V5dXAgY2hhbmdlJywgKCkgPT4gdGhpcy5jaGVja0Rlc2MoKSk7XHJcbiAgICAkKHRoaXMud2F0Y2hlZERlc2NyaXB0aW9uKS5vbigna2V5dXAgY2hhbmdlJywgKCkgPT4gdGhpcy5jaGVja0Rlc2MoKSk7XHJcbiAgICB0aGlzLndhdGNoZWRNZXRhVXJsLm9uKCdrZXl1cCBjaGFuZ2UnLCAoKSA9PiB0aGlzLmNoZWNrVXJsKCkpO1xyXG5cclxuICAgIHRoaXMuY2hlY2tUaXRsZSgpO1xyXG4gICAgdGhpcy5jaGVja0Rlc2MoKTtcclxuICAgIHRoaXMuY2hlY2tVcmwoKTtcclxuICB9XHJcblxyXG4gIHNldFRpdGxlKHRpdGxlKSB7XHJcbiAgICB0aGlzLmRhdGEudGl0bGUgPSB0aXRsZTtcclxuICB9XHJcblxyXG4gIHNldERlc2NyaXB0aW9uKGRlc2NyaXB0aW9uKSB7XHJcbiAgICB0aGlzLmRhdGEuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcclxuICB9XHJcblxyXG4gIHNldFVybChyZXdyaXRlKSB7XHJcbiAgICAvLyBXZSByZXBsYWNlIHR3byBwbGFjZWhvbGRlcnMgYmVjYXVzZSB0aGVyZSB3YXMgYSB0eXBvIGluIHRoZSBpbml0aWFsIG9uZSAoJ2ZyaWVuZHknIGluc3RlYWQgb2YgJ2ZyaWVuZGx5JylcclxuICAgIHRoaXMuZGF0YS51cmwgPSB0aGlzLm9yaWdpbmFsVXJsLnJlcGxhY2UoXHJcbiAgICAgICd7ZnJpZW5keS11cmx9JyxcclxuICAgICAgcmV3cml0ZSxcclxuICAgICk7XHJcbiAgICB0aGlzLmRhdGEudXJsID0gdGhpcy5kYXRhLnVybC5yZXBsYWNlKFxyXG4gICAgICAne2ZyaWVuZGx5LXVybH0nLFxyXG4gICAgICByZXdyaXRlLFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGNoZWNrVGl0bGUoKSB7XHJcbiAgICBsZXQge2RlZmF1bHRUaXRsZX0gPSB0aGlzO1xyXG4gICAgbGV0IHt3YXRjaGVkVGl0bGV9ID0gdGhpcztcclxuXHJcbiAgICBpZiAodGhpcy51c2VNdWx0aUxhbmcpIHtcclxuICAgICAgd2F0Y2hlZFRpdGxlID0gd2F0Y2hlZFRpdGxlLmNsb3Nlc3QodGhpcy5tdWx0aUxhbmdTZWxlY3RvcikuZmluZCgnaW5wdXQnKTtcclxuICAgICAgZGVmYXVsdFRpdGxlID0gZGVmYXVsdFRpdGxlLmNsb3Nlc3QodGhpcy5tdWx0aUxhbmdTZWxlY3RvcikuZmluZCgnaW5wdXQnKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aXRsZTEgPSB3YXRjaGVkVGl0bGUubGVuZ3RoID8gd2F0Y2hlZFRpdGxlLnZhbCgpIDogJyc7XHJcbiAgICBjb25zdCB0aXRsZTIgPSBkZWZhdWx0VGl0bGUubGVuZ3RoID8gZGVmYXVsdFRpdGxlLnZhbCgpIDogJyc7XHJcblxyXG4gICAgdGhpcy5zZXRUaXRsZSh0aXRsZTEgPT09ICcnID8gdGl0bGUyIDogdGl0bGUxKTtcclxuICAgIC8vIEFsd2F5cyBjaGVjayBmb3IgdXJsIGlmIHRpdGxlIGNoYW5nZVxyXG4gICAgdGhpcy5jaGVja1VybCgpO1xyXG4gIH1cclxuXHJcbiAgY2hlY2tEZXNjKCkge1xyXG4gICAgbGV0IHt3YXRjaGVkRGVzY3JpcHRpb259ID0gdGhpcztcclxuICAgIGxldCB7ZGVmYXVsdERlc2NyaXB0aW9ufSA9IHRoaXM7XHJcblxyXG4gICAgaWYgKHRoaXMudXNlTXVsdGlMYW5nKSB7XHJcbiAgICAgIHdhdGNoZWREZXNjcmlwdGlvbiA9IHdhdGNoZWREZXNjcmlwdGlvblxyXG4gICAgICAgIC5jbG9zZXN0KHRoaXMubXVsdGlMYW5nU2VsZWN0b3IpXHJcbiAgICAgICAgLmZpbmQodGhpcy53YXRjaGVkRGVzY3JpcHRpb24uaXMoJ2lucHV0JykgPyAnaW5wdXQnIDogJ3RleHRhcmVhJyk7XHJcbiAgICAgIGRlZmF1bHREZXNjcmlwdGlvbiA9IGRlZmF1bHREZXNjcmlwdGlvblxyXG4gICAgICAgIC5jbG9zZXN0KHRoaXMubXVsdGlMYW5nU2VsZWN0b3IpXHJcbiAgICAgICAgLmZpbmQodGhpcy5kZWZhdWx0RGVzY3JpcHRpb24uaXMoJ2lucHV0JykgPyAnaW5wdXQnIDogJ3RleHRhcmVhJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGVzYzEgPSB3YXRjaGVkRGVzY3JpcHRpb24ubGVuZ3RoID8gd2F0Y2hlZERlc2NyaXB0aW9uLnZhbCgpLmlubmVyVGV4dCB8fCB3YXRjaGVkRGVzY3JpcHRpb24udmFsKCkgOiAnJztcclxuICAgIGNvbnN0IGRlc2MyID0gZGVmYXVsdERlc2NyaXB0aW9uLmxlbmd0aCA/ICQoZGVmYXVsdERlc2NyaXB0aW9uLnZhbCgpKS50ZXh0KCkgfHwgZGVmYXVsdERlc2NyaXB0aW9uLnZhbCgpIDogJyc7XHJcblxyXG4gICAgdGhpcy5zZXREZXNjcmlwdGlvbihkZXNjMSA9PT0gJycgPyBkZXNjMiA6IGRlc2MxKTtcclxuICB9XHJcblxyXG4gIGNoZWNrVXJsKCkge1xyXG4gICAgbGV0IHt3YXRjaGVkTWV0YVVybH0gPSB0aGlzO1xyXG5cclxuICAgIGlmICh0aGlzLnVzZU11bHRpTGFuZykge1xyXG4gICAgICB3YXRjaGVkTWV0YVVybCA9IHdhdGNoZWRNZXRhVXJsLmNsb3Nlc3QodGhpcy5tdWx0aUxhbmdTZWxlY3RvcikuZmluZCgnaW5wdXQnKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNldFVybCh3YXRjaGVkTWV0YVVybC52YWwoKSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZXJwQXBwO1xyXG4iLCIvKipcclxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXHJcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcclxuICpcclxuICogTk9USUNFIE9GIExJQ0VOU0VcclxuICpcclxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXHJcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxyXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcclxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXHJcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXHJcbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcclxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxyXG4gKlxyXG4gKiBESVNDTEFJTUVSXHJcbiAqXHJcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXHJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXHJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cclxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xyXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXHJcbiAqL1xyXG5cclxuY29uc3QgeyR9ID0gd2luZG93O1xyXG5cclxuLyoqXHJcbiAqIE1ha2VzIGEgdGFibGUgc29ydGFibGUgYnkgY29sdW1ucy5cclxuICogVGhpcyBmb3JjZXMgYSBwYWdlIHJlbG9hZCB3aXRoIG1vcmUgcXVlcnkgcGFyYW1ldGVycy5cclxuICovXHJcbmNsYXNzIFRhYmxlU29ydGluZyB7XHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtqUXVlcnl9IHRhYmxlXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IodGFibGUpIHtcclxuICAgIHRoaXMuc2VsZWN0b3IgPSAnLnBzLXNvcnRhYmxlLWNvbHVtbic7XHJcbiAgICB0aGlzLmNvbHVtbnMgPSAkKHRhYmxlKS5maW5kKHRoaXMuc2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQXR0YWNoZXMgdGhlIGxpc3RlbmVyc1xyXG4gICAqL1xyXG4gIGF0dGFjaCgpIHtcclxuICAgIHRoaXMuY29sdW1ucy5vbignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICBjb25zdCAkY29sdW1uID0gJChlLmRlbGVnYXRlVGFyZ2V0KTtcclxuICAgICAgdGhpcy5zb3J0QnlDb2x1bW4oJGNvbHVtbiwgdGhpcy5nZXRUb2dnbGVkU29ydERpcmVjdGlvbigkY29sdW1uKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNvcnQgdXNpbmcgYSBjb2x1bW4gbmFtZVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2x1bW5OYW1lXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRpcmVjdGlvbiBcImFzY1wiIG9yIFwiZGVzY1wiXHJcbiAgICovXHJcbiAgc29ydEJ5KGNvbHVtbk5hbWUsIGRpcmVjdGlvbikge1xyXG4gICAgY29uc3QgJGNvbHVtbiA9IHRoaXMuY29sdW1ucy5pcyhgW2RhdGEtc29ydC1jb2wtbmFtZT1cIiR7Y29sdW1uTmFtZX1cIl1gKTtcclxuXHJcbiAgICBpZiAoISRjb2x1bW4pIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3Qgc29ydCBieSBcIiR7Y29sdW1uTmFtZX1cIjogaW52YWxpZCBjb2x1bW5gKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNvcnRCeUNvbHVtbigkY29sdW1uLCBkaXJlY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU29ydCB1c2luZyBhIGNvbHVtbiBlbGVtZW50XHJcbiAgICogQHBhcmFtIHtqUXVlcnl9IGNvbHVtblxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3Rpb24gXCJhc2NcIiBvciBcImRlc2NcIlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICovXHJcbiAgc29ydEJ5Q29sdW1uKGNvbHVtbiwgZGlyZWN0aW9uKSB7XHJcbiAgICB3aW5kb3cubG9jYXRpb24gPSB0aGlzLmdldFVybChcclxuICAgICAgY29sdW1uLmRhdGEoJ3NvcnRDb2xOYW1lJyksXHJcbiAgICAgIChkaXJlY3Rpb24gPT09ICdkZXNjJykgPyAnZGVzYycgOiAnYXNjJyxcclxuICAgICAgY29sdW1uLmRhdGEoJ3NvcnRQcmVmaXgnKSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm5zIHRoZSBpbnZlcnRlZCBkaXJlY3Rpb24gdG8gc29ydCBhY2NvcmRpbmcgdG8gdGhlIGNvbHVtbidzIGN1cnJlbnQgb25lXHJcbiAgICogQHBhcmFtIHtqUXVlcnl9IGNvbHVtblxyXG4gICAqIEByZXR1cm4ge3N0cmluZ31cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqL1xyXG4gIGdldFRvZ2dsZWRTb3J0RGlyZWN0aW9uKGNvbHVtbikge1xyXG4gICAgcmV0dXJuIGNvbHVtbi5kYXRhKCdzb3J0RGlyZWN0aW9uJykgPT09ICdhc2MnID8gJ2Rlc2MnIDogJ2FzYyc7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm5zIHRoZSB1cmwgZm9yIHRoZSBzb3J0ZWQgdGFibGVcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29sTmFtZVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3Rpb25cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4XHJcbiAgICogQHJldHVybiB7c3RyaW5nfVxyXG4gICAqIEBwcml2YXRlXHJcbiAgICovXHJcbiAgZ2V0VXJsKGNvbE5hbWUsIGRpcmVjdGlvbiwgcHJlZml4KSB7XHJcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcclxuICAgIGNvbnN0IHBhcmFtcyA9IHVybC5zZWFyY2hQYXJhbXM7XHJcblxyXG4gICAgaWYgKHByZWZpeCkge1xyXG4gICAgICBwYXJhbXMuc2V0KGAke3ByZWZpeH1bb3JkZXJCeV1gLCBjb2xOYW1lKTtcclxuICAgICAgcGFyYW1zLnNldChgJHtwcmVmaXh9W3NvcnRPcmRlcl1gLCBkaXJlY3Rpb24pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcGFyYW1zLnNldCgnb3JkZXJCeScsIGNvbE5hbWUpO1xyXG4gICAgICBwYXJhbXMuc2V0KCdzb3J0T3JkZXInLCBkaXJlY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB1cmwudG9TdHJpbmcoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRhYmxlU29ydGluZztcclxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2hvaWNlVGFibGUgaXMgcmVzcG9uc2libGUgZm9yIG1hbmFnaW5nIGNvbW1vbiBhY3Rpb25zIGluIGNob2ljZSB0YWJsZSBmb3JtIHR5cGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hvaWNlVGFibGUge1xuICAvKipcbiAgICogSW5pdCBjb25zdHJ1Y3RvclxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcuanMtY2hvaWNlLXRhYmxlLXNlbGVjdC1hbGwnLCAoZSkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVTZWxlY3RBbGwoZSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2svdW5jaGVjayBhbGwgYm94ZXMgaW4gdGFibGVcbiAgICpcbiAgICogQHBhcmFtIHtFdmVudH0gZXZlbnRcbiAgICovXG4gIGhhbmRsZVNlbGVjdEFsbChldmVudCkge1xuICAgIGNvbnN0ICRzZWxlY3RBbGxDaGVja2JveGVzID0gJChldmVudC50YXJnZXQpO1xuICAgIGNvbnN0IGlzU2VsZWN0QWxsQ2hlY2tlZCA9ICRzZWxlY3RBbGxDaGVja2JveGVzLmlzKCc6Y2hlY2tlZCcpO1xuXG4gICAgJHNlbGVjdEFsbENoZWNrYm94ZXMuY2xvc2VzdCgndGFibGUnKS5maW5kKCd0Ym9keSBpbnB1dDpjaGVja2JveCcpLnByb3AoJ2NoZWNrZWQnLCBpc1NlbGVjdEFsbENoZWNrZWQpO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCBzaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogUHJlc3RhU2hvcCBpcyBhbiBJbnRlcm5hdGlvbmFsIFJlZ2lzdGVyZWQgVHJhZGVtYXJrICYgUHJvcGVydHkgb2YgUHJlc3RhU2hvcCBTQVxuICpcbiAqIE5PVElDRSBPRiBMSUNFTlNFXG4gKlxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKiB0aGF0IGlzIGJ1bmRsZWQgd2l0aCB0aGlzIHBhY2thZ2UgaW4gdGhlIGZpbGUgTElDRU5TRS5tZC5cbiAqIEl0IGlzIGFsc28gYXZhaWxhYmxlIHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViIGF0IHRoaXMgVVJMOlxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXG4gKiBJZiB5b3UgZGlkIG5vdCByZWNlaXZlIGEgY29weSBvZiB0aGUgbGljZW5zZSBhbmQgYXJlIHVuYWJsZSB0b1xuICogb2J0YWluIGl0IHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbFxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxuICpcbiAqIERJU0NMQUlNRVJcbiAqXG4gKiBEbyBub3QgZWRpdCBvciBhZGQgdG8gdGhpcyBmaWxlIGlmIHlvdSB3aXNoIHRvIHVwZ3JhZGUgUHJlc3RhU2hvcCB0byBuZXdlclxuICogdmVyc2lvbnMgaW4gdGhlIGZ1dHVyZS4gSWYgeW91IHdpc2ggdG8gY3VzdG9taXplIFByZXN0YVNob3AgZm9yIHlvdXJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEBhdXRob3IgICAgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzIDxjb250YWN0QHByZXN0YXNob3AuY29tPlxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogQGxpY2Vuc2UgICBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjAgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICovXG5cbmltcG9ydCBFdmVudEVtaXR0ZXJDbGFzcyBmcm9tICdldmVudHMnO1xuXG4vKipcbiAqIFdlIGluc3RhbmNpYXRlIG9uZSBFdmVudEVtaXR0ZXIgKHJlc3RyaWN0ZWQgdmlhIGEgY29uc3QpIHNvIHRoYXQgZXZlcnkgY29tcG9uZW50c1xuICogcmVnaXN0ZXIvZGlzcGF0Y2ggb24gdGhlIHNhbWUgb25lIGFuZCBjYW4gY29tbXVuaWNhdGUgd2l0aCBlYWNoIG90aGVyLlxuICovXG5leHBvcnQgY29uc3QgRXZlbnRFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlckNsYXNzKCk7XG5cbmV4cG9ydCBkZWZhdWx0IEV2ZW50RW1pdHRlcjtcbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4vKipcbiAqIENvbXBvbmVudCB3aGljaCBhbGxvd3Mgc3VibWl0dGluZyB2ZXJ5IHNpbXBsZSBmb3JtcyB3aXRob3V0IGhhdmluZyB0byB1c2UgPGZvcm0+IGVsZW1lbnQuXG4gKlxuICogVXNlZnVsIHdoZW4gcGVyZm9ybWluZyBhY3Rpb25zIG9uIHJlc291cmNlIHdoZXJlIFVSTCBjb250YWlucyBhbGwgbmVlZGVkIGRhdGEuXG4gKiBGb3IgZXhhbXBsZSwgdG8gdG9nZ2xlIGNhdGVnb3J5IHN0YXR1cyB2aWEgXCJQT1NUIC9jYXRlZ29yaWVzLzIvdG9nZ2xlLXN0YXR1cylcIlxuICogb3IgZGVsZXRlIGNvdmVyIGltYWdlIHZpYSBcIlBPU1QgL2NhdGVnb3JpZXMvMi9kZWxldGUtY292ZXItaW1hZ2VcIi5cbiAqXG4gKiBVc2FnZSBleGFtcGxlIGluIHRlbXBsYXRlOlxuICpcbiAqIDxidXR0b24gY2xhc3M9XCJqcy1mb3JtLXN1Ym1pdC1idG5cIlxuICogICAgICAgICBkYXRhLWZvcm0tc3VibWl0LXVybD1cIi9teS1jdXN0b20tdXJsXCIgICAgICAgICAgLy8gKHJlcXVpcmVkKSBVUkwgdG8gd2hpY2ggZm9ybSB3aWxsIGJlIHN1Ym1pdHRlZFxuICogICAgICAgICBkYXRhLW1ldGhvZD1cIkdFVHxQT1NUfERFTEVURXxQQVRDSFwiICAgICAgICAgICAgLy8gKG9wdGlvbmFsKSBzcGVjaWZ5IHRoZSB2ZXJiIHRvIHVzZSBmb3IgdGhlIHJlcXVlc3QuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUE9TVCBpcyB0YWtlbiBieSBkZWZhdWx0IGlmIG5vdCB2YWx1ZSBpcyBzZXRcbiAqICAgICAgICAgZGF0YS1mb3JtLWNzcmYtdG9rZW49XCJteS1nZW5lcmF0ZWQtY3NyZi10b2tlblwiIC8vIChvcHRpb25hbCkgdG8gaW5jcmVhc2Ugc2VjdXJpdHlcbiAqICAgICAgICAgZGF0YS1mb3JtLWNvbmZpcm0tbWVzc2FnZT1cIkFyZSB5b3Ugc3VyZT9cIiAgICAgIC8vIChvcHRpb25hbCkgdG8gY29uZmlybSBhY3Rpb24gYmVmb3JlIHN1Ym1pdFxuICogICAgICAgICB0eXBlPVwiYnV0dG9uXCIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gbWFrZSBzdXJlIGl0cyBzaW1wbGUgYnV0dG9uXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gc28gd2UgY2FuIGF2b2lkIHN1Ym1pdHRpbmcgYWN0dWFsIGZvcm1cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIG91ciBidXR0b24gaXMgZGVmaW5lZCBpbnNpZGUgZm9ybVxuICogPlxuICogICAgIENsaWNrIG1lIHRvIHN1Ym1pdCBmb3JtXG4gKiA8L2J1dHRvbj5cbiAqXG4gKiBJbiBwYWdlIHNwZWNpZmljIEpTIHlvdSBoYXZlIHRvIGVuYWJsZSB0aGlzIGZlYXR1cmU6XG4gKlxuICogbmV3IEZvcm1TdWJtaXRCdXR0b24oKTtcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVN1Ym1pdEJ1dHRvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuanMtZm9ybS1zdWJtaXQtYnRuJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBjb25zdCAkYnRuID0gJCh0aGlzKTtcblxuICAgICAgaWYgKCRidG4uZGF0YSgnZm9ybS1jb25maXJtLW1lc3NhZ2UnKSAmJiB3aW5kb3cuY29uZmlybSgkYnRuLmRhdGEoJ2Zvcm0tY29uZmlybS1tZXNzYWdlJykpID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxldCBtZXRob2QgPSAnUE9TVCc7XG4gICAgICBsZXQgYWRkSW5wdXQgPSBudWxsO1xuXG4gICAgICBpZiAoJGJ0bi5kYXRhKCdtZXRob2QnKSkge1xuICAgICAgICBjb25zdCBidG5NZXRob2QgPSAkYnRuLmRhdGEoJ21ldGhvZCcpO1xuICAgICAgICBjb25zdCBpc0dldE9yUG9zdE1ldGhvZCA9IFsnR0VUJywgJ1BPU1QnXS5pbmNsdWRlcyhidG5NZXRob2QpO1xuICAgICAgICBtZXRob2QgPSBpc0dldE9yUG9zdE1ldGhvZCA/IGJ0bk1ldGhvZCA6ICdQT1NUJztcblxuICAgICAgICBpZiAoIWlzR2V0T3JQb3N0TWV0aG9kKSB7XG4gICAgICAgICAgYWRkSW5wdXQgPSAkKCc8aW5wdXQ+Jywge1xuICAgICAgICAgICAgdHlwZTogJ19oaWRkZW4nLFxuICAgICAgICAgICAgbmFtZTogJ19tZXRob2QnLFxuICAgICAgICAgICAgdmFsdWU6IGJ0bk1ldGhvZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCAkZm9ybSA9ICQoJzxmb3JtPicsIHtcbiAgICAgICAgYWN0aW9uOiAkYnRuLmRhdGEoJ2Zvcm0tc3VibWl0LXVybCcpLFxuICAgICAgICBtZXRob2QsXG4gICAgICB9KTtcblxuICAgICAgaWYgKGFkZElucHV0KSB7XG4gICAgICAgICRmb3JtLmFwcGVuZChhZGRJbnB1dCk7XG4gICAgICB9XG5cbiAgICAgIGlmICgkYnRuLmRhdGEoJ2Zvcm0tY3NyZi10b2tlbicpKSB7XG4gICAgICAgICRmb3JtLmFwcGVuZCgkKCc8aW5wdXQ+Jywge1xuICAgICAgICAgIHR5cGU6ICdfaGlkZGVuJyxcbiAgICAgICAgICBuYW1lOiAnX2NzcmZfdG9rZW4nLFxuICAgICAgICAgIHZhbHVlOiAkYnRuLmRhdGEoJ2Zvcm0tY3NyZi10b2tlbicpLFxuICAgICAgICB9KSk7XG4gICAgICB9XG5cbiAgICAgICRmb3JtLmFwcGVuZFRvKCdib2R5Jykuc3VibWl0KCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4vKipcbiAqIEhhbmRsZXMgVUkgaW50ZXJhY3Rpb25zIG9mIGNob2ljZSB0cmVlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENob2ljZVRyZWUge1xuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IHRyZWVTZWxlY3RvclxuICAgKi9cbiAgY29uc3RydWN0b3IodHJlZVNlbGVjdG9yKSB7XG4gICAgdGhpcy4kY29udGFpbmVyID0gJCh0cmVlU2VsZWN0b3IpO1xuXG4gICAgdGhpcy4kY29udGFpbmVyLm9uKCdjbGljaycsICcuanMtaW5wdXQtd3JhcHBlcicsIChldmVudCkgPT4ge1xuICAgICAgY29uc3QgJGlucHV0V3JhcHBlciA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG5cbiAgICAgIHRoaXMudG9nZ2xlQ2hpbGRUcmVlKCRpbnB1dFdyYXBwZXIpO1xuICAgIH0pO1xuXG4gICAgdGhpcy4kY29udGFpbmVyLm9uKCdjbGljaycsICcuanMtdG9nZ2xlLWNob2ljZS10cmVlLWFjdGlvbicsIChldmVudCkgPT4ge1xuICAgICAgY29uc3QgJGFjdGlvbiA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG5cbiAgICAgIHRoaXMudG9nZ2xlVHJlZSgkYWN0aW9uKTtcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICBlbmFibGVBdXRvQ2hlY2tDaGlsZHJlbjogKCkgPT4gdGhpcy5lbmFibGVBdXRvQ2hlY2tDaGlsZHJlbigpLFxuICAgICAgZW5hYmxlQWxsSW5wdXRzOiAoKSA9PiB0aGlzLmVuYWJsZUFsbElucHV0cygpLFxuICAgICAgZGlzYWJsZUFsbElucHV0czogKCkgPT4gdGhpcy5kaXNhYmxlQWxsSW5wdXRzKCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbmFibGUgYXV0b21hdGljIGNoZWNrL3VuY2hlY2sgb2YgY2xpY2tlZCBpdGVtJ3MgY2hpbGRyZW4uXG4gICAqL1xuICBlbmFibGVBdXRvQ2hlY2tDaGlsZHJlbigpIHtcbiAgICB0aGlzLiRjb250YWluZXIub24oJ2NoYW5nZScsICdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nLCAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0ICRjbGlja2VkQ2hlY2tib3ggPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgY29uc3QgJGl0ZW1XaXRoQ2hpbGRyZW4gPSAkY2xpY2tlZENoZWNrYm94LmNsb3Nlc3QoJ2xpJyk7XG5cbiAgICAgICRpdGVtV2l0aENoaWxkcmVuXG4gICAgICAgIC5maW5kKCd1bCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nKVxuICAgICAgICAucHJvcCgnY2hlY2tlZCcsICRjbGlja2VkQ2hlY2tib3guaXMoJzpjaGVja2VkJykpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEVuYWJsZSBhbGwgaW5wdXRzIGluIHRoZSBjaG9pY2UgdHJlZS5cbiAgICovXG4gIGVuYWJsZUFsbElucHV0cygpIHtcbiAgICB0aGlzLiRjb250YWluZXIuZmluZCgnaW5wdXQnKS5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIERpc2FibGUgYWxsIGlucHV0cyBpbiB0aGUgY2hvaWNlIHRyZWUuXG4gICAqL1xuICBkaXNhYmxlQWxsSW5wdXRzKCkge1xuICAgIHRoaXMuJGNvbnRhaW5lci5maW5kKCdpbnB1dCcpLmF0dHIoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XG4gIH1cblxuICAvKipcbiAgICogQ29sbGFwc2Ugb3IgZXhwYW5kIHN1Yi10cmVlIGZvciBzaW5nbGUgcGFyZW50XG4gICAqXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkaW5wdXRXcmFwcGVyXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0b2dnbGVDaGlsZFRyZWUoJGlucHV0V3JhcHBlcikge1xuICAgIGNvbnN0ICRwYXJlbnRXcmFwcGVyID0gJGlucHV0V3JhcHBlci5jbG9zZXN0KCdsaScpO1xuXG4gICAgaWYgKCRwYXJlbnRXcmFwcGVyLmhhc0NsYXNzKCdleHBhbmRlZCcpKSB7XG4gICAgICAkcGFyZW50V3JhcHBlclxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2V4cGFuZGVkJylcbiAgICAgICAgLmFkZENsYXNzKCdjb2xsYXBzZWQnKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICgkcGFyZW50V3JhcHBlci5oYXNDbGFzcygnY29sbGFwc2VkJykpIHtcbiAgICAgICRwYXJlbnRXcmFwcGVyXG4gICAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2VkJylcbiAgICAgICAgLmFkZENsYXNzKCdleHBhbmRlZCcpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDb2xsYXBzZSBvciBleHBhbmQgd2hvbGUgdHJlZVxuICAgKlxuICAgKiBAcGFyYW0ge2pRdWVyeX0gJGFjdGlvblxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdG9nZ2xlVHJlZSgkYWN0aW9uKSB7XG4gICAgY29uc3QgJHBhcmVudENvbnRhaW5lciA9ICRhY3Rpb24uY2xvc2VzdCgnLmpzLWNob2ljZS10cmVlLWNvbnRhaW5lcicpO1xuICAgIGNvbnN0IGFjdGlvbiA9ICRhY3Rpb24uZGF0YSgnYWN0aW9uJyk7XG5cbiAgICAvLyB0b2dnbGUgYWN0aW9uIGNvbmZpZ3VyYXRpb25cbiAgICBjb25zdCBjb25maWcgPSB7XG4gICAgICBhZGRDbGFzczoge1xuICAgICAgICBleHBhbmQ6ICdleHBhbmRlZCcsXG4gICAgICAgIGNvbGxhcHNlOiAnY29sbGFwc2VkJyxcbiAgICAgIH0sXG4gICAgICByZW1vdmVDbGFzczoge1xuICAgICAgICBleHBhbmQ6ICdjb2xsYXBzZWQnLFxuICAgICAgICBjb2xsYXBzZTogJ2V4cGFuZGVkJyxcbiAgICAgIH0sXG4gICAgICBuZXh0QWN0aW9uOiB7XG4gICAgICAgIGV4cGFuZDogJ2NvbGxhcHNlJyxcbiAgICAgICAgY29sbGFwc2U6ICdleHBhbmQnLFxuICAgICAgfSxcbiAgICAgIHRleHQ6IHtcbiAgICAgICAgZXhwYW5kOiAnY29sbGFwc2VkLXRleHQnLFxuICAgICAgICBjb2xsYXBzZTogJ2V4cGFuZGVkLXRleHQnLFxuICAgICAgfSxcbiAgICAgIGljb246IHtcbiAgICAgICAgZXhwYW5kOiAnY29sbGFwc2VkLWljb24nLFxuICAgICAgICBjb2xsYXBzZTogJ2V4cGFuZGVkLWljb24nLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgJHBhcmVudENvbnRhaW5lci5maW5kKCdsaScpLmVhY2goKGluZGV4LCBpdGVtKSA9PiB7XG4gICAgICBjb25zdCAkaXRlbSA9ICQoaXRlbSk7XG5cbiAgICAgIGlmICgkaXRlbS5oYXNDbGFzcyhjb25maWcucmVtb3ZlQ2xhc3NbYWN0aW9uXSkpIHtcbiAgICAgICAgJGl0ZW0ucmVtb3ZlQ2xhc3MoY29uZmlnLnJlbW92ZUNsYXNzW2FjdGlvbl0pXG4gICAgICAgICAgLmFkZENsYXNzKGNvbmZpZy5hZGRDbGFzc1thY3Rpb25dKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgICRhY3Rpb24uZGF0YSgnYWN0aW9uJywgY29uZmlnLm5leHRBY3Rpb25bYWN0aW9uXSk7XG4gICAgJGFjdGlvbi5maW5kKCcubWF0ZXJpYWwtaWNvbnMnKS50ZXh0KCRhY3Rpb24uZGF0YShjb25maWcuaWNvblthY3Rpb25dKSk7XG4gICAgJGFjdGlvbi5maW5kKCcuanMtdG9nZ2xlLXRleHQnKS50ZXh0KCRhY3Rpb24uZGF0YShjb25maWcudGV4dFthY3Rpb25dKSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IGlzIGltcGxlbWVudGVkIHRvIHdvcmsgd2l0aCBUZXh0V2l0aFJlY29tbWVuZGVkTGVuZ3RoVHlwZSxcbiAqIGJ1dCBjYW4gYmUgdXNlZCBhcyBzdGFuZGFsb25lIGNvbXBvbmVudCBhcyB3ZWxsLlxuICpcbiAqIFVzYWdlOlxuICpcbiAqIERlZmluZSB5b3VyIEhUTUwgd2l0aCBpbnB1dCBhbmQgY291bnRlci4gRXhhbXBsZTpcbiAqXG4gKiA8aW5wdXQgaWQ9XCJteUlucHV0XCJcbiAqICAgICAgICBjbGFzcz1cImpzLXJlY29tbWVuZGVkLWxlbmd0aC1pbnB1dFwiXG4gKiAgICAgICAgZGF0YS1yZWNvbW1lbmRlZC1sZW5ndGgtY291bnRlcj1cIiNteUlucHV0X3JlY29tbWVuZGVkX2xlbmd0aF9jb3VudGVyXCJcbiAqID5cbiAqXG4gKiA8ZGl2IGlkXCJteUlucHV0X3JlY29tbWVuZGVkX2xlbmd0aF9jb3VudGVyXCI+XG4gKiAgPHNwYW4gY2xhc3M9XCJqcy1jdXJyZW50LWxlbmd0aFwiPjA8L3NwYW4+IG9mIDcwIGNoYXJhY3RlcnMgdXNlZCAocmVjb21tZW5kZWQpXG4gKiA8L2Rpdj5cbiAqXG4gKiBOT1RFOiBZb3UgbXVzdCB1c2UgZXhhY3RseSB0aGUgc2FtZSBDbGFzc2VzLCBidXQgSURzIGNhbiBiZSBkaWZmZXJlbnQhXG4gKlxuICogVGhlbiBlbmFibGUgY29tcG9uZW50IGluIEphdmFTY3JpcHQ6XG4gKlxuICogbmV3IFRleHRXaXRoUmVjb21tZW5kZWRMZW5ndGhDb3VudGVyKCk7XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRleHRXaXRoUmVjb21tZW5kZWRMZW5ndGhDb3VudGVyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgJChkb2N1bWVudCkub24oJ2lucHV0JywgJy5qcy1yZWNvbW1lbmRlZC1sZW5ndGgtaW5wdXQnLCAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0ICRpbnB1dCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG5cbiAgICAgICQoJGlucHV0LmRhdGEoJ3JlY29tbWVuZGVkLWxlbmd0aC1jb3VudGVyJykpLmZpbmQoJy5qcy1jdXJyZW50LWxlbmd0aCcpLnRleHQoJGlucHV0LnZhbCgpLmxlbmd0aCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4vKipcbiAqIENsYXNzIERlbGV0ZUNhdGVnb3JpZXNCdWxrQWN0aW9uRXh0ZW5zaW9uIGhhbmRsZXMgc3VibWl0dGluZyBvZiByb3cgYWN0aW9uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlbGV0ZUNhdGVnb3JpZXNCdWxrQWN0aW9uRXh0ZW5zaW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGV4dGVuZDogKGdyaWQpID0+IHRoaXMuZXh0ZW5kKGdyaWQpLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogRXh0ZW5kIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIGdyaWQuZ2V0Q29udGFpbmVyKCkub24oJ2NsaWNrJywgJy5qcy1kZWxldGUtY2F0ZWdvcmllcy1idWxrLWFjdGlvbicsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgY29uc3Qgc3VibWl0VXJsID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKCdjYXRlZ29yaWVzLWRlbGV0ZS11cmwnKTtcblxuICAgICAgY29uc3QgJGRlbGV0ZUNhdGVnb3JpZXNNb2RhbCA9ICQoYCMke2dyaWQuZ2V0SWQoKX1fZ3JpZF9kZWxldGVfY2F0ZWdvcmllc19tb2RhbGApO1xuICAgICAgJGRlbGV0ZUNhdGVnb3JpZXNNb2RhbC5tb2RhbCgnc2hvdycpO1xuXG4gICAgICAkZGVsZXRlQ2F0ZWdvcmllc01vZGFsLm9uKCdjbGljaycsICcuanMtc3VibWl0LWRlbGV0ZS1jYXRlZ29yaWVzJywgKCkgPT4ge1xuICAgICAgICBjb25zdCAkY2hlY2tib3hlcyA9IGdyaWQuZ2V0Q29udGFpbmVyKCkuZmluZCgnLmpzLWJ1bGstYWN0aW9uLWNoZWNrYm94OmNoZWNrZWQnKTtcbiAgICAgICAgY29uc3QgJGNhdGVnb3JpZXNUb0RlbGV0ZUlucHV0QmxvY2sgPSAkKCcjZGVsZXRlX2NhdGVnb3JpZXNfY2F0ZWdvcmllc190b19kZWxldGUnKTtcblxuICAgICAgICAkY2hlY2tib3hlcy5lYWNoKChpLCBlbGVtZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgJGNoZWNrYm94ID0gJChlbGVtZW50KTtcblxuICAgICAgICAgIGNvbnN0IGNhdGVnb3J5SW5wdXQgPSAkY2F0ZWdvcmllc1RvRGVsZXRlSW5wdXRCbG9ja1xuICAgICAgICAgICAgLmRhdGEoJ3Byb3RvdHlwZScpXG4gICAgICAgICAgICAucmVwbGFjZSgvX19uYW1lX18vZywgJGNoZWNrYm94LnZhbCgpKTtcblxuICAgICAgICAgIGNvbnN0ICRpbnB1dCA9ICQoJC5wYXJzZUhUTUwoY2F0ZWdvcnlJbnB1dClbMF0pO1xuICAgICAgICAgICRpbnB1dC52YWwoJGNoZWNrYm94LnZhbCgpKTtcblxuICAgICAgICAgICRjYXRlZ29yaWVzVG9EZWxldGVJbnB1dEJsb2NrLmFwcGVuZCgkaW5wdXQpO1xuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCAkZm9ybSA9ICRkZWxldGVDYXRlZ29yaWVzTW9kYWwuZmluZCgnZm9ybScpO1xuXG4gICAgICAgICRmb3JtLmF0dHIoJ2FjdGlvbicsIHN1Ym1pdFVybCk7XG4gICAgICAgICRmb3JtLnN1Ym1pdCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4vKipcbiAqIENsYXNzIENhdGVnb3J5RGVsZXRlUm93QWN0aW9uRXh0ZW5zaW9uIGhhbmRsZXMgc3VibWl0dGluZyBvZiByb3cgYWN0aW9uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlbGV0ZUNhdGVnb3J5Um93QWN0aW9uRXh0ZW5zaW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGV4dGVuZDogKGdyaWQpID0+IHRoaXMuZXh0ZW5kKGdyaWQpLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogRXh0ZW5kIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIGdyaWQuZ2V0Q29udGFpbmVyKCkub24oJ2NsaWNrJywgJy5qcy1kZWxldGUtY2F0ZWdvcnktcm93LWFjdGlvbicsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgY29uc3QgJGRlbGV0ZUNhdGVnb3JpZXNNb2RhbCA9ICQoYCMke2dyaWQuZ2V0SWQoKX1fZ3JpZF9kZWxldGVfY2F0ZWdvcmllc19tb2RhbGApO1xuICAgICAgJGRlbGV0ZUNhdGVnb3JpZXNNb2RhbC5tb2RhbCgnc2hvdycpO1xuXG4gICAgICAkZGVsZXRlQ2F0ZWdvcmllc01vZGFsLm9uKCdjbGljaycsICcuanMtc3VibWl0LWRlbGV0ZS1jYXRlZ29yaWVzJywgKCkgPT4ge1xuICAgICAgICBjb25zdCAkYnV0dG9uID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgY29uc3QgY2F0ZWdvcnlJZCA9ICRidXR0b24uZGF0YSgnY2F0ZWdvcnktaWQnKTtcblxuICAgICAgICBjb25zdCAkY2F0ZWdvcmllc1RvRGVsZXRlSW5wdXRCbG9jayA9ICQoJyNkZWxldGVfY2F0ZWdvcmllc19jYXRlZ29yaWVzX3RvX2RlbGV0ZScpO1xuXG4gICAgICAgIGNvbnN0IGNhdGVnb3J5SW5wdXQgPSAkY2F0ZWdvcmllc1RvRGVsZXRlSW5wdXRCbG9ja1xuICAgICAgICAgIC5kYXRhKCdwcm90b3R5cGUnKVxuICAgICAgICAgIC5yZXBsYWNlKC9fX25hbWVfXy9nLCAkY2F0ZWdvcmllc1RvRGVsZXRlSW5wdXRCbG9jay5jaGlsZHJlbigpLmxlbmd0aCk7XG5cbiAgICAgICAgY29uc3QgJGl0ZW0gPSAkKCQucGFyc2VIVE1MKGNhdGVnb3J5SW5wdXQpWzBdKTtcbiAgICAgICAgJGl0ZW0udmFsKGNhdGVnb3J5SWQpO1xuXG4gICAgICAgICRjYXRlZ29yaWVzVG9EZWxldGVJbnB1dEJsb2NrLmFwcGVuZCgkaXRlbSk7XG5cbiAgICAgICAgY29uc3QgJGZvcm0gPSAkZGVsZXRlQ2F0ZWdvcmllc01vZGFsLmZpbmQoJ2Zvcm0nKTtcblxuICAgICAgICAkZm9ybS5hdHRyKCdhY3Rpb24nLCAkYnV0dG9uLmRhdGEoJ2NhdGVnb3J5LWRlbGV0ZS11cmwnKSk7XG4gICAgICAgICRmb3JtLnN1Ym1pdCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuaW1wb3J0IENvbmZpcm1Nb2RhbCBmcm9tICdAY29tcG9uZW50cy9tb2RhbCc7XG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBDbGFzcyBTdWJtaXRSb3dBY3Rpb25FeHRlbnNpb24gaGFuZGxlcyBzdWJtaXR0aW5nIG9mIHJvdyBhY3Rpb25cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3VibWl0Um93QWN0aW9uRXh0ZW5zaW9uIHtcbiAgLyoqXG4gICAqIEV4dGVuZCBncmlkXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKi9cbiAgZXh0ZW5kKGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLm9uKCdjbGljaycsICcuanMtc3VibWl0LXJvdy1hY3Rpb24nLCAoZXZlbnQpID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGNvbnN0ICRidXR0b24gPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgY29uc3QgY29uZmlybU1lc3NhZ2UgPSAkYnV0dG9uLmRhdGEoJ2NvbmZpcm1NZXNzYWdlJyk7XG4gICAgICBjb25zdCBjb25maXJtVGl0bGUgPSAkYnV0dG9uLmRhdGEoJ3RpdGxlJyk7XG5cbiAgICAgIGNvbnN0IG1ldGhvZCA9ICRidXR0b24uZGF0YSgnbWV0aG9kJyk7XG5cbiAgICAgIGlmIChjb25maXJtVGl0bGUpIHtcbiAgICAgICAgdGhpcy5zaG93Q29uZmlybU1vZGFsKCRidXR0b24sIGdyaWQsIGNvbmZpcm1NZXNzYWdlLCBjb25maXJtVGl0bGUsIG1ldGhvZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoY29uZmlybU1lc3NhZ2UubGVuZ3RoICYmICF3aW5kb3cuY29uZmlybShjb25maXJtTWVzc2FnZSkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnBvc3RGb3JtKCRidXR0b24sIG1ldGhvZCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwb3N0Rm9ybSgkYnV0dG9uLCBtZXRob2QpIHtcbiAgICBjb25zdCBpc0dldE9yUG9zdE1ldGhvZCA9IFsnR0VUJywgJ1BPU1QnXS5pbmNsdWRlcyhtZXRob2QpO1xuXG4gICAgY29uc3QgJGZvcm0gPSAkKCc8Zm9ybT4nLCB7XG4gICAgICBhY3Rpb246ICRidXR0b24uZGF0YSgndXJsJyksXG4gICAgICBtZXRob2Q6IGlzR2V0T3JQb3N0TWV0aG9kID8gbWV0aG9kIDogJ1BPU1QnLFxuICAgIH0pLmFwcGVuZFRvKCdib2R5Jyk7XG5cbiAgICBpZiAoIWlzR2V0T3JQb3N0TWV0aG9kKSB7XG4gICAgICAkZm9ybS5hcHBlbmQoJCgnPGlucHV0PicsIHtcbiAgICAgICAgdHlwZTogJ19oaWRkZW4nLFxuICAgICAgICBuYW1lOiAnX21ldGhvZCcsXG4gICAgICAgIHZhbHVlOiBtZXRob2QsXG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgJGZvcm0uc3VibWl0KCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtqUXVlcnl9ICRzdWJtaXRCdG5cbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb25maXJtTWVzc2FnZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29uZmlybVRpdGxlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXRob2RcbiAgICovXG4gIHNob3dDb25maXJtTW9kYWwoJHN1Ym1pdEJ0biwgZ3JpZCwgY29uZmlybU1lc3NhZ2UsIGNvbmZpcm1UaXRsZSwgbWV0aG9kKSB7XG4gICAgY29uc3QgY29uZmlybUJ1dHRvbkxhYmVsID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtQnV0dG9uTGFiZWwnKTtcbiAgICBjb25zdCBjbG9zZUJ1dHRvbkxhYmVsID0gJHN1Ym1pdEJ0bi5kYXRhKCdjbG9zZUJ1dHRvbkxhYmVsJyk7XG4gICAgY29uc3QgY29uZmlybUJ1dHRvbkNsYXNzID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtQnV0dG9uQ2xhc3MnKTtcblxuICAgIGNvbnN0IG1vZGFsID0gbmV3IENvbmZpcm1Nb2RhbCh7XG4gICAgICBpZDogYCR7Z3JpZC5nZXRJZCgpfS1ncmlkLWNvbmZpcm0tbW9kYWxgLFxuICAgICAgY29uZmlybVRpdGxlLFxuICAgICAgY29uZmlybU1lc3NhZ2UsXG4gICAgICBjb25maXJtQnV0dG9uTGFiZWwsXG4gICAgICBjbG9zZUJ1dHRvbkxhYmVsLFxuICAgICAgY29uZmlybUJ1dHRvbkNsYXNzLFxuICAgIH0sICgpID0+IHRoaXMucG9zdEZvcm0oJHN1Ym1pdEJ0biwgbWV0aG9kKSk7XG5cbiAgICBtb2RhbC5zaG93KCk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4vKipcbiAqIENsYXNzIEJ1bGtBY3Rpb25TZWxlY3RDaGVja2JveEV4dGVuc2lvblxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxrQWN0aW9uQ2hlY2tib3hFeHRlbnNpb24ge1xuICAvKipcbiAgICogRXh0ZW5kIGdyaWQgd2l0aCBidWxrIGFjdGlvbiBjaGVja2JveGVzIGhhbmRsaW5nIGZ1bmN0aW9uYWxpdHlcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIHRoaXMuaGFuZGxlQnVsa0FjdGlvbkNoZWNrYm94U2VsZWN0KGdyaWQpO1xuICAgIHRoaXMuaGFuZGxlQnVsa0FjdGlvblNlbGVjdEFsbENoZWNrYm94KGdyaWQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgXCJTZWxlY3QgYWxsXCIgYnV0dG9uIGluIHRoZSBncmlkXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaGFuZGxlQnVsa0FjdGlvblNlbGVjdEFsbENoZWNrYm94KGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLm9uKCdjaGFuZ2UnLCAnLmpzLWJ1bGstYWN0aW9uLXNlbGVjdC1hbGwnLCAoZSkgPT4ge1xuICAgICAgY29uc3QgJGNoZWNrYm94ID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuXG4gICAgICBjb25zdCBpc0NoZWNrZWQgPSAkY2hlY2tib3guaXMoJzpjaGVja2VkJyk7XG5cbiAgICAgIGlmIChpc0NoZWNrZWQpIHtcbiAgICAgICAgdGhpcy5lbmFibGVCdWxrQWN0aW9uc0J0bihncmlkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZGlzYWJsZUJ1bGtBY3Rpb25zQnRuKGdyaWQpO1xuICAgICAgfVxuXG4gICAgICBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5qcy1idWxrLWFjdGlvbi1jaGVja2JveCcpLnByb3AoJ2NoZWNrZWQnLCBpc0NoZWNrZWQpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgZWFjaCBidWxrIGFjdGlvbiBjaGVja2JveCBzZWxlY3QgaW4gdGhlIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBoYW5kbGVCdWxrQWN0aW9uQ2hlY2tib3hTZWxlY3QoZ3JpZCkge1xuICAgIGdyaWQuZ2V0Q29udGFpbmVyKCkub24oJ2NoYW5nZScsICcuanMtYnVsay1hY3Rpb24tY2hlY2tib3gnLCAoKSA9PiB7XG4gICAgICBjb25zdCBjaGVja2VkUm93c0NvdW50ID0gZ3JpZC5nZXRDb250YWluZXIoKS5maW5kKCcuanMtYnVsay1hY3Rpb24tY2hlY2tib3g6Y2hlY2tlZCcpLmxlbmd0aDtcblxuICAgICAgaWYgKGNoZWNrZWRSb3dzQ291bnQgPiAwKSB7XG4gICAgICAgIHRoaXMuZW5hYmxlQnVsa0FjdGlvbnNCdG4oZ3JpZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRpc2FibGVCdWxrQWN0aW9uc0J0bihncmlkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbmFibGUgYnVsayBhY3Rpb25zIGJ1dHRvblxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGVuYWJsZUJ1bGtBY3Rpb25zQnRuKGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5qcy1idWxrLWFjdGlvbnMtYnRuJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XG4gIH1cblxuICAvKipcbiAgICogRGlzYWJsZSBidWxrIGFjdGlvbnMgYnV0dG9uXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZGlzYWJsZUJ1bGtBY3Rpb25zQnRuKGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5qcy1idWxrLWFjdGlvbnMtYnRuJykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5pbXBvcnQgJ3RhYmxlZG5kL2Rpc3QvanF1ZXJ5LnRhYmxlZG5kLm1pbic7XG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBDbGFzcyBDYXRlZ29yeVBvc2l0aW9uRXh0ZW5zaW9uIGV4dGVuZHMgR3JpZCB3aXRoIHJlb3JkZXJhYmxlIGNhdGVnb3J5IHBvc2l0aW9uc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYXRlZ29yeVBvc2l0aW9uRXh0ZW5zaW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGV4dGVuZDogKGdyaWQpID0+IHRoaXMuZXh0ZW5kKGdyaWQpLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogRXh0ZW5kIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIHRoaXMuZ3JpZCA9IGdyaWQ7XG5cbiAgICB0aGlzLmFkZElkc1RvR3JpZFRhYmxlUm93cygpO1xuXG4gICAgZ3JpZC5nZXRDb250YWluZXIoKS5maW5kKCcuanMtZ3JpZC10YWJsZScpLnRhYmxlRG5EKHtcbiAgICAgIGRyYWdIYW5kbGU6ICcuanMtZHJhZy1oYW5kbGUnLFxuICAgICAgb25EcmFnQ2xhc3M6ICdkcmFnZ2luZy1yb3cnLFxuICAgICAgb25EcmFnU3RhcnQ6ICgpID0+IHtcbiAgICAgICAgdGhpcy5vcmlnaW5hbFBvc2l0aW9ucyA9IGRlY29kZVVSSUNvbXBvbmVudCgkLnRhYmxlRG5ELnNlcmlhbGl6ZSgpKTtcbiAgICAgIH0sXG4gICAgICBvbkRyb3A6ICh0YWJsZSwgcm93KSA9PiB0aGlzLmhhbmRsZUNhdGVnb3J5UG9zaXRpb25DaGFuZ2Uocm93KSxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGVuIHBvc2l0aW9uIGlzIGNoYW5nZWQgaGFuZGxlIHVwZGF0ZVxuICAgKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSByb3dcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGhhbmRsZUNhdGVnb3J5UG9zaXRpb25DaGFuZ2Uocm93KSB7XG4gICAgY29uc3QgcG9zaXRpb25zID0gZGVjb2RlVVJJQ29tcG9uZW50KCQudGFibGVEbkQuc2VyaWFsaXplKCkpO1xuICAgIGNvbnN0IHdheSA9ICh0aGlzLm9yaWdpbmFsUG9zaXRpb25zLmluZGV4T2Yocm93LmlkKSA8IHBvc2l0aW9ucy5pbmRleE9mKHJvdy5pZCkpID8gMSA6IDA7XG5cbiAgICBjb25zdCAkY2F0ZWdvcnlQb3NpdGlvbkNvbnRhaW5lciA9ICQocm93KS5maW5kKGAuanMtJHt0aGlzLmdyaWQuZ2V0SWQoKX0tcG9zaXRpb246Zmlyc3RgKTtcblxuICAgIGNvbnN0IGNhdGVnb3J5SWQgPSAkY2F0ZWdvcnlQb3NpdGlvbkNvbnRhaW5lci5kYXRhKCdpZCcpO1xuICAgIGNvbnN0IGNhdGVnb3J5UGFyZW50SWQgPSAkY2F0ZWdvcnlQb3NpdGlvbkNvbnRhaW5lci5kYXRhKCdpZC1wYXJlbnQnKTtcbiAgICBjb25zdCBwb3NpdGlvblVwZGF0ZVVybCA9ICRjYXRlZ29yeVBvc2l0aW9uQ29udGFpbmVyLmRhdGEoJ3Bvc2l0aW9uLXVwZGF0ZS11cmwnKTtcblxuICAgIGxldCBwYXJhbXMgPSBwb3NpdGlvbnMucmVwbGFjZShuZXcgUmVnRXhwKGAke3RoaXMuZ3JpZC5nZXRJZCgpfV9ncmlkX3RhYmxlYCwgJ2cnKSwgJ3Bvc2l0aW9ucycpO1xuXG4gICAgY29uc3QgcXVlcnlQYXJhbXMgPSB7XG4gICAgICBpZF9jYXRlZ29yeV9wYXJlbnQ6IGNhdGVnb3J5UGFyZW50SWQsXG4gICAgICBpZF9jYXRlZ29yeV90b19tb3ZlOiBjYXRlZ29yeUlkLFxuICAgICAgd2F5LFxuICAgIH07XG5cbiAgICBpZiAocG9zaXRpb25zLmluZGV4T2YoJ18wJicpICE9PSAtMSkge1xuICAgICAgcXVlcnlQYXJhbXMuZm91bmRfZmlyc3QgPSAxO1xuICAgIH1cblxuICAgIHBhcmFtcyArPSBgJiR7JC5wYXJhbShxdWVyeVBhcmFtcyl9YDtcblxuICAgIHRoaXMudXBkYXRlQ2F0ZWdvcnlQb3NpdGlvbihwb3NpdGlvblVwZGF0ZVVybCwgcGFyYW1zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgSUQncyB0byBHcmlkIHRhYmxlIHJvd3MgdG8gbWFrZSB0YWJsZURuRC5vbkRyb3AoKSBmdW5jdGlvbiB3b3JrLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgYWRkSWRzVG9HcmlkVGFibGVSb3dzKCkge1xuICAgIHRoaXMuZ3JpZC5nZXRDb250YWluZXIoKVxuICAgICAgLmZpbmQoJy5qcy1ncmlkLXRhYmxlJylcbiAgICAgIC5maW5kKGAuanMtJHt0aGlzLmdyaWQuZ2V0SWQoKX0tcG9zaXRpb25gKVxuICAgICAgLmVhY2goKGluZGV4LCBwb3NpdGlvbldyYXBwZXIpID0+IHtcbiAgICAgICAgY29uc3QgJHBvc2l0aW9uV3JhcHBlciA9ICQocG9zaXRpb25XcmFwcGVyKTtcblxuICAgICAgICBjb25zdCBjYXRlZ29yeUlkID0gJHBvc2l0aW9uV3JhcHBlci5kYXRhKCdpZCcpO1xuICAgICAgICBjb25zdCBjYXRlZ29yeVBhcmVudElkID0gJHBvc2l0aW9uV3JhcHBlci5kYXRhKCdpZC1wYXJlbnQnKTtcbiAgICAgICAgY29uc3QgcG9zaXRpb24gPSAkcG9zaXRpb25XcmFwcGVyLmRhdGEoJ3Bvc2l0aW9uJyk7XG5cbiAgICAgICAgY29uc3QgaWQgPSBgdHJfJHtjYXRlZ29yeVBhcmVudElkfV8ke2NhdGVnb3J5SWR9XyR7cG9zaXRpb259YDtcblxuICAgICAgICAkcG9zaXRpb25XcmFwcGVyLmNsb3Nlc3QoJ3RyJykuYXR0cignaWQnLCBpZCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgY2F0ZWdvcmllcyBsaXN0aW5nIHdpdGggbmV3IHBvc2l0aW9uc1xuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdXBkYXRlQ2F0ZWdvcnlJZHNBbmRQb3NpdGlvbnMoKSB7XG4gICAgdGhpcy5ncmlkLmdldENvbnRhaW5lcigpXG4gICAgICAuZmluZCgnLmpzLWdyaWQtdGFibGUnKVxuICAgICAgLmZpbmQoYC5qcy0ke3RoaXMuZ3JpZC5nZXRJZCgpfS1wb3NpdGlvbmApXG4gICAgICAuZWFjaCgoaW5kZXgsIHBvc2l0aW9uV3JhcHBlcikgPT4ge1xuICAgICAgICBjb25zdCAkcG9zaXRpb25XcmFwcGVyID0gJChwb3NpdGlvbldyYXBwZXIpO1xuICAgICAgICBjb25zdCAkcm93ID0gJHBvc2l0aW9uV3JhcHBlci5jbG9zZXN0KCd0cicpO1xuXG4gICAgICAgIGNvbnN0IG9mZnNldCA9ICRwb3NpdGlvbldyYXBwZXIuZGF0YSgncGFnaW5hdGlvbi1vZmZzZXQnKTtcbiAgICAgICAgY29uc3QgbmV3UG9zaXRpb24gPSBvZmZzZXQgPiAwID8gaW5kZXggKyBvZmZzZXQgOiBpbmRleDtcblxuICAgICAgICBjb25zdCBvbGRJZCA9ICRyb3cuYXR0cignaWQnKTtcbiAgICAgICAgJHJvdy5hdHRyKCdpZCcsIG9sZElkLnJlcGxhY2UoL19bMC05XSQvZywgYF8ke25ld1Bvc2l0aW9ufWApKTtcblxuICAgICAgICAkcG9zaXRpb25XcmFwcGVyLmZpbmQoJy5qcy1wb3NpdGlvbicpLnRleHQobmV3UG9zaXRpb24gKyAxKTtcbiAgICAgICAgJHBvc2l0aW9uV3JhcHBlci5kYXRhKCdwb3NpdGlvbicsIG5ld1Bvc2l0aW9uKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3MgY2F0ZWdvcmllcyBwb3NpdGlvbnMgdXBkYXRlXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAgICogQHBhcmFtIHtTdHJpbmd9IHBhcmFtc1xuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdXBkYXRlQ2F0ZWdvcnlQb3NpdGlvbih1cmwsIHBhcmFtcykge1xuICAgICQucG9zdCh7XG4gICAgICB1cmwsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdjYWNoZS1jb250cm9sJzogJ25vLWNhY2hlJyxcbiAgICAgIH0sXG4gICAgICBkYXRhOiBwYXJhbXMsXG4gICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICBpZiAocmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgICB3aW5kb3cuc2hvd1N1Y2Nlc3NNZXNzYWdlKHJlc3BvbnNlLm1lc3NhZ2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LnNob3dFcnJvck1lc3NhZ2UocmVzcG9uc2UubWVzc2FnZSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudXBkYXRlQ2F0ZWdvcnlJZHNBbmRQb3NpdGlvbnMoKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgQXN5bmNUb2dnbGVDb2x1bW5FeHRlbnNpb24gc3VibWl0cyB0b2dnbGUgYWN0aW9uIHVzaW5nIEFKQVhcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXN5bmNUb2dnbGVDb2x1bW5FeHRlbnNpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXh0ZW5kOiAoZ3JpZCkgPT4gdGhpcy5leHRlbmQoZ3JpZCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgZ3JpZFxuICAgICAgLmdldENvbnRhaW5lcigpXG4gICAgICAuZmluZCgnLmpzLWdyaWQtdGFibGUnKVxuICAgICAgLm9uKCdjbGljaycsICcucHMtdG9nZ2xhYmxlLXJvdycsIChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCAkYnV0dG9uID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcblxuICAgICAgICBpZiAoISRidXR0b24uaGFzQ2xhc3MoJ3BzLXN3aXRjaCcpKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgICQucG9zdCh7XG4gICAgICAgICAgdXJsOiAkYnV0dG9uLmRhdGEoJ3RvZ2dsZS11cmwnKSxcbiAgICAgICAgfSlcbiAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMpIHtcbiAgICAgICAgICAgICAgd2luZG93LnNob3dTdWNjZXNzTWVzc2FnZShyZXNwb25zZS5tZXNzYWdlKTtcblxuICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvbkRpc3BsYXkoJGJ1dHRvbik7XG5cbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3aW5kb3cuc2hvd0Vycm9yTWVzc2FnZShyZXNwb25zZS5tZXNzYWdlKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZXJyb3IucmVzcG9uc2VKU09OO1xuXG4gICAgICAgICAgICB3aW5kb3cuc2hvd0Vycm9yTWVzc2FnZShyZXNwb25zZS5tZXNzYWdlKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFRvZ2dsZSBidXR0b24gZGlzcGxheSBmcm9tIGVuYWJsZWQgdG8gZGlzYWJsZWQgYW5kIG90aGVyIHdheSBhcm91bmRcbiAgICpcbiAgICogQHBhcmFtIHtqUXVlcnl9ICRidXR0b25cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRvZ2dsZUJ1dHRvbkRpc3BsYXkoJGJ1dHRvbikge1xuICAgIGNvbnN0IGlzQWN0aXZlID0gJGJ1dHRvbi5oYXNDbGFzcygnZ3JpZC10b2dnbGVyLWljb24tdmFsaWQnKTtcblxuICAgIGNvbnN0IGNsYXNzVG9BZGQgPSBpc0FjdGl2ZSA/ICdncmlkLXRvZ2dsZXItaWNvbi1ub3QtdmFsaWQnIDogJ2dyaWQtdG9nZ2xlci1pY29uLXZhbGlkJztcbiAgICBjb25zdCBjbGFzc1RvUmVtb3ZlID0gaXNBY3RpdmUgPyAnZ3JpZC10b2dnbGVyLWljb24tdmFsaWQnIDogJ2dyaWQtdG9nZ2xlci1pY29uLW5vdC12YWxpZCc7XG4gICAgY29uc3QgaWNvbiA9IGlzQWN0aXZlID8gJ2NsZWFyJyA6ICdjaGVjayc7XG5cbiAgICAkYnV0dG9uLnJlbW92ZUNsYXNzKGNsYXNzVG9SZW1vdmUpO1xuICAgICRidXR0b24uYWRkQ2xhc3MoY2xhc3NUb0FkZCk7XG5cbiAgICBpZiAoJGJ1dHRvbi5oYXNDbGFzcygnbWF0ZXJpYWwtaWNvbnMnKSkge1xuICAgICAgJGJ1dHRvbi50ZXh0KGljb24pO1xuICAgIH1cbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgRXhwb3J0VG9TcWxNYW5hZ2VyRXh0ZW5zaW9uIGV4dGVuZHMgZ3JpZCB3aXRoIGV4cG9ydGluZyBxdWVyeSB0byBTUUwgTWFuYWdlclxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeHBvcnRUb1NxbE1hbmFnZXJFeHRlbnNpb24ge1xuICAvKipcbiAgICogRXh0ZW5kIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIGdyaWQuZ2V0SGVhZGVyQ29udGFpbmVyKCkub24oJ2NsaWNrJywgJy5qcy1jb21tb25fc2hvd19xdWVyeS1ncmlkLWFjdGlvbicsICgpID0+IHRoaXMub25TaG93U3FsUXVlcnlDbGljayhncmlkKSk7XG4gICAgZ3JpZC5nZXRIZWFkZXJDb250YWluZXIoKS5vbihcbiAgICAgICdjbGljaycsXG4gICAgICAnLmpzLWNvbW1vbl9leHBvcnRfc3FsX21hbmFnZXItZ3JpZC1hY3Rpb24nLFxuICAgICAgKCkgPT4gdGhpcy5vbkV4cG9ydFNxbE1hbmFnZXJDbGljayhncmlkKSxcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEludm9rZWQgd2hlbiBjbGlja2luZyBvbiB0aGUgXCJzaG93IHNxbCBxdWVyeVwiIHRvb2xiYXIgYnV0dG9uXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgb25TaG93U3FsUXVlcnlDbGljayhncmlkKSB7XG4gICAgY29uc3QgJHNxbE1hbmFnZXJGb3JtID0gJChgIyR7Z3JpZC5nZXRJZCgpfV9jb21tb25fc2hvd19xdWVyeV9tb2RhbF9mb3JtYCk7XG4gICAgdGhpcy5maWxsRXhwb3J0Rm9ybSgkc3FsTWFuYWdlckZvcm0sIGdyaWQpO1xuXG4gICAgY29uc3QgJG1vZGFsID0gJChgIyR7Z3JpZC5nZXRJZCgpfV9ncmlkX2NvbW1vbl9zaG93X3F1ZXJ5X21vZGFsYCk7XG4gICAgJG1vZGFsLm1vZGFsKCdzaG93Jyk7XG5cbiAgICAkbW9kYWwub24oJ2NsaWNrJywgJy5idG4tc3FsLXN1Ym1pdCcsICgpID0+ICRzcWxNYW5hZ2VyRm9ybS5zdWJtaXQoKSk7XG4gIH1cblxuICAvKipcbiAgICogSW52b2tlZCB3aGVuIGNsaWNraW5nIG9uIHRoZSBcImV4cG9ydCB0byB0aGUgc3FsIHF1ZXJ5XCIgdG9vbGJhciBidXR0b25cbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBvbkV4cG9ydFNxbE1hbmFnZXJDbGljayhncmlkKSB7XG4gICAgY29uc3QgJHNxbE1hbmFnZXJGb3JtID0gJChgIyR7Z3JpZC5nZXRJZCgpfV9jb21tb25fc2hvd19xdWVyeV9tb2RhbF9mb3JtYCk7XG5cbiAgICB0aGlzLmZpbGxFeHBvcnRGb3JtKCRzcWxNYW5hZ2VyRm9ybSwgZ3JpZCk7XG5cbiAgICAkc3FsTWFuYWdlckZvcm0uc3VibWl0KCk7XG4gIH1cblxuICAvKipcbiAgICogRmlsbCBleHBvcnQgZm9ybSB3aXRoIFNRTCBhbmQgaXQncyBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkc3FsTWFuYWdlckZvcm1cbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBmaWxsRXhwb3J0Rm9ybSgkc3FsTWFuYWdlckZvcm0sIGdyaWQpIHtcbiAgICBjb25zdCBxdWVyeSA9IGdyaWQuZ2V0Q29udGFpbmVyKCkuZmluZCgnLmpzLWdyaWQtdGFibGUnKS5kYXRhKCdxdWVyeScpO1xuXG4gICAgJHNxbE1hbmFnZXJGb3JtLmZpbmQoJ3RleHRhcmVhW25hbWU9XCJzcWxcIl0nKS52YWwocXVlcnkpO1xuICAgICRzcWxNYW5hZ2VyRm9ybS5maW5kKCdpbnB1dFtuYW1lPVwibmFtZVwiXScpLnZhbCh0aGlzLmdldE5hbWVGcm9tQnJlYWRjcnVtYigpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZXhwb3J0IG5hbWUgZnJvbSBwYWdlJ3MgYnJlYWRjcnVtYlxuICAgKlxuICAgKiBAcmV0dXJuIHtTdHJpbmd9XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXROYW1lRnJvbUJyZWFkY3J1bWIoKSB7XG4gICAgY29uc3QgJGJyZWFkY3J1bWJzID0gJCgnLmhlYWRlci10b29sYmFyJykuZmluZCgnLmJyZWFkY3J1bWItaXRlbScpO1xuICAgIGxldCBuYW1lID0gJyc7XG5cbiAgICAkYnJlYWRjcnVtYnMuZWFjaCgoaSwgaXRlbSkgPT4ge1xuICAgICAgY29uc3QgJGJyZWFkY3J1bWIgPSAkKGl0ZW0pO1xuXG4gICAgICBjb25zdCBicmVhZGNydW1iVGl0bGUgPSAkYnJlYWRjcnVtYi5maW5kKCdhJykubGVuZ3RoID4gMFxuICAgICAgICA/ICRicmVhZGNydW1iLmZpbmQoJ2EnKS50ZXh0KClcbiAgICAgICAgOiAkYnJlYWRjcnVtYi50ZXh0KCk7XG5cbiAgICAgIGlmIChuYW1lLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbmFtZSA9IG5hbWUuY29uY2F0KCcgPiAnKTtcbiAgICAgIH1cblxuICAgICAgbmFtZSA9IG5hbWUuY29uY2F0KGJyZWFkY3J1bWJUaXRsZSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbmFtZTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5pbXBvcnQgcmVzZXRTZWFyY2ggZnJvbSAnQGFwcC91dGlscy9yZXNldF9zZWFyY2gnO1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgRmlsdGVyc1Jlc2V0RXh0ZW5zaW9uIGV4dGVuZHMgZ3JpZCB3aXRoIGZpbHRlcnMgcmVzZXR0aW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpbHRlcnNSZXNldEV4dGVuc2lvbiB7XG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgZ3JpZC5nZXRDb250YWluZXIoKS5vbignY2xpY2snLCAnLmpzLXJlc2V0LXNlYXJjaCcsIChldmVudCkgPT4ge1xuICAgICAgcmVzZXRTZWFyY2goJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKCd1cmwnKSwgJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKCdyZWRpcmVjdCcpKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG4vKipcbiAqIFJlc3BvbnNpYmxlIGZvciBncmlkIGZpbHRlcnMgc2VhcmNoIGFuZCByZXNldCBidXR0b24gYXZhaWxhYmlsaXR5IHdoZW4gZmlsdGVyIGlucHV0cyBjaGFuZ2VzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaWx0ZXJzU3VibWl0QnV0dG9uRW5hYmxlckV4dGVuc2lvbiB7XG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgY29uc3QgJGZpbHRlcnNSb3cgPSBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5jb2x1bW4tZmlsdGVycycpO1xuICAgICRmaWx0ZXJzUm93LmZpbmQoJy5ncmlkLXNlYXJjaC1idXR0b24nKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xuXG4gICAgJGZpbHRlcnNSb3cuZmluZCgnaW5wdXQ6bm90KC5qcy1idWxrLWFjdGlvbi1zZWxlY3QtYWxsKSwgc2VsZWN0Jykub24oJ2lucHV0IGRwLmNoYW5nZScsICgpID0+IHtcbiAgICAgICRmaWx0ZXJzUm93LmZpbmQoJy5ncmlkLXNlYXJjaC1idXR0b24nKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcbiAgICAgICRmaWx0ZXJzUm93LmZpbmQoJy5qcy1ncmlkLXJlc2V0LWJ1dHRvbicpLnByb3AoJ2hpZGRlbicsIGZhbHNlKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgTGlua1Jvd0FjdGlvbkV4dGVuc2lvbiBoYW5kbGVzIGxpbmsgcm93IGFjdGlvbnNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlua1Jvd0FjdGlvbkV4dGVuc2lvbiB7XG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgdGhpcy5pbml0Um93TGlua3MoZ3JpZCk7XG4gICAgdGhpcy5pbml0Q29uZmlybWFibGVBY3Rpb25zKGdyaWQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4dGVuZCBncmlkXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKi9cbiAgaW5pdENvbmZpcm1hYmxlQWN0aW9ucyhncmlkKSB7XG4gICAgZ3JpZC5nZXRDb250YWluZXIoKS5vbignY2xpY2snLCAnLmpzLWxpbmstcm93LWFjdGlvbicsIChldmVudCkgPT4ge1xuICAgICAgY29uc3QgY29uZmlybU1lc3NhZ2UgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2NvbmZpcm0tbWVzc2FnZScpO1xuXG4gICAgICBpZiAoY29uZmlybU1lc3NhZ2UubGVuZ3RoICYmICF3aW5kb3cuY29uZmlybShjb25maXJtTWVzc2FnZSkpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBjbGljayBldmVudCBvbiByb3dzIHRoYXQgbWF0Y2hlcyB0aGUgZmlyc3QgbGluayBhY3Rpb24gKGlmIHByZXNlbnQpXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKi9cbiAgaW5pdFJvd0xpbmtzKGdyaWQpIHtcbiAgICAkKCd0cicsIGdyaWQuZ2V0Q29udGFpbmVyKCkpLmVhY2goZnVuY3Rpb24gaW5pdEVhY2hSb3coKSB7XG4gICAgICBjb25zdCAkcGFyZW50Um93ID0gJCh0aGlzKTtcblxuICAgICAgJCgnLmpzLWxpbmstcm93LWFjdGlvbltkYXRhLWNsaWNrYWJsZS1yb3c9MV06Zmlyc3QnLCAkcGFyZW50Um93KS5lYWNoKGZ1bmN0aW9uIHByb3BhZ2F0ZUZpcnN0TGlua0FjdGlvbigpIHtcbiAgICAgICAgY29uc3QgJHJvd0FjdGlvbiA9ICQodGhpcyk7XG4gICAgICAgIGNvbnN0ICRwYXJlbnRDZWxsID0gJHJvd0FjdGlvbi5jbG9zZXN0KCd0ZCcpO1xuXG4gICAgICAgIGNvbnN0IGNsaWNrYWJsZUNlbGxzID0gJCgndGQuY2xpY2thYmxlJywgJHBhcmVudFJvdykubm90KCRwYXJlbnRDZWxsKTtcbiAgICAgICAgbGV0IGlzRHJhZ2dpbmcgPSBmYWxzZTtcbiAgICAgICAgY2xpY2thYmxlQ2VsbHMuYWRkQ2xhc3MoJ2N1cnNvci1wb2ludGVyJykubW91c2Vkb3duKCgpID0+IHtcbiAgICAgICAgICAkKHdpbmRvdykubW91c2Vtb3ZlKCgpID0+IHtcbiAgICAgICAgICAgIGlzRHJhZ2dpbmcgPSB0cnVlO1xuICAgICAgICAgICAgJCh3aW5kb3cpLnVuYmluZCgnbW91c2Vtb3ZlJyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNsaWNrYWJsZUNlbGxzLm1vdXNldXAoKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHdhc0RyYWdnaW5nID0gaXNEcmFnZ2luZztcbiAgICAgICAgICBpc0RyYWdnaW5nID0gZmFsc2U7XG4gICAgICAgICAgJCh3aW5kb3cpLnVuYmluZCgnbW91c2Vtb3ZlJyk7XG5cbiAgICAgICAgICBpZiAoIXdhc0RyYWdnaW5nKSB7XG4gICAgICAgICAgICBjb25zdCBjb25maXJtTWVzc2FnZSA9ICRyb3dBY3Rpb24uZGF0YSgnY29uZmlybS1tZXNzYWdlJyk7XG5cbiAgICAgICAgICAgIGlmICghY29uZmlybU1lc3NhZ2UubGVuZ3RoIHx8IHdpbmRvdy5jb25maXJtKGNvbmZpcm1NZXNzYWdlKSkge1xuICAgICAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbiA9ICRyb3dBY3Rpb24uYXR0cignaHJlZicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG4vKipcbiAqIENsYXNzIFJlbG9hZExpc3RFeHRlbnNpb24gZXh0ZW5kcyBncmlkIHdpdGggXCJMaXN0IHJlbG9hZFwiIGFjdGlvblxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWxvYWRMaXN0RXh0ZW5zaW9uIHtcbiAgLyoqXG4gICAqIEV4dGVuZCBncmlkXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKi9cbiAgZXh0ZW5kKGdyaWQpIHtcbiAgICBncmlkLmdldEhlYWRlckNvbnRhaW5lcigpLm9uKCdjbGljaycsICcuanMtY29tbW9uX3JlZnJlc2hfbGlzdC1ncmlkLWFjdGlvbicsICgpID0+IHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5pbXBvcnQgVGFibGVTb3J0aW5nIGZyb20gJ0BhcHAvdXRpbHMvdGFibGUtc29ydGluZyc7XG5cbi8qKlxuICogQ2xhc3MgUmVsb2FkTGlzdEV4dGVuc2lvbiBleHRlbmRzIGdyaWQgd2l0aCBcIkxpc3QgcmVsb2FkXCIgYWN0aW9uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvcnRpbmdFeHRlbnNpb24ge1xuICAvKipcbiAgICogRXh0ZW5kIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIGNvbnN0ICRzb3J0YWJsZVRhYmxlID0gZ3JpZC5nZXRDb250YWluZXIoKS5maW5kKCd0YWJsZS50YWJsZScpO1xuXG4gICAgbmV3IFRhYmxlU29ydGluZygkc29ydGFibGVUYWJsZSkuYXR0YWNoKCk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuaW1wb3J0IENvbmZpcm1Nb2RhbCBmcm9tICdAY29tcG9uZW50cy9tb2RhbCc7XG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBIYW5kbGVzIHN1Ym1pdCBvZiBncmlkIGFjdGlvbnNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3VibWl0QnVsa0FjdGlvbkV4dGVuc2lvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHJldHVybiB7XG4gICAgICBleHRlbmQ6IChncmlkKSA9PiB0aGlzLmV4dGVuZChncmlkKSxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEV4dGVuZCBncmlkIHdpdGggYnVsayBhY3Rpb24gc3VibWl0dGluZ1xuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgZ3JpZC5nZXRDb250YWluZXIoKS5vbignY2xpY2snLCAnLmpzLWJ1bGstYWN0aW9uLXN1Ym1pdC1idG4nLCAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuc3VibWl0KGV2ZW50LCBncmlkKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGUgYnVsayBhY3Rpb24gc3VibWl0dGluZ1xuICAgKlxuICAgKiBAcGFyYW0ge0V2ZW50fSBldmVudFxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHN1Ym1pdChldmVudCwgZ3JpZCkge1xuICAgIGNvbnN0ICRzdWJtaXRCdG4gPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IGNvbmZpcm1NZXNzYWdlID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtLW1lc3NhZ2UnKTtcbiAgICBjb25zdCBjb25maXJtVGl0bGUgPSAkc3VibWl0QnRuLmRhdGEoJ2NvbmZpcm1UaXRsZScpO1xuXG4gICAgaWYgKGNvbmZpcm1NZXNzYWdlICE9PSB1bmRlZmluZWQgJiYgY29uZmlybU1lc3NhZ2UubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKGNvbmZpcm1UaXRsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMuc2hvd0NvbmZpcm1Nb2RhbCgkc3VibWl0QnRuLCBncmlkLCBjb25maXJtTWVzc2FnZSwgY29uZmlybVRpdGxlKTtcbiAgICAgIH0gZWxzZSBpZiAod2luZG93LmNvbmZpcm0oY29uZmlybU1lc3NhZ2UpKSB7XG4gICAgICAgIHRoaXMucG9zdEZvcm0oJHN1Ym1pdEJ0biwgZ3JpZCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucG9zdEZvcm0oJHN1Ym1pdEJ0biwgZ3JpZCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkc3VibWl0QnRuXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29uZmlybU1lc3NhZ2VcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbmZpcm1UaXRsZVxuICAgKi9cbiAgc2hvd0NvbmZpcm1Nb2RhbCgkc3VibWl0QnRuLCBncmlkLCBjb25maXJtTWVzc2FnZSwgY29uZmlybVRpdGxlKSB7XG4gICAgY29uc3QgY29uZmlybUJ1dHRvbkxhYmVsID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtQnV0dG9uTGFiZWwnKTtcbiAgICBjb25zdCBjbG9zZUJ1dHRvbkxhYmVsID0gJHN1Ym1pdEJ0bi5kYXRhKCdjbG9zZUJ1dHRvbkxhYmVsJyk7XG4gICAgY29uc3QgY29uZmlybUJ1dHRvbkNsYXNzID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtQnV0dG9uQ2xhc3MnKTtcblxuICAgIGNvbnN0IG1vZGFsID0gbmV3IENvbmZpcm1Nb2RhbCh7XG4gICAgICBpZDogYCR7Z3JpZC5nZXRJZCgpfS1ncmlkLWNvbmZpcm0tbW9kYWxgLFxuICAgICAgY29uZmlybVRpdGxlLFxuICAgICAgY29uZmlybU1lc3NhZ2UsXG4gICAgICBjb25maXJtQnV0dG9uTGFiZWwsXG4gICAgICBjbG9zZUJ1dHRvbkxhYmVsLFxuICAgICAgY29uZmlybUJ1dHRvbkNsYXNzLFxuICAgIH0sICgpID0+IHRoaXMucG9zdEZvcm0oJHN1Ym1pdEJ0biwgZ3JpZCkpO1xuXG4gICAgbW9kYWwuc2hvdygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkc3VibWl0QnRuXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKi9cbiAgcG9zdEZvcm0oJHN1Ym1pdEJ0biwgZ3JpZCkge1xuICAgIGNvbnN0ICRmb3JtID0gJChgIyR7Z3JpZC5nZXRJZCgpfV9maWx0ZXJfZm9ybWApO1xuXG4gICAgJGZvcm0uYXR0cignYWN0aW9uJywgJHN1Ym1pdEJ0bi5kYXRhKCdmb3JtLXVybCcpKTtcbiAgICAkZm9ybS5hdHRyKCdtZXRob2QnLCAkc3VibWl0QnRuLmRhdGEoJ2Zvcm0tbWV0aG9kJykpO1xuICAgICRmb3JtLnN1Ym1pdCgpO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCBzaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogUHJlc3RhU2hvcCBpcyBhbiBJbnRlcm5hdGlvbmFsIFJlZ2lzdGVyZWQgVHJhZGVtYXJrICYgUHJvcGVydHkgb2YgUHJlc3RhU2hvcCBTQVxuICpcbiAqIE5PVElDRSBPRiBMSUNFTlNFXG4gKlxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKiB0aGF0IGlzIGJ1bmRsZWQgd2l0aCB0aGlzIHBhY2thZ2UgaW4gdGhlIGZpbGUgTElDRU5TRS5tZC5cbiAqIEl0IGlzIGFsc28gYXZhaWxhYmxlIHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViIGF0IHRoaXMgVVJMOlxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXG4gKiBJZiB5b3UgZGlkIG5vdCByZWNlaXZlIGEgY29weSBvZiB0aGUgbGljZW5zZSBhbmQgYXJlIHVuYWJsZSB0b1xuICogb2J0YWluIGl0IHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbFxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxuICpcbiAqIERJU0NMQUlNRVJcbiAqXG4gKiBEbyBub3QgZWRpdCBvciBhZGQgdG8gdGhpcyBmaWxlIGlmIHlvdSB3aXNoIHRvIHVwZ3JhZGUgUHJlc3RhU2hvcCB0byBuZXdlclxuICogdmVyc2lvbnMgaW4gdGhlIGZ1dHVyZS4gSWYgeW91IHdpc2ggdG8gY3VzdG9taXplIFByZXN0YVNob3AgZm9yIHlvdXJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEBhdXRob3IgICAgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzIDxjb250YWN0QHByZXN0YXNob3AuY29tPlxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogQGxpY2Vuc2UgICBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjAgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICovXG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBDbGFzcyBpcyByZXNwb25zaWJsZSBmb3IgaGFuZGxpbmcgR3JpZCBldmVudHNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3JpZCB7XG4gIC8qKlxuICAgKiBHcmlkIGlkXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICAgKi9cbiAgY29uc3RydWN0b3IoaWQpIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy4kY29udGFpbmVyID0gJChgIyR7dGhpcy5pZH1fZ3JpZGApO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBncmlkIGlkXG4gICAqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBnZXRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5pZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZ3JpZCBjb250YWluZXJcbiAgICpcbiAgICogQHJldHVybnMge2pRdWVyeX1cbiAgICovXG4gIGdldENvbnRhaW5lcigpIHtcbiAgICByZXR1cm4gdGhpcy4kY29udGFpbmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBncmlkIGhlYWRlciBjb250YWluZXJcbiAgICpcbiAgICogQHJldHVybnMge2pRdWVyeX1cbiAgICovXG4gIGdldEhlYWRlckNvbnRhaW5lcigpIHtcbiAgICByZXR1cm4gdGhpcy4kY29udGFpbmVyLmNsb3Nlc3QoJy5qcy1ncmlkLXBhbmVsJykuZmluZCgnLmpzLWdyaWQtaGVhZGVyJyk7XG4gIH1cblxuICAvKipcbiAgICogRXh0ZW5kIGdyaWQgd2l0aCBleHRlcm5hbCBleHRlbnNpb25zXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBleHRlbnNpb25cbiAgICovXG4gIGFkZEV4dGVuc2lvbihleHRlbnNpb24pIHtcbiAgICBleHRlbnNpb24uZXh0ZW5kKHRoaXMpO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCBzaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogUHJlc3RhU2hvcCBpcyBhbiBJbnRlcm5hdGlvbmFsIFJlZ2lzdGVyZWQgVHJhZGVtYXJrICYgUHJvcGVydHkgb2YgUHJlc3RhU2hvcCBTQVxuICpcbiAqIE5PVElDRSBPRiBMSUNFTlNFXG4gKlxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKiB0aGF0IGlzIGJ1bmRsZWQgd2l0aCB0aGlzIHBhY2thZ2UgaW4gdGhlIGZpbGUgTElDRU5TRS5tZC5cbiAqIEl0IGlzIGFsc28gYXZhaWxhYmxlIHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViIGF0IHRoaXMgVVJMOlxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXG4gKiBJZiB5b3UgZGlkIG5vdCByZWNlaXZlIGEgY29weSBvZiB0aGUgbGljZW5zZSBhbmQgYXJlIHVuYWJsZSB0b1xuICogb2J0YWluIGl0IHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbFxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxuICpcbiAqIERJU0NMQUlNRVJcbiAqXG4gKiBEbyBub3QgZWRpdCBvciBhZGQgdG8gdGhpcyBmaWxlIGlmIHlvdSB3aXNoIHRvIHVwZ3JhZGUgUHJlc3RhU2hvcCB0byBuZXdlclxuICogdmVyc2lvbnMgaW4gdGhlIGZ1dHVyZS4gSWYgeW91IHdpc2ggdG8gY3VzdG9taXplIFByZXN0YVNob3AgZm9yIHlvdXJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEBhdXRob3IgICAgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzIDxjb250YWN0QHByZXN0YXNob3AuY29tPlxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogQGxpY2Vuc2UgICBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjAgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICovXG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBDb25maXJtTW9kYWwgY29tcG9uZW50XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGlkXG4gKiBAcGFyYW0ge1N0cmluZ30gY29uZmlybVRpdGxlXG4gKiBAcGFyYW0ge1N0cmluZ30gY29uZmlybU1lc3NhZ2VcbiAqIEBwYXJhbSB7U3RyaW5nfSBjbG9zZUJ1dHRvbkxhYmVsXG4gKiBAcGFyYW0ge1N0cmluZ30gY29uZmlybUJ1dHRvbkxhYmVsXG4gKiBAcGFyYW0ge1N0cmluZ30gY29uZmlybUJ1dHRvbkNsYXNzXG4gKiBAcGFyYW0ge0FycmF5fSBjdXN0b21CdXR0b25zXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGNsb3NhYmxlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb25maXJtQ2FsbGJhY2tcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbmNlbENhbGxiYWNrXG4gKlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb25maXJtTW9kYWwocGFyYW1zLCBjb25maXJtQ2FsbGJhY2ssIGNhbmNlbENhbGxiYWNrKSB7XG4gIC8vIENvbnN0cnVjdCB0aGUgbW9kYWxcbiAgY29uc3Qge2lkLCBjbG9zYWJsZX0gPSBwYXJhbXM7XG4gIHRoaXMubW9kYWwgPSBNb2RhbChwYXJhbXMpO1xuXG4gIC8vIGpRdWVyeSBtb2RhbCBvYmplY3RcbiAgdGhpcy4kbW9kYWwgPSAkKHRoaXMubW9kYWwuY29udGFpbmVyKTtcblxuICB0aGlzLnNob3cgPSAoKSA9PiB7XG4gICAgdGhpcy4kbW9kYWwubW9kYWwoKTtcbiAgfTtcblxuICB0aGlzLm1vZGFsLmNvbmZpcm1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjb25maXJtQ2FsbGJhY2spO1xuXG4gIHRoaXMuJG1vZGFsLm1vZGFsKHtcbiAgICBiYWNrZHJvcDogY2xvc2FibGUgPyB0cnVlIDogJ3N0YXRpYycsXG4gICAga2V5Ym9hcmQ6IGNsb3NhYmxlICE9PSB1bmRlZmluZWQgPyBjbG9zYWJsZSA6IHRydWUsXG4gICAgY2xvc2FibGU6IGNsb3NhYmxlICE9PSB1bmRlZmluZWQgPyBjbG9zYWJsZSA6IHRydWUsXG4gICAgc2hvdzogZmFsc2UsXG4gIH0pO1xuXG4gIHRoaXMuJG1vZGFsLm9uKCdoaWRkZW4uYnMubW9kYWwnLCAoKSA9PiB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aWR9YCkucmVtb3ZlKCk7XG4gICAgaWYgKGNhbmNlbENhbGxiYWNrKSB7XG4gICAgICBjYW5jZWxDYWxsYmFjaygpO1xuICAgIH1cbiAgfSk7XG5cbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLm1vZGFsLmNvbnRhaW5lcik7XG59XG5cbi8qKlxuICogTW9kYWwgY29tcG9uZW50IHRvIGltcHJvdmUgbGlzaWJpbGl0eSBieSBjb25zdHJ1Y3RpbmcgdGhlIG1vZGFsIG91dHNpZGUgdGhlIG1haW4gZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gKlxuICovXG5mdW5jdGlvbiBNb2RhbCh7XG4gIGlkID0gJ2NvbmZpcm0tbW9kYWwnLFxuICBjb25maXJtVGl0bGUsXG4gIGNvbmZpcm1NZXNzYWdlID0gJycsXG4gIGNsb3NlQnV0dG9uTGFiZWwgPSAnQ2xvc2UnLFxuICBjb25maXJtQnV0dG9uTGFiZWwgPSAnQWNjZXB0JyxcbiAgY29uZmlybUJ1dHRvbkNsYXNzID0gJ2J0bi1wcmltYXJ5JyxcbiAgY3VzdG9tQnV0dG9ucyA9IFtdLFxufSkge1xuICBjb25zdCBtb2RhbCA9IHt9O1xuXG4gIC8vIE1haW4gbW9kYWwgZWxlbWVudFxuICBtb2RhbC5jb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbW9kYWwuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ21vZGFsJywgJ2ZhZGUnKTtcbiAgbW9kYWwuY29udGFpbmVyLmlkID0gaWQ7XG5cbiAgLy8gTW9kYWwgZGlhbG9nIGVsZW1lbnRcbiAgbW9kYWwuZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG1vZGFsLmRpYWxvZy5jbGFzc0xpc3QuYWRkKCdtb2RhbC1kaWFsb2cnKTtcblxuICAvLyBNb2RhbCBjb250ZW50IGVsZW1lbnRcbiAgbW9kYWwuY29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBtb2RhbC5jb250ZW50LmNsYXNzTGlzdC5hZGQoJ21vZGFsLWNvbnRlbnQnKTtcblxuICAvLyBNb2RhbCBoZWFkZXIgZWxlbWVudFxuICBtb2RhbC5oZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbW9kYWwuaGVhZGVyLmNsYXNzTGlzdC5hZGQoJ21vZGFsLWhlYWRlcicpO1xuXG4gIC8vIE1vZGFsIHRpdGxlIGVsZW1lbnRcbiAgaWYgKGNvbmZpcm1UaXRsZSkge1xuICAgIG1vZGFsLnRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDQnKTtcbiAgICBtb2RhbC50aXRsZS5jbGFzc0xpc3QuYWRkKCdtb2RhbC10aXRsZScpO1xuICAgIG1vZGFsLnRpdGxlLmlubmVySFRNTCA9IGNvbmZpcm1UaXRsZTtcbiAgfVxuXG4gIC8vIE1vZGFsIGNsb3NlIGJ1dHRvbiBpY29uXG4gIG1vZGFsLmNsb3NlSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBtb2RhbC5jbG9zZUljb24uY2xhc3NMaXN0LmFkZCgnY2xvc2UnKTtcbiAgbW9kYWwuY2xvc2VJY29uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgbW9kYWwuY2xvc2VJY29uLmRhdGFzZXQuZGlzbWlzcyA9ICdtb2RhbCc7XG4gIG1vZGFsLmNsb3NlSWNvbi5pbm5lckhUTUwgPSAnw5cnO1xuXG4gIC8vIE1vZGFsIGJvZHkgZWxlbWVudFxuICBtb2RhbC5ib2R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG1vZGFsLmJvZHkuY2xhc3NMaXN0LmFkZCgnbW9kYWwtYm9keScsICd0ZXh0LWxlZnQnLCAnZm9udC13ZWlnaHQtbm9ybWFsJyk7XG5cbiAgLy8gTW9kYWwgbWVzc2FnZSBlbGVtZW50XG4gIG1vZGFsLm1lc3NhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIG1vZGFsLm1lc3NhZ2UuY2xhc3NMaXN0LmFkZCgnY29uZmlybS1tZXNzYWdlJyk7XG4gIG1vZGFsLm1lc3NhZ2UuaW5uZXJIVE1MID0gY29uZmlybU1lc3NhZ2U7XG5cbiAgLy8gTW9kYWwgZm9vdGVyIGVsZW1lbnRcbiAgbW9kYWwuZm9vdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG1vZGFsLmZvb3Rlci5jbGFzc0xpc3QuYWRkKCdtb2RhbC1mb290ZXInKTtcblxuICAvLyBNb2RhbCBjbG9zZSBidXR0b24gZWxlbWVudFxuICBtb2RhbC5jbG9zZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBtb2RhbC5jbG9zZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIG1vZGFsLmNsb3NlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2J0bicsICdidG4tb3V0bGluZS1zZWNvbmRhcnknLCAnYnRuLWxnJyk7XG4gIG1vZGFsLmNsb3NlQnV0dG9uLmRhdGFzZXQuZGlzbWlzcyA9ICdtb2RhbCc7XG4gIG1vZGFsLmNsb3NlQnV0dG9uLmlubmVySFRNTCA9IGNsb3NlQnV0dG9uTGFiZWw7XG5cbiAgLy8gTW9kYWwgY29uZmlybSBidXR0b24gZWxlbWVudFxuICBtb2RhbC5jb25maXJtQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIG1vZGFsLmNvbmZpcm1CdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBtb2RhbC5jb25maXJtQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2J0bicsIGNvbmZpcm1CdXR0b25DbGFzcywgJ2J0bi1sZycsICdidG4tY29uZmlybS1zdWJtaXQnKTtcbiAgbW9kYWwuY29uZmlybUJ1dHRvbi5kYXRhc2V0LmRpc21pc3MgPSAnbW9kYWwnO1xuICBtb2RhbC5jb25maXJtQnV0dG9uLmlubmVySFRNTCA9IGNvbmZpcm1CdXR0b25MYWJlbDtcblxuICAvLyBDb25zdHJ1Y3RpbmcgdGhlIG1vZGFsXG4gIGlmIChjb25maXJtVGl0bGUpIHtcbiAgICBtb2RhbC5oZWFkZXIuYXBwZW5kKG1vZGFsLnRpdGxlLCBtb2RhbC5jbG9zZUljb24pO1xuICB9IGVsc2Uge1xuICAgIG1vZGFsLmhlYWRlci5hcHBlbmRDaGlsZChtb2RhbC5jbG9zZUljb24pO1xuICB9XG5cbiAgbW9kYWwuYm9keS5hcHBlbmRDaGlsZChtb2RhbC5tZXNzYWdlKTtcbiAgbW9kYWwuZm9vdGVyLmFwcGVuZChtb2RhbC5jbG9zZUJ1dHRvbiwgLi4uY3VzdG9tQnV0dG9ucywgbW9kYWwuY29uZmlybUJ1dHRvbik7XG4gIG1vZGFsLmNvbnRlbnQuYXBwZW5kKG1vZGFsLmhlYWRlciwgbW9kYWwuYm9keSwgbW9kYWwuZm9vdGVyKTtcbiAgbW9kYWwuZGlhbG9nLmFwcGVuZENoaWxkKG1vZGFsLmNvbnRlbnQpO1xuICBtb2RhbC5jb250YWluZXIuYXBwZW5kQ2hpbGQobW9kYWwuZGlhbG9nKTtcblxuICByZXR1cm4gbW9kYWw7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCBzaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogUHJlc3RhU2hvcCBpcyBhbiBJbnRlcm5hdGlvbmFsIFJlZ2lzdGVyZWQgVHJhZGVtYXJrICYgUHJvcGVydHkgb2YgUHJlc3RhU2hvcCBTQVxuICpcbiAqIE5PVElDRSBPRiBMSUNFTlNFXG4gKlxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKiB0aGF0IGlzIGJ1bmRsZWQgd2l0aCB0aGlzIHBhY2thZ2UgaW4gdGhlIGZpbGUgTElDRU5TRS5tZC5cbiAqIEl0IGlzIGFsc28gYXZhaWxhYmxlIHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViIGF0IHRoaXMgVVJMOlxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXG4gKiBJZiB5b3UgZGlkIG5vdCByZWNlaXZlIGEgY29weSBvZiB0aGUgbGljZW5zZSBhbmQgYXJlIHVuYWJsZSB0b1xuICogb2J0YWluIGl0IHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbFxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxuICpcbiAqIERJU0NMQUlNRVJcbiAqXG4gKiBEbyBub3QgZWRpdCBvciBhZGQgdG8gdGhpcyBmaWxlIGlmIHlvdSB3aXNoIHRvIHVwZ3JhZGUgUHJlc3RhU2hvcCB0byBuZXdlclxuICogdmVyc2lvbnMgaW4gdGhlIGZ1dHVyZS4gSWYgeW91IHdpc2ggdG8gY3VzdG9taXplIFByZXN0YVNob3AgZm9yIHlvdXJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEBhdXRob3IgICAgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzIDxjb250YWN0QHByZXN0YXNob3AuY29tPlxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogQGxpY2Vuc2UgICBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjAgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICovXG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBDbGFzcyBTaG93Y2FzZUNhcmRDbG9zZUV4dGVuc2lvbiBpcyByZXNwb25zaWJsZSBmb3IgcHJvdmlkaW5nIGhlbHBlciBibG9jayBjbG9zaW5nIGJlaGF2aW9yXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3djYXNlQ2FyZENsb3NlRXh0ZW5zaW9uIHtcbiAgLyoqXG4gICAqIEV4dGVuZCBoZWxwZXIgYmxvY2suXG4gICAqXG4gICAqIEBwYXJhbSB7U2hvd2Nhc2VDYXJkfSBoZWxwZXJCbG9ja1xuICAgKi9cbiAgZXh0ZW5kKGhlbHBlckJsb2NrKSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gaGVscGVyQmxvY2suZ2V0Q29udGFpbmVyKCk7XG4gICAgY29udGFpbmVyLm9uKCdjbGljaycsICcuanMtcmVtb3ZlLWhlbHBlci1ibG9jaycsIChldnQpID0+IHtcbiAgICAgIGNvbnRhaW5lci5yZW1vdmUoKTtcblxuICAgICAgY29uc3QgJGJ0biA9ICQoZXZ0LnRhcmdldCk7XG4gICAgICBjb25zdCB1cmwgPSAkYnRuLmRhdGEoJ2Nsb3NlVXJsJyk7XG4gICAgICBjb25zdCBjYXJkTmFtZSA9ICRidG4uZGF0YSgnY2FyZE5hbWUnKTtcblxuICAgICAgaWYgKHVybCkge1xuICAgICAgICAvLyBub3RpZnkgdGhlIGNhcmQgd2FzIGNsb3NlZFxuICAgICAgICAkLnBvc3QoXG4gICAgICAgICAgdXJsLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNsb3NlOiAxLFxuICAgICAgICAgICAgbmFtZTogY2FyZE5hbWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgU2hvd2Nhc2VDYXJkIGlzIHJlc3BvbnNpYmxlIGZvciBoYW5kbGluZyBldmVudHMgcmVsYXRlZCB3aXRoIHNob3djYXNlIGNhcmQuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3djYXNlQ2FyZCB7XG4gIC8qKlxuICAgKiBTaG93Y2FzZSBjYXJkIGlkLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGlkKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuJGNvbnRhaW5lciA9ICQoYCMke3RoaXMuaWR9YCk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHNob3djYXNlIGNhcmQgY29udGFpbmVyLlxuICAgKlxuICAgKiBAcmV0dXJucyB7alF1ZXJ5fVxuICAgKi9cbiAgZ2V0Q29udGFpbmVyKCkge1xuICAgIHJldHVybiB0aGlzLiRjb250YWluZXI7XG4gIH1cblxuICAvKipcbiAgICogRXh0ZW5kIHNob3djYXNlIGNhcmQgd2l0aCBleHRlcm5hbCBleHRlbnNpb25zLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gZXh0ZW5zaW9uXG4gICAqL1xuICBhZGRFeHRlbnNpb24oZXh0ZW5zaW9uKSB7XG4gICAgZXh0ZW5zaW9uLmV4dGVuZCh0aGlzKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ29tcG9uZW50IHdoaWNoIGFsbG93cyB0byBjb3B5IHJlZ3VsYXIgdGV4dCB0byB1cmwgZnJpZW5kbHkgdGV4dFxuICpcbiAqIFVzYWdlIGV4YW1wbGUgaW4gdGVtcGxhdGU6XG4gKlxuICogPGlucHV0IG5hbWU9XCJzb3VyY2UtaW5wdXRcIlxuICogICAgICAgIGNsYXNzPVwianMtbGluay1yZXdyaXRlLWNvcGllci1zb3VyY2VcIj4gLy8gVGhlIG9yaWdpbmFsIHRleHQgd2lsbCBiZSB0YWtlbiBmcm9tIHRoaXMgZWxlbWVudFxuICogPGlucHV0IG5hbWU9XCJkZXN0aW5hdGlvbi1pbnB1dFwiXG4gKiAgICAgICAgY2xhc3M9XCJqcy1saW5rLXJld3JpdGUtY29waWVyLWRlc3RpbmF0aW9uXCI+IC8vIE1vZGlmaWVkIHRleHQgd2lsbCBiZSBhZGRlZCB0byB0aGlzIGlucHV0XG4gKlxuICogaW4gamF2YXNjcmlwdDpcbiAqXG4gKiB0ZXh0VG9MaW5rUmV3cml0ZUNvcGllcih7XG4gKiAgIHNvdXJjZUVsZW1lbnRTZWxlY3RvcjogJy5qcy1saW5rLXJld3JpdGUtY29waWVyLXNvdXJjZSdcbiAqICAgZGVzdGluYXRpb25FbGVtZW50U2VsZWN0b3I6ICcuanMtbGluay1yZXdyaXRlLWNvcGllci1kZXN0aW5hdGlvbicsXG4gKiB9KTtcbiAqXG4gKiBJZiB0aGUgc291cmNlLWlucHV0IGhhcyB2YWx1ZSBcInRlc3QgbmFtZVwiIHRoZSBsaW5rIHJld3JpdGUgdmFsdWUgd2lsbCBiZSBcInRlc3QtbmFtZVwiLlxuICogSWYgdGhlIHNvdXJjZS1pbnB1dCBoYXMgdmFsdWUgXCJ0ZXN0IG5hbWUgIyRcIiBsaW5rIHJld3JpdGUgd2lsbCBiZSBcInRlc3QtbmFtZS1cIiBzaW5jZSAjJFxuICogYXJlIHVuIGFsbG93ZWQgY2hhcmFjdGVycyBpbiB1cmwuXG4gKlxuICogWW91IGNhbiBhbHNvIHBhc3MgYWRkaXRpb25hbCBvcHRpb25zIHRvIGNoYW5nZSB0aGUgZXZlbnQgbmFtZSwgb3IgZW5jb2RpbmcgZm9ybWF0OlxuICpcbiAqIHRleHRUb0xpbmtSZXdyaXRlQ29waWVyKHtcbiAqICAgc291cmNlRWxlbWVudFNlbGVjdG9yOiAnLmpzLWxpbmstcmV3cml0ZS1jb3BpZXItc291cmNlJ1xuICogICBkZXN0aW5hdGlvbkVsZW1lbnRTZWxlY3RvcjogJy5qcy1saW5rLXJld3JpdGUtY29waWVyLWRlc3RpbmF0aW9uJyxcbiAqICAgb3B0aW9uczoge1xuICogICAgIGV2ZW50TmFtZTogJ2NoYW5nZScsIC8vIGRlZmF1bHQgaXMgJ2lucHV0J1xuICogICB9XG4gKiB9KTtcbiAqXG4gKi9cbmNvbnN0IHRleHRUb0xpbmtSZXdyaXRlQ29waWVyID0gKFxuICB7XG4gICAgc291cmNlRWxlbWVudFNlbGVjdG9yLFxuICAgIGRlc3RpbmF0aW9uRWxlbWVudFNlbGVjdG9yLFxuICAgIG9wdGlvbnMgPSB7ZXZlbnROYW1lOiAnaW5wdXQnfSxcbiAgfSxcbikgPT4ge1xuICAkKGRvY3VtZW50KS5vbihvcHRpb25zLmV2ZW50TmFtZSwgYCR7c291cmNlRWxlbWVudFNlbGVjdG9yfWAsIChldmVudCkgPT4ge1xuICAgICQoZGVzdGluYXRpb25FbGVtZW50U2VsZWN0b3IpLnZhbCh3aW5kb3cuc3RyMnVybCgkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLnZhbCgpLCAnVVRGLTgnKSk7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdGV4dFRvTGlua1Jld3JpdGVDb3BpZXI7XG4iLCI8IS0tKipcclxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXHJcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcclxuICpcclxuICogTk9USUNFIE9GIExJQ0VOU0VcclxuICpcclxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXHJcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxyXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcclxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXHJcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXHJcbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcclxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxyXG4gKlxyXG4gKiBESVNDTEFJTUVSXHJcbiAqXHJcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXHJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXHJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cclxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xyXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXHJcbiAqLS0+XHJcbjx0ZW1wbGF0ZT5cclxuICA8ZGl2IGlkPVwic2VycFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInNlcnAtcHJldmlld1wiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwic2VycC10aXRsZVwiPlxyXG4gICAgICAgIHt7IGRpc3BsYXllZFRpdGxlIH19XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwic2VycC11cmxcIj5cclxuICAgICAgICB7eyB1cmwgfX08c3BhbiBjbGFzcz1cInNlcnAtYXJyb3dcIiAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInNlcnAtZGVzY3JpcHRpb25cIj5cclxuICAgICAgICB7eyBkaXNwbGF5ZWREZXNjcmlwdGlvbiB9fVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuICBleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBuYW1lOiAnU2VycCcsXHJcbiAgICBwcm9wczoge1xyXG4gICAgICB1cmw6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgZGVmYXVsdDogJ2h0dHBzOi8vd3d3LmV4YW1wbGUuY29tLycsXHJcbiAgICAgIH0sXHJcbiAgICAgIGRlc2NyaXB0aW9uOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIGRlZmF1bHQ6ICcnLFxyXG4gICAgICB9LFxyXG4gICAgICB0aXRsZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICBkZWZhdWx0OiAnJyxcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICBkaXNwbGF5ZWRUaXRsZSgpIHtcclxuICAgICAgICBpZiAodGhpcy50aXRsZS5sZW5ndGggPiA3MCkge1xyXG4gICAgICAgICAgcmV0dXJuIGAke3RoaXMudGl0bGUuc3Vic3RyaW5nKDAsIDcwKX0uLi5gO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMudGl0bGU7XHJcbiAgICAgIH0sXHJcbiAgICAgIGRpc3BsYXllZERlc2NyaXB0aW9uKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uLmxlbmd0aCA+IDE1MCkge1xyXG4gICAgICAgICAgcmV0dXJuIGAke3RoaXMuZGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsIDE1MCl9Li4uYDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmRlc2NyaXB0aW9uO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICB9O1xyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHR5cGU9XCJ0ZXh0L3Njc3NcIiBzY29wZWQ+XHJcbiAgICAuc2VycC1wcmV2aWV3IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICAgICAgYm9yZGVyOiBzb2xpZCAxcHggI2U3ZTdlNztcclxuICAgICAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgICAgIG1heC13aWR0aDogNzAwcHg7XHJcblxyXG4gICAgICAgIC5zZXJwLWFycm93IHtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiKDAsIDEwMiwgMzMpO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcclxuICAgICAgICAgICAgYm9yZGVyLWxlZnQtc3R5bGU6IHNvbGlkO1xyXG4gICAgICAgICAgICBib3JkZXItbGVmdC13aWR0aDogNHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XHJcbiAgICAgICAgICAgIGJvcmRlci1yaWdodC1zdHlsZTogc29saWQ7XHJcbiAgICAgICAgICAgIGJvcmRlci1yaWdodC13aWR0aDogNHB4O1xyXG4gICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZ2IoMCwgMTAyLCAzMyk7XHJcbiAgICAgICAgICAgIGJvcmRlci10b3Atc3R5bGU6IHNvbGlkO1xyXG4gICAgICAgICAgICBib3JkZXItdG9wLXdpZHRoOiA1cHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2IoMTI4LCAxMjgsIDEyOCk7XHJcbiAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDBweDtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDNweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogNnB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgICB3aWR0aDogMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNlcnAtdGl0bGUge1xyXG4gICAgICAgICAgICBjb2xvcjogIzFBMERBQjtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogYXJpYWwsIHJlZ3VsYXI7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNlcnAtdXJsIHtcclxuICAgICAgICAgICAgY29sb3I6ICMwMDY2MjE7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBhcmlhbCwgcmVndWxhcjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNlcnAtZGVzY3JpcHRpb24ge1xyXG4gICAgICAgICAgICBjb2xvcjogIzU0NTQ1NDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGFyaWFsLCByZWd1bGFyO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgICAgICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbjwvc3R5bGU+XHJcbiIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9hcnJheS9mcm9tXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpO1xuXG52YXIgX2RlZmluZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZmluZVByb3BlcnR5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICgwLCBfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH07XG59KCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZnJvbSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL2FycmF5L2Zyb21cIik7XG5cbnZhciBfZnJvbTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9mcm9tKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgYXJyMltpXSA9IGFycltpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKDAsIF9mcm9tMi5kZWZhdWx0KShhcnIpO1xuICB9XG59OyIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuYXJyYXkuZnJvbScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuZnJvbTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHknKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgZGVzYykge1xuICByZXR1cm4gJE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJU19JTkNMVURFUykge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBlbCwgZnJvbUluZGV4KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoJHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgaWYgKHZhbHVlICE9IHZhbHVlKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSNpbmRleE9mIGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykge1xuICAgICAgaWYgKE9baW5kZXhdID09PSBlbCkgcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcbiIsIi8vIGdldHRpbmcgdGFnIGZyb20gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG4vLyBFUzMgd3JvbmcgaGVyZVxudmFyIEFSRyA9IGNvZihmdW5jdGlvbiAoKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPT0gJ0FyZ3VtZW50cyc7XG5cbi8vIGZhbGxiYWNrIGZvciBJRTExIFNjcmlwdCBBY2Nlc3MgRGVuaWVkIGVycm9yXG52YXIgdHJ5R2V0ID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgTywgVCwgQjtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyAnVW5kZWZpbmVkJyA6IGl0ID09PSBudWxsID8gJ051bGwnXG4gICAgLy8gQEB0b1N0cmluZ1RhZyBjYXNlXG4gICAgOiB0eXBlb2YgKFQgPSB0cnlHZXQoTyA9IE9iamVjdChpdCksIFRBRykpID09ICdzdHJpbmcnID8gVFxuICAgIC8vIGJ1aWx0aW5UYWcgY2FzZVxuICAgIDogQVJHID8gY29mKE8pXG4gICAgLy8gRVMzIGFyZ3VtZW50cyBmYWxsYmFja1xuICAgIDogKEIgPSBjb2YoTykpID09ICdPYmplY3QnICYmIHR5cGVvZiBPLmNhbGxlZSA9PSAnZnVuY3Rpb24nID8gJ0FyZ3VtZW50cycgOiBCO1xufTtcbiIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChpdCkuc2xpY2UoOCwgLTEpO1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuMTEnIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgaW5kZXgsIHZhbHVlKSB7XG4gIGlmIChpbmRleCBpbiBvYmplY3QpICRkZWZpbmVQcm9wZXJ0eS5mKG9iamVjdCwgaW5kZXgsIGNyZWF0ZURlc2MoMCwgdmFsdWUpKTtcbiAgZWxzZSBvYmplY3RbaW5kZXhdID0gdmFsdWU7XG59O1xuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbi8vIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnIGluIG9sZCBJRVxudmFyIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChpdCkgOiB7fTtcbn07XG4iLCIvLyBJRSA4LSBkb24ndCBlbnVtIGJ1ZyBrZXlzXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgJ2NvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZidcbikuc3BsaXQoJywnKTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciBJU19XUkFQID0gdHlwZSAmICRleHBvcnQuVztcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGtleSwgb3duLCBvdXQ7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgaWYgKG93biAmJiBoYXMoZXhwb3J0cywga2V5KSkgY29udGludWU7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSBvd24gPyB0YXJnZXRba2V5XSA6IHNvdXJjZVtrZXldO1xuICAgIC8vIHByZXZlbnQgZ2xvYmFsIHBvbGx1dGlvbiBmb3IgbmFtZXNwYWNlc1xuICAgIGV4cG9ydHNba2V5XSA9IElTX0dMT0JBTCAmJiB0eXBlb2YgdGFyZ2V0W2tleV0gIT0gJ2Z1bmN0aW9uJyA/IHNvdXJjZVtrZXldXG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICA6IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKVxuICAgIC8vIHdyYXAgZ2xvYmFsIGNvbnN0cnVjdG9ycyBmb3IgcHJldmVudCBjaGFuZ2UgdGhlbSBpbiBsaWJyYXJ5XG4gICAgOiBJU19XUkFQICYmIHRhcmdldFtrZXldID09IG91dCA/IChmdW5jdGlvbiAoQykge1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIEMpIHtcbiAgICAgICAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDKCk7XG4gICAgICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgQyhhKTtcbiAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBDKGEsIGIpO1xuICAgICAgICAgIH0gcmV0dXJuIG5ldyBDKGEsIGIsIGMpO1xuICAgICAgICB9IHJldHVybiBDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5tZXRob2RzLiVOQU1FJVxuICAgIGlmIChJU19QUk9UTykge1xuICAgICAgKGV4cG9ydHMudmlydHVhbCB8fCAoZXhwb3J0cy52aXJ0dWFsID0ge30pKVtrZXldID0gb3V0O1xuICAgICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLnByb3RvdHlwZS4lTkFNRSVcbiAgICAgIGlmICh0eXBlICYgJGV4cG9ydC5SICYmIGV4cFByb3RvICYmICFleHBQcm90b1trZXldKSBoaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYgKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpIF9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsInZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xubW9kdWxlLmV4cG9ydHMgPSBkb2N1bWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCkgPyBPYmplY3QgOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGNvZihpdCkgPT0gJ1N0cmluZycgPyBpdC5zcGxpdCgnJykgOiBPYmplY3QoaXQpO1xufTtcbiIsIi8vIGNoZWNrIG9uIGRlZmF1bHQgQXJyYXkgaXRlcmF0b3JcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IHR5cGVvZiBpdCA9PT0gJ2Z1bmN0aW9uJztcbn07XG4iLCIvLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZW50cmllcyA/IGZuKGFuT2JqZWN0KHZhbHVlKVswXSwgdmFsdWVbMV0pIDogZm4odmFsdWUpO1xuICAvLyA3LjQuNiBJdGVyYXRvckNsb3NlKGl0ZXJhdG9yLCBjb21wbGV0aW9uKVxuICB9IGNhdGNoIChlKSB7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZiAocmV0ICE9PSB1bmRlZmluZWQpIGFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcblxuLy8gMjUuMS4yLjEuMSAlSXRlcmF0b3JQcm90b3R5cGUlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2hpZGUnKShJdGVyYXRvclByb3RvdHlwZSwgcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyksIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCkge1xuICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHsgbmV4dDogZGVzY3JpcHRvcigxLCBuZXh0KSB9KTtcbiAgc2V0VG9TdHJpbmdUYWcoQ29uc3RydWN0b3IsIE5BTUUgKyAnIEl0ZXJhdG9yJyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyICRpdGVyQ3JlYXRlID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBCVUdHWSA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKTsgLy8gU2FmYXJpIGhhcyBidWdneSBpdGVyYXRvcnMgdy9vIGBuZXh0YFxudmFyIEZGX0lURVJBVE9SID0gJ0BAaXRlcmF0b3InO1xudmFyIEtFWVMgPSAna2V5cyc7XG52YXIgVkFMVUVTID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKSB7XG4gICRpdGVyQ3JlYXRlKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcbiAgdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgaWYgKCFCVUdHWSAmJiBraW5kIGluIHByb3RvKSByZXR1cm4gcHJvdG9ba2luZF07XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgfTtcbiAgdmFyIFRBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIERFRl9WQUxVRVMgPSBERUZBVUxUID09IFZBTFVFUztcbiAgdmFyIFZBTFVFU19CVUcgPSBmYWxzZTtcbiAgdmFyIHByb3RvID0gQmFzZS5wcm90b3R5cGU7XG4gIHZhciAkbmF0aXZlID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdO1xuICB2YXIgJGRlZmF1bHQgPSAkbmF0aXZlIHx8IGdldE1ldGhvZChERUZBVUxUKTtcbiAgdmFyICRlbnRyaWVzID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZDtcbiAgdmFyICRhbnlOYXRpdmUgPSBOQU1FID09ICdBcnJheScgPyBwcm90by5lbnRyaWVzIHx8ICRuYXRpdmUgOiAkbmF0aXZlO1xuICB2YXIgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTtcbiAgLy8gRml4IG5hdGl2ZVxuICBpZiAoJGFueU5hdGl2ZSkge1xuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoJGFueU5hdGl2ZS5jYWxsKG5ldyBCYXNlKCkpKTtcbiAgICBpZiAoSXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUgJiYgSXRlcmF0b3JQcm90b3R5cGUubmV4dCkge1xuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JQcm90b3R5cGUsIFRBRywgdHJ1ZSk7XG4gICAgICAvLyBmaXggZm9yIHNvbWUgb2xkIGVuZ2luZXNcbiAgICAgIGlmICghTElCUkFSWSAmJiB0eXBlb2YgSXRlcmF0b3JQcm90b3R5cGVbSVRFUkFUT1JdICE9ICdmdW5jdGlvbicpIGhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZiAoREVGX1ZBTFVFUyAmJiAkbmF0aXZlICYmICRuYXRpdmUubmFtZSAhPT0gVkFMVUVTKSB7XG4gICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmICgoIUxJQlJBUlkgfHwgRk9SQ0VEKSAmJiAoQlVHR1kgfHwgVkFMVUVTX0JVRyB8fCAhcHJvdG9bSVRFUkFUT1JdKSkge1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gPSByZXR1cm5UaGlzO1xuICBpZiAoREVGQVVMVCkge1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6IERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogSVNfU0VUID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAkZW50cmllc1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkgZm9yIChrZXkgaW4gbWV0aG9kcykge1xuICAgICAgaWYgKCEoa2V5IGluIHByb3RvKSkgcmVkZWZpbmUocHJvdG8sIGtleSwgbWV0aG9kc1trZXldKTtcbiAgICB9IGVsc2UgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoQlVHR1kgfHwgVkFMVUVTX0JVRyksIE5BTUUsIG1ldGhvZHMpO1xuICB9XG4gIHJldHVybiBtZXRob2RzO1xufTtcbiIsInZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uICgpIHsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBza2lwQ2xvc2luZykge1xuICBpZiAoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpIHJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gWzddO1xuICAgIHZhciBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgZG9uZTogc2FmZSA9IHRydWUgfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHt9O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB0cnVlO1xuIiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBkUHMgPSByZXF1aXJlKCcuL19vYmplY3QtZHBzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgRW1wdHkgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdpZnJhbWUnKTtcbiAgdmFyIGkgPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHZhciBsdCA9ICc8JztcbiAgdmFyIGd0ID0gJz4nO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICByZXF1aXJlKCcuL19odG1sJykuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lLnNyYyA9ICdqYXZhc2NyaXB0Oic7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2NyaXB0LXVybFxuICAvLyBjcmVhdGVEaWN0ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuT2JqZWN0O1xuICAvLyBodG1sLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUobHQgKyAnc2NyaXB0JyArIGd0ICsgJ2RvY3VtZW50LkY9T2JqZWN0JyArIGx0ICsgJy9zY3JpcHQnICsgZ3QpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICBjcmVhdGVEaWN0ID0gaWZyYW1lRG9jdW1lbnQuRjtcbiAgd2hpbGUgKGktLSkgZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5KCk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZFAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyA9IGdldEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgUDtcbiAgd2hpbGUgKGxlbmd0aCA+IGkpIGRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwidmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lcykge1xuICB2YXIgTyA9IHRvSU9iamVjdChvYmplY3QpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gTykgaWYgKGtleSAhPSBJRV9QUk9UTykgaGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIvLyAxOS4xLjIuMTQgLyAxNS4yLjMuMTQgT2JqZWN0LmtleXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faGlkZScpO1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxOSBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRPX1NUUklORykge1xuICByZXR1cm4gZnVuY3Rpb24gKHRoYXQsIHBvcykge1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICAgIHZhciBpID0gdG9JbnRlZ2VyKHBvcyk7XG4gICAgdmFyIGwgPSBzLmxlbmd0aDtcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBsKSByZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcbiIsInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuIiwiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG4iLCIvLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjE1IFRvTGVuZ3RoXG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsIi8vIDcuMS4xIFRvUHJpbWl0aXZlKGlucHV0IFssIFByZWZlcnJlZFR5cGVdKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4vLyBpbnN0ZWFkIG9mIHRoZSBFUzYgc3BlYyB2ZXJzaW9uLCB3ZSBkaWRuJ3QgaW1wbGVtZW50IEBAdG9QcmltaXRpdmUgY2FzZVxuLy8gYW5kIHRoZSBzZWNvbmQgYXJndW1lbnQgLSBmbGFnIC0gcHJlZmVycmVkIHR5cGUgaXMgYSBzdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBTKSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZiAoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICghUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcbiIsInZhciBpZCA9IDA7XG52YXIgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7XG59O1xuIiwidmFyIHN0b3JlID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbDtcbnZhciBVU0VfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PSAnZnVuY3Rpb24nO1xuXG52YXIgJGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuIiwidmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29yZScpLmdldEl0ZXJhdG9yTWV0aG9kID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCAhPSB1bmRlZmluZWQpIHJldHVybiBpdFtJVEVSQVRPUl1cbiAgICB8fCBpdFsnQEBpdGVyYXRvciddXG4gICAgfHwgSXRlcmF0b3JzW2NsYXNzb2YoaXQpXTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7IEFycmF5LmZyb20oaXRlcik7IH0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4xIEFycmF5LmZyb20oYXJyYXlMaWtlLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgZnJvbTogZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyogLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZCAqLykge1xuICAgIHZhciBPID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBtYXBmbiA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZDtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBpdGVyRm4gPSBnZXRJdGVyRm4oTyk7XG4gICAgdmFyIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZiAobWFwcGluZykgbWFwZm4gPSBjdHgobWFwZm4sIGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkLCAyKTtcbiAgICAvLyBpZiBvYmplY3QgaXNuJ3QgaXRlcmFibGUgb3IgaXQncyBhcnJheSB3aXRoIGRlZmF1bHQgaXRlcmF0b3IgLSB1c2Ugc2ltcGxlIGNhc2VcbiAgICBpZiAoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhKEMgPT0gQXJyYXkgJiYgaXNBcnJheUl0ZXIoaXRlckZuKSkpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgcmVzdWx0ID0gbmV3IEMoKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBjYWxsKGl0ZXJhdG9yLCBtYXBmbiwgW3N0ZXAudmFsdWUsIGluZGV4XSwgdHJ1ZSkgOiBzdGVwLnZhbHVlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgICAgZm9yIChyZXN1bHQgPSBuZXcgQyhsZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gbWFwZm4oT1tpbmRleF0sIGluZGV4KSA6IE9baW5kZXhdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVzdWx0Lmxlbmd0aCA9IGluZGV4O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBpbmRleCA9IHRoaXMuX2k7XG4gIHZhciBwb2ludDtcbiAgaWYgKGluZGV4ID49IE8ubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuc2VycC1wcmV2aWV3W2RhdGEtdi02NmM0YzVhYl17bWFyZ2luLXRvcDoxNXB4O21hcmdpbi1ib3R0b206MTVweDtib3JkZXItcmFkaXVzOjJweDtib3gtc2hhZG93OjAgMCA1cHggMCByZ2JhKDAsMCwwLDAuMTIpO2JhY2tncm91bmQtY29sb3I6I2ZmZmZmZjtib3JkZXI6c29saWQgMXB4ICNlN2U3ZTc7cGFkZGluZzozMHB4O21heC13aWR0aDo3MDBweH0uc2VycC1wcmV2aWV3IC5zZXJwLWFycm93W2RhdGEtdi02NmM0YzVhYl17Ym9yZGVyLWJvdHRvbS1jb2xvcjojMDA2NjIxO2JvcmRlci1ib3R0b20tc3R5bGU6c29saWQ7Ym9yZGVyLWJvdHRvbS13aWR0aDowcHg7Ym9yZGVyLWxlZnQtY29sb3I6cmdiYSgwLDAsMCwwKTtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItbGVmdC13aWR0aDo0cHg7Ym9yZGVyLXJpZ2h0LWNvbG9yOnJnYmEoMCwwLDAsMCk7Ym9yZGVyLXJpZ2h0LXN0eWxlOnNvbGlkO2JvcmRlci1yaWdodC13aWR0aDo0cHg7Ym9yZGVyLXRvcC1jb2xvcjojMDA2NjIxO2JvcmRlci10b3Atc3R5bGU6c29saWQ7Ym9yZGVyLXRvcC13aWR0aDo1cHg7Y29sb3I6Z3JheTtjdXJzb3I6ZGVmYXVsdDtmb250LWZhbWlseTphcmlhbCwgc2Fucy1zZXJpZjtmb250LXNpemU6MTFweDtmb250LXdlaWdodDpib2xkO2hlaWdodDowcHg7cG9zaXRpb246YWJzb2x1dGU7bGluZS1oZWlnaHQ6MjdweDttYXJnaW4tbGVmdDozcHg7bWFyZ2luLXRvcDo2cHg7dGV4dC1hbGlnbjpjZW50ZXI7dXNlci1zZWxlY3Q6bm9uZTt2aXNpYmlsaXR5OnZpc2libGU7d2hpdGUtc3BhY2U6bm93cmFwO3dpZHRoOjBweH0uc2VycC1wcmV2aWV3IC5zZXJwLXRpdGxlW2RhdGEtdi02NmM0YzVhYl17Y29sb3I6IzFBMERBQjtjdXJzb3I6cG9pbnRlcjtmb250LWZhbWlseTphcmlhbCwgcmVndWxhcjtmb250LXNpemU6MThweDtmb250LXdlaWdodDpub3JtYWw7dGV4dC1hbGlnbjpsZWZ0O3RleHQtZGVjb3JhdGlvbjpub25lO3Zpc2liaWxpdHk6dmlzaWJsZTt3aGl0ZS1zcGFjZTpub3dyYXB9LnNlcnAtcHJldmlldyAuc2VycC11cmxbZGF0YS12LTY2YzRjNWFiXXtjb2xvcjojMDA2NjIxO2ZvbnQtZmFtaWx5OmFyaWFsLCByZWd1bGFyO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtsaW5lLWhlaWdodDoyNHB4O3RleHQtYWxpZ246bGVmdDt2aXNpYmlsaXR5OnZpc2libGV9LnNlcnAtcHJldmlldyAuc2VycC1kZXNjcmlwdGlvbltkYXRhLXYtNjZjNGM1YWJde2NvbG9yOiM1NDU0NTQ7Zm9udC1mYW1pbHk6YXJpYWwsIHJlZ3VsYXI7Zm9udC1zaXplOjEzcHg7Zm9udC13ZWlnaHQ6bm9ybWFsO3RleHQtYWxpZ246bGVmdDt2aXNpYmlsaXR5OnZpc2libGU7d29yZC13cmFwOmJyZWFrLXdvcmR9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vanMvYXBwL3V0aWxzL3NlcnAvc2VycC52dWVcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBNkVBLCtCQUNJLGVBQWdCLENBQ2hCLGtCQUFtQixDQUNuQixpQkFBa0IsQ0FDbEIscUNBQXlDLENBQ3pDLHdCQUF5QixDQUN6Qix3QkFBeUIsQ0FDekIsWUFBYSxDQUNiLGVBQWdCLENBUnBCLDJDQVdRLDJCQUFvQyxDQUNwQyx5QkFBMEIsQ0FDMUIsdUJBQXdCLENBQ3hCLCtCQUFtQyxDQUNuQyx1QkFBd0IsQ0FDeEIscUJBQXNCLENBQ3RCLGdDQUFvQyxDQUNwQyx3QkFBeUIsQ0FDekIsc0JBQXVCLENBQ3ZCLHdCQUFpQyxDQUNqQyxzQkFBdUIsQ0FDdkIsb0JBQXFCLENBQ3JCLFVBQXlCLENBQ3pCLGNBQWUsQ0FDZiw2QkFBOEIsQ0FDOUIsY0FBZSxDQUNmLGdCQUFpQixDQUNqQixVQUFXLENBQ1gsaUJBQWtCLENBQ2xCLGdCQUFpQixDQUNqQixlQUFnQixDQUNoQixjQUFlLENBQ2YsaUJBQWtCLENBQ2xCLGdCQUFpQixDQUNqQixrQkFBbUIsQ0FDbkIsa0JBQW1CLENBQ25CLFNBQVUsQ0FyQ2xCLDJDQXlDUSxhQUFjLENBQ2QsY0FBZSxDQUNmLDBCQUEyQixDQUMzQixjQUFlLENBQ2Ysa0JBQW1CLENBQ25CLGVBQWdCLENBQ2hCLG9CQUFxQixDQUNyQixrQkFBbUIsQ0FDbkIsa0JBQW1CLENBakQzQix5Q0FxRFEsYUFBYyxDQUNkLDBCQUEyQixDQUMzQixjQUFlLENBQ2YsaUJBQWtCLENBQ2xCLGtCQUFtQixDQUNuQixnQkFBaUIsQ0FDakIsZUFBZ0IsQ0FDaEIsa0JBQW1CLENBNUQzQixpREFnRVEsYUFBYyxDQUNkLDBCQUEyQixDQUMzQixjQUFlLENBQ2Ysa0JBQW1CLENBQ25CLGVBQWdCLENBQ2hCLGtCQUFtQixDQUNuQixvQkFBcUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuLnNlcnAtcHJldmlldyB7XFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcXG4gICAgYm94LXNoYWRvdzogMCAwIDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxuICAgIGJvcmRlcjogc29saWQgMXB4ICNlN2U3ZTc7XFxuICAgIHBhZGRpbmc6IDMwcHg7XFxuICAgIG1heC13aWR0aDogNzAwcHg7XFxuXFxuICAgIC5zZXJwLWFycm93IHtcXG4gICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYigwLCAxMDIsIDMzKTtcXG4gICAgICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xcbiAgICAgICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMHB4O1xcbiAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XFxuICAgICAgICBib3JkZXItbGVmdC1zdHlsZTogc29saWQ7XFxuICAgICAgICBib3JkZXItbGVmdC13aWR0aDogNHB4O1xcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xcbiAgICAgICAgYm9yZGVyLXJpZ2h0LXN0eWxlOiBzb2xpZDtcXG4gICAgICAgIGJvcmRlci1yaWdodC13aWR0aDogNHB4O1xcbiAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmdiKDAsIDEwMiwgMzMpO1xcbiAgICAgICAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7XFxuICAgICAgICBib3JkZXItdG9wLXdpZHRoOiA1cHg7XFxuICAgICAgICBjb2xvcjogcmdiKDEyOCwgMTI4LCAxMjgpO1xcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgICAgICAgZm9udC1mYW1pbHk6IGFyaWFsLCBzYW5zLXNlcmlmO1xcbiAgICAgICAgZm9udC1zaXplOiAxMXB4O1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgICAgICBoZWlnaHQ6IDBweDtcXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyN3B4O1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDNweDtcXG4gICAgICAgIG1hcmdpbi10b3A6IDZweDtcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICAgICAgICB3aWR0aDogMHB4O1xcbiAgICB9XFxuXFxuICAgIC5zZXJwLXRpdGxlIHtcXG4gICAgICAgIGNvbG9yOiAjMUEwREFCO1xcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICAgICAgZm9udC1mYW1pbHk6IGFyaWFsLCByZWd1bGFyO1xcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gICAgfVxcblxcbiAgICAuc2VycC11cmwge1xcbiAgICAgICAgY29sb3I6ICMwMDY2MjE7XFxuICAgICAgICBmb250LWZhbWlseTogYXJpYWwsIHJlZ3VsYXI7XFxuICAgICAgICBmb250LXNpemU6IDE0cHg7XFxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XFxuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcXG4gICAgfVxcblxcbiAgICAuc2VycC1kZXNjcmlwdGlvbiB7XFxuICAgICAgICBjb2xvcjogIzU0NTQ1NDtcXG4gICAgICAgIGZvbnQtZmFtaWx5OiBhcmlhbCwgcmVndWxhcjtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcXG4gICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcXG4gICAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFIgPSB0eXBlb2YgUmVmbGVjdCA9PT0gJ29iamVjdCcgPyBSZWZsZWN0IDogbnVsbFxudmFyIFJlZmxlY3RBcHBseSA9IFIgJiYgdHlwZW9mIFIuYXBwbHkgPT09ICdmdW5jdGlvbidcbiAgPyBSLmFwcGx5XG4gIDogZnVuY3Rpb24gUmVmbGVjdEFwcGx5KHRhcmdldCwgcmVjZWl2ZXIsIGFyZ3MpIHtcbiAgICByZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmNhbGwodGFyZ2V0LCByZWNlaXZlciwgYXJncyk7XG4gIH1cblxudmFyIFJlZmxlY3RPd25LZXlzXG5pZiAoUiAmJiB0eXBlb2YgUi5vd25LZXlzID09PSAnZnVuY3Rpb24nKSB7XG4gIFJlZmxlY3RPd25LZXlzID0gUi5vd25LZXlzXG59IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgUmVmbGVjdE93bktleXMgPSBmdW5jdGlvbiBSZWZsZWN0T3duS2V5cyh0YXJnZXQpIHtcbiAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGFyZ2V0KVxuICAgICAgLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkpO1xuICB9O1xufSBlbHNlIHtcbiAgUmVmbGVjdE93bktleXMgPSBmdW5jdGlvbiBSZWZsZWN0T3duS2V5cyh0YXJnZXQpIHtcbiAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGFyZ2V0KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gUHJvY2Vzc0VtaXRXYXJuaW5nKHdhcm5pbmcpIHtcbiAgaWYgKGNvbnNvbGUgJiYgY29uc29sZS53YXJuKSBjb25zb2xlLndhcm4od2FybmluZyk7XG59XG5cbnZhciBOdW1iZXJJc05hTiA9IE51bWJlci5pc05hTiB8fCBmdW5jdGlvbiBOdW1iZXJJc05hTih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IHZhbHVlO1xufVxuXG5mdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gIEV2ZW50RW1pdHRlci5pbml0LmNhbGwodGhpcyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50RW1pdHRlcjtcblxuLy8gQmFja3dhcmRzLWNvbXBhdCB3aXRoIG5vZGUgMC4xMC54XG5FdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHMgPSB1bmRlZmluZWQ7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHNDb3VudCA9IDA7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnMgPSB1bmRlZmluZWQ7XG5cbi8vIEJ5IGRlZmF1bHQgRXZlbnRFbWl0dGVycyB3aWxsIHByaW50IGEgd2FybmluZyBpZiBtb3JlIHRoYW4gMTAgbGlzdGVuZXJzIGFyZVxuLy8gYWRkZWQgdG8gaXQuIFRoaXMgaXMgYSB1c2VmdWwgZGVmYXVsdCB3aGljaCBoZWxwcyBmaW5kaW5nIG1lbW9yeSBsZWFrcy5cbnZhciBkZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7XG5cbmZ1bmN0aW9uIGNoZWNrTGlzdGVuZXIobGlzdGVuZXIpIHtcbiAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uLiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgbGlzdGVuZXIpO1xuICB9XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShFdmVudEVtaXR0ZXIsICdkZWZhdWx0TWF4TGlzdGVuZXJzJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkZWZhdWx0TWF4TGlzdGVuZXJzO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSAnbnVtYmVyJyB8fCBhcmcgPCAwIHx8IE51bWJlcklzTmFOKGFyZykpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgb2YgXCJkZWZhdWx0TWF4TGlzdGVuZXJzXCIgaXMgb3V0IG9mIHJhbmdlLiBJdCBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIG51bWJlci4gUmVjZWl2ZWQgJyArIGFyZyArICcuJyk7XG4gICAgfVxuICAgIGRlZmF1bHRNYXhMaXN0ZW5lcnMgPSBhcmc7XG4gIH1cbn0pO1xuXG5FdmVudEVtaXR0ZXIuaW5pdCA9IGZ1bmN0aW9uKCkge1xuXG4gIGlmICh0aGlzLl9ldmVudHMgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgdGhpcy5fZXZlbnRzID09PSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykuX2V2ZW50cykge1xuICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgdGhpcy5fZXZlbnRzQ291bnQgPSAwO1xuICB9XG5cbiAgdGhpcy5fbWF4TGlzdGVuZXJzID0gdGhpcy5fbWF4TGlzdGVuZXJzIHx8IHVuZGVmaW5lZDtcbn07XG5cbi8vIE9idmlvdXNseSBub3QgYWxsIEVtaXR0ZXJzIHNob3VsZCBiZSBsaW1pdGVkIHRvIDEwLiBUaGlzIGZ1bmN0aW9uIGFsbG93c1xuLy8gdGhhdCB0byBiZSBpbmNyZWFzZWQuIFNldCB0byB6ZXJvIGZvciB1bmxpbWl0ZWQuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uIHNldE1heExpc3RlbmVycyhuKSB7XG4gIGlmICh0eXBlb2YgbiAhPT0gJ251bWJlcicgfHwgbiA8IDAgfHwgTnVtYmVySXNOYU4obikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIG9mIFwiblwiIGlzIG91dCBvZiByYW5nZS4gSXQgbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBudW1iZXIuIFJlY2VpdmVkICcgKyBuICsgJy4nKTtcbiAgfVxuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbmZ1bmN0aW9uIF9nZXRNYXhMaXN0ZW5lcnModGhhdCkge1xuICBpZiAodGhhdC5fbWF4TGlzdGVuZXJzID09PSB1bmRlZmluZWQpXG4gICAgcmV0dXJuIEV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzO1xuICByZXR1cm4gdGhhdC5fbWF4TGlzdGVuZXJzO1xufVxuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmdldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uIGdldE1heExpc3RlbmVycygpIHtcbiAgcmV0dXJuIF9nZXRNYXhMaXN0ZW5lcnModGhpcyk7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiBlbWl0KHR5cGUpIHtcbiAgdmFyIGFyZ3MgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIGFyZ3MucHVzaChhcmd1bWVudHNbaV0pO1xuICB2YXIgZG9FcnJvciA9ICh0eXBlID09PSAnZXJyb3InKTtcblxuICB2YXIgZXZlbnRzID0gdGhpcy5fZXZlbnRzO1xuICBpZiAoZXZlbnRzICE9PSB1bmRlZmluZWQpXG4gICAgZG9FcnJvciA9IChkb0Vycm9yICYmIGV2ZW50cy5lcnJvciA9PT0gdW5kZWZpbmVkKTtcbiAgZWxzZSBpZiAoIWRvRXJyb3IpXG4gICAgcmV0dXJuIGZhbHNlO1xuXG4gIC8vIElmIHRoZXJlIGlzIG5vICdlcnJvcicgZXZlbnQgbGlzdGVuZXIgdGhlbiB0aHJvdy5cbiAgaWYgKGRvRXJyb3IpIHtcbiAgICB2YXIgZXI7XG4gICAgaWYgKGFyZ3MubGVuZ3RoID4gMClcbiAgICAgIGVyID0gYXJnc1swXTtcbiAgICBpZiAoZXIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgLy8gTm90ZTogVGhlIGNvbW1lbnRzIG9uIHRoZSBgdGhyb3dgIGxpbmVzIGFyZSBpbnRlbnRpb25hbCwgdGhleSBzaG93XG4gICAgICAvLyB1cCBpbiBOb2RlJ3Mgb3V0cHV0IGlmIHRoaXMgcmVzdWx0cyBpbiBhbiB1bmhhbmRsZWQgZXhjZXB0aW9uLlxuICAgICAgdGhyb3cgZXI7IC8vIFVuaGFuZGxlZCAnZXJyb3InIGV2ZW50XG4gICAgfVxuICAgIC8vIEF0IGxlYXN0IGdpdmUgc29tZSBraW5kIG9mIGNvbnRleHQgdG8gdGhlIHVzZXJcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdVbmhhbmRsZWQgZXJyb3IuJyArIChlciA/ICcgKCcgKyBlci5tZXNzYWdlICsgJyknIDogJycpKTtcbiAgICBlcnIuY29udGV4dCA9IGVyO1xuICAgIHRocm93IGVycjsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgfVxuXG4gIHZhciBoYW5kbGVyID0gZXZlbnRzW3R5cGVdO1xuXG4gIGlmIChoYW5kbGVyID09PSB1bmRlZmluZWQpXG4gICAgcmV0dXJuIGZhbHNlO1xuXG4gIGlmICh0eXBlb2YgaGFuZGxlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIFJlZmxlY3RBcHBseShoYW5kbGVyLCB0aGlzLCBhcmdzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbGVuID0gaGFuZGxlci5sZW5ndGg7XG4gICAgdmFyIGxpc3RlbmVycyA9IGFycmF5Q2xvbmUoaGFuZGxlciwgbGVuKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKVxuICAgICAgUmVmbGVjdEFwcGx5KGxpc3RlbmVyc1tpXSwgdGhpcywgYXJncyk7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbmZ1bmN0aW9uIF9hZGRMaXN0ZW5lcih0YXJnZXQsIHR5cGUsIGxpc3RlbmVyLCBwcmVwZW5kKSB7XG4gIHZhciBtO1xuICB2YXIgZXZlbnRzO1xuICB2YXIgZXhpc3Rpbmc7XG5cbiAgY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcik7XG5cbiAgZXZlbnRzID0gdGFyZ2V0Ll9ldmVudHM7XG4gIGlmIChldmVudHMgPT09IHVuZGVmaW5lZCkge1xuICAgIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICB0YXJnZXQuX2V2ZW50c0NvdW50ID0gMDtcbiAgfSBlbHNlIHtcbiAgICAvLyBUbyBhdm9pZCByZWN1cnNpb24gaW4gdGhlIGNhc2UgdGhhdCB0eXBlID09PSBcIm5ld0xpc3RlbmVyXCIhIEJlZm9yZVxuICAgIC8vIGFkZGluZyBpdCB0byB0aGUgbGlzdGVuZXJzLCBmaXJzdCBlbWl0IFwibmV3TGlzdGVuZXJcIi5cbiAgICBpZiAoZXZlbnRzLm5ld0xpc3RlbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRhcmdldC5lbWl0KCduZXdMaXN0ZW5lcicsIHR5cGUsXG4gICAgICAgICAgICAgICAgICBsaXN0ZW5lci5saXN0ZW5lciA/IGxpc3RlbmVyLmxpc3RlbmVyIDogbGlzdGVuZXIpO1xuXG4gICAgICAvLyBSZS1hc3NpZ24gYGV2ZW50c2AgYmVjYXVzZSBhIG5ld0xpc3RlbmVyIGhhbmRsZXIgY291bGQgaGF2ZSBjYXVzZWQgdGhlXG4gICAgICAvLyB0aGlzLl9ldmVudHMgdG8gYmUgYXNzaWduZWQgdG8gYSBuZXcgb2JqZWN0XG4gICAgICBldmVudHMgPSB0YXJnZXQuX2V2ZW50cztcbiAgICB9XG4gICAgZXhpc3RpbmcgPSBldmVudHNbdHlwZV07XG4gIH1cblxuICBpZiAoZXhpc3RpbmcgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIE9wdGltaXplIHRoZSBjYXNlIG9mIG9uZSBsaXN0ZW5lci4gRG9uJ3QgbmVlZCB0aGUgZXh0cmEgYXJyYXkgb2JqZWN0LlxuICAgIGV4aXN0aW5nID0gZXZlbnRzW3R5cGVdID0gbGlzdGVuZXI7XG4gICAgKyt0YXJnZXQuX2V2ZW50c0NvdW50O1xuICB9IGVsc2Uge1xuICAgIGlmICh0eXBlb2YgZXhpc3RpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIC8vIEFkZGluZyB0aGUgc2Vjb25kIGVsZW1lbnQsIG5lZWQgdG8gY2hhbmdlIHRvIGFycmF5LlxuICAgICAgZXhpc3RpbmcgPSBldmVudHNbdHlwZV0gPVxuICAgICAgICBwcmVwZW5kID8gW2xpc3RlbmVyLCBleGlzdGluZ10gOiBbZXhpc3RpbmcsIGxpc3RlbmVyXTtcbiAgICAgIC8vIElmIHdlJ3ZlIGFscmVhZHkgZ290IGFuIGFycmF5LCBqdXN0IGFwcGVuZC5cbiAgICB9IGVsc2UgaWYgKHByZXBlbmQpIHtcbiAgICAgIGV4aXN0aW5nLnVuc2hpZnQobGlzdGVuZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBleGlzdGluZy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBmb3IgbGlzdGVuZXIgbGVha1xuICAgIG0gPSBfZ2V0TWF4TGlzdGVuZXJzKHRhcmdldCk7XG4gICAgaWYgKG0gPiAwICYmIGV4aXN0aW5nLmxlbmd0aCA+IG0gJiYgIWV4aXN0aW5nLndhcm5lZCkge1xuICAgICAgZXhpc3Rpbmcud2FybmVkID0gdHJ1ZTtcbiAgICAgIC8vIE5vIGVycm9yIGNvZGUgZm9yIHRoaXMgc2luY2UgaXQgaXMgYSBXYXJuaW5nXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICAgIHZhciB3ID0gbmV3IEVycm9yKCdQb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICBleGlzdGluZy5sZW5ndGggKyAnICcgKyBTdHJpbmcodHlwZSkgKyAnIGxpc3RlbmVycyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2luY3JlYXNlIGxpbWl0Jyk7XG4gICAgICB3Lm5hbWUgPSAnTWF4TGlzdGVuZXJzRXhjZWVkZWRXYXJuaW5nJztcbiAgICAgIHcuZW1pdHRlciA9IHRhcmdldDtcbiAgICAgIHcudHlwZSA9IHR5cGU7XG4gICAgICB3LmNvdW50ID0gZXhpc3RpbmcubGVuZ3RoO1xuICAgICAgUHJvY2Vzc0VtaXRXYXJuaW5nKHcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBmdW5jdGlvbiBhZGRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICByZXR1cm4gX2FkZExpc3RlbmVyKHRoaXMsIHR5cGUsIGxpc3RlbmVyLCBmYWxzZSk7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5wcmVwZW5kTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHByZXBlbmRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIF9hZGRMaXN0ZW5lcih0aGlzLCB0eXBlLCBsaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcblxuZnVuY3Rpb24gb25jZVdyYXBwZXIoKSB7XG4gIGlmICghdGhpcy5maXJlZCkge1xuICAgIHRoaXMudGFyZ2V0LnJlbW92ZUxpc3RlbmVyKHRoaXMudHlwZSwgdGhpcy53cmFwRm4pO1xuICAgIHRoaXMuZmlyZWQgPSB0cnVlO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKVxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuY2FsbCh0aGlzLnRhcmdldCk7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuYXBwbHkodGhpcy50YXJnZXQsIGFyZ3VtZW50cyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gX29uY2VXcmFwKHRhcmdldCwgdHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIHN0YXRlID0geyBmaXJlZDogZmFsc2UsIHdyYXBGbjogdW5kZWZpbmVkLCB0YXJnZXQ6IHRhcmdldCwgdHlwZTogdHlwZSwgbGlzdGVuZXI6IGxpc3RlbmVyIH07XG4gIHZhciB3cmFwcGVkID0gb25jZVdyYXBwZXIuYmluZChzdGF0ZSk7XG4gIHdyYXBwZWQubGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgc3RhdGUud3JhcEZuID0gd3JhcHBlZDtcbiAgcmV0dXJuIHdyYXBwZWQ7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uIG9uY2UodHlwZSwgbGlzdGVuZXIpIHtcbiAgY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIHRoaXMub24odHlwZSwgX29uY2VXcmFwKHRoaXMsIHR5cGUsIGxpc3RlbmVyKSk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5wcmVwZW5kT25jZUxpc3RlbmVyID1cbiAgICBmdW5jdGlvbiBwcmVwZW5kT25jZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICAgIHRoaXMucHJlcGVuZExpc3RlbmVyKHR5cGUsIF9vbmNlV3JhcCh0aGlzLCB0eXBlLCBsaXN0ZW5lcikpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuLy8gRW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmIGFuZCBvbmx5IGlmIHRoZSBsaXN0ZW5lciB3YXMgcmVtb3ZlZC5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbGlzdCwgZXZlbnRzLCBwb3NpdGlvbiwgaSwgb3JpZ2luYWxMaXN0ZW5lcjtcblxuICAgICAgY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcik7XG5cbiAgICAgIGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcbiAgICAgIGlmIChldmVudHMgPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgIGxpc3QgPSBldmVudHNbdHlwZV07XG4gICAgICBpZiAobGlzdCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgaWYgKGxpc3QgPT09IGxpc3RlbmVyIHx8IGxpc3QubGlzdGVuZXIgPT09IGxpc3RlbmVyKSB7XG4gICAgICAgIGlmICgtLXRoaXMuX2V2ZW50c0NvdW50ID09PSAwKVxuICAgICAgICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGRlbGV0ZSBldmVudHNbdHlwZV07XG4gICAgICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgICAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0Lmxpc3RlbmVyIHx8IGxpc3RlbmVyKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbGlzdCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwb3NpdGlvbiA9IC0xO1xuXG4gICAgICAgIGZvciAoaSA9IGxpc3QubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICBpZiAobGlzdFtpXSA9PT0gbGlzdGVuZXIgfHwgbGlzdFtpXS5saXN0ZW5lciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgICAgIG9yaWdpbmFsTGlzdGVuZXIgPSBsaXN0W2ldLmxpc3RlbmVyO1xuICAgICAgICAgICAgcG9zaXRpb24gPSBpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBvc2l0aW9uIDwgMClcbiAgICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgICBpZiAocG9zaXRpb24gPT09IDApXG4gICAgICAgICAgbGlzdC5zaGlmdCgpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBzcGxpY2VPbmUobGlzdCwgcG9zaXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxpc3QubGVuZ3RoID09PSAxKVxuICAgICAgICAgIGV2ZW50c1t0eXBlXSA9IGxpc3RbMF07XG5cbiAgICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lciAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBvcmlnaW5hbExpc3RlbmVyIHx8IGxpc3RlbmVyKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmYgPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9XG4gICAgZnVuY3Rpb24gcmVtb3ZlQWxsTGlzdGVuZXJzKHR5cGUpIHtcbiAgICAgIHZhciBsaXN0ZW5lcnMsIGV2ZW50cywgaTtcblxuICAgICAgZXZlbnRzID0gdGhpcy5fZXZlbnRzO1xuICAgICAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgLy8gbm90IGxpc3RlbmluZyBmb3IgcmVtb3ZlTGlzdGVuZXIsIG5vIG5lZWQgdG8gZW1pdFxuICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gICAgICAgIH0gZWxzZSBpZiAoZXZlbnRzW3R5cGVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAoLS10aGlzLl9ldmVudHNDb3VudCA9PT0gMClcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgZGVsZXRlIGV2ZW50c1t0eXBlXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cblxuICAgICAgLy8gZW1pdCByZW1vdmVMaXN0ZW5lciBmb3IgYWxsIGxpc3RlbmVycyBvbiBhbGwgZXZlbnRzXG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGV2ZW50cyk7XG4gICAgICAgIHZhciBrZXk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICBpZiAoa2V5ID09PSAncmVtb3ZlTGlzdGVuZXInKSBjb250aW51ZTtcbiAgICAgICAgICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhrZXkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCdyZW1vdmVMaXN0ZW5lcicpO1xuICAgICAgICB0aGlzLl9ldmVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICBsaXN0ZW5lcnMgPSBldmVudHNbdHlwZV07XG5cbiAgICAgIGlmICh0eXBlb2YgbGlzdGVuZXJzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzKTtcbiAgICAgIH0gZWxzZSBpZiAobGlzdGVuZXJzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgLy8gTElGTyBvcmRlclxuICAgICAgICBmb3IgKGkgPSBsaXN0ZW5lcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuZnVuY3Rpb24gX2xpc3RlbmVycyh0YXJnZXQsIHR5cGUsIHVud3JhcCkge1xuICB2YXIgZXZlbnRzID0gdGFyZ2V0Ll9ldmVudHM7XG5cbiAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiBbXTtcblxuICB2YXIgZXZsaXN0ZW5lciA9IGV2ZW50c1t0eXBlXTtcbiAgaWYgKGV2bGlzdGVuZXIgPT09IHVuZGVmaW5lZClcbiAgICByZXR1cm4gW107XG5cbiAgaWYgKHR5cGVvZiBldmxpc3RlbmVyID09PSAnZnVuY3Rpb24nKVxuICAgIHJldHVybiB1bndyYXAgPyBbZXZsaXN0ZW5lci5saXN0ZW5lciB8fCBldmxpc3RlbmVyXSA6IFtldmxpc3RlbmVyXTtcblxuICByZXR1cm4gdW53cmFwID9cbiAgICB1bndyYXBMaXN0ZW5lcnMoZXZsaXN0ZW5lcikgOiBhcnJheUNsb25lKGV2bGlzdGVuZXIsIGV2bGlzdGVuZXIubGVuZ3RoKTtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lcnMgPSBmdW5jdGlvbiBsaXN0ZW5lcnModHlwZSkge1xuICByZXR1cm4gX2xpc3RlbmVycyh0aGlzLCB0eXBlLCB0cnVlKTtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmF3TGlzdGVuZXJzID0gZnVuY3Rpb24gcmF3TGlzdGVuZXJzKHR5cGUpIHtcbiAgcmV0dXJuIF9saXN0ZW5lcnModGhpcywgdHlwZSwgZmFsc2UpO1xufTtcblxuRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbihlbWl0dGVyLCB0eXBlKSB7XG4gIGlmICh0eXBlb2YgZW1pdHRlci5saXN0ZW5lckNvdW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJDb3VudCh0eXBlKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbGlzdGVuZXJDb3VudC5jYWxsKGVtaXR0ZXIsIHR5cGUpO1xuICB9XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVyQ291bnQgPSBsaXN0ZW5lckNvdW50O1xuZnVuY3Rpb24gbGlzdGVuZXJDb3VudCh0eXBlKSB7XG4gIHZhciBldmVudHMgPSB0aGlzLl9ldmVudHM7XG5cbiAgaWYgKGV2ZW50cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIGV2bGlzdGVuZXIgPSBldmVudHNbdHlwZV07XG5cbiAgICBpZiAodHlwZW9mIGV2bGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH0gZWxzZSBpZiAoZXZsaXN0ZW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZXZsaXN0ZW5lci5sZW5ndGg7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIDA7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZXZlbnROYW1lcyA9IGZ1bmN0aW9uIGV2ZW50TmFtZXMoKSB7XG4gIHJldHVybiB0aGlzLl9ldmVudHNDb3VudCA+IDAgPyBSZWZsZWN0T3duS2V5cyh0aGlzLl9ldmVudHMpIDogW107XG59O1xuXG5mdW5jdGlvbiBhcnJheUNsb25lKGFyciwgbikge1xuICB2YXIgY29weSA9IG5ldyBBcnJheShuKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpXG4gICAgY29weVtpXSA9IGFycltpXTtcbiAgcmV0dXJuIGNvcHk7XG59XG5cbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKDsgaW5kZXggKyAxIDwgbGlzdC5sZW5ndGg7IGluZGV4KyspXG4gICAgbGlzdFtpbmRleF0gPSBsaXN0W2luZGV4ICsgMV07XG4gIGxpc3QucG9wKCk7XG59XG5cbmZ1bmN0aW9uIHVud3JhcExpc3RlbmVycyhhcnIpIHtcbiAgdmFyIHJldCA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXQubGVuZ3RoOyArK2kpIHtcbiAgICByZXRbaV0gPSBhcnJbaV0ubGlzdGVuZXIgfHwgYXJyW2ldO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG4iLCIvKiEganF1ZXJ5LnRhYmxlZG5kLmpzIDMwLTEyLTIwMTcgKi9cbiFmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cInRvdWNoc3RhcnQgbW91c2Vkb3duXCIsZj1cInRvdWNobW92ZSBtb3VzZW1vdmVcIixnPVwidG91Y2hlbmQgbW91c2V1cFwiO2EoYykucmVhZHkoZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2Zvcih2YXIgYj17fSxjPWEubWF0Y2goLyhbXjs6XSspL2cpfHxbXTtjLmxlbmd0aDspYltjLnNoaWZ0KCldPWMuc2hpZnQoKS50cmltKCk7cmV0dXJuIGJ9YShcInRhYmxlXCIpLmVhY2goZnVuY3Rpb24oKXtcImRuZFwiPT09YSh0aGlzKS5kYXRhKFwidGFibGVcIikmJmEodGhpcykudGFibGVEbkQoe29uRHJhZ1N0eWxlOmEodGhpcykuZGF0YShcIm9uZHJhZ3N0eWxlXCIpJiZiKGEodGhpcykuZGF0YShcIm9uZHJhZ3N0eWxlXCIpKXx8bnVsbCxvbkRyb3BTdHlsZTphKHRoaXMpLmRhdGEoXCJvbmRyb3BzdHlsZVwiKSYmYihhKHRoaXMpLmRhdGEoXCJvbmRyb3BzdHlsZVwiKSl8fG51bGwsb25EcmFnQ2xhc3M6YSh0aGlzKS5kYXRhKFwib25kcmFnY2xhc3NcIik9PT1kJiZcInREbkRfd2hpbGVEcmFnXCJ8fGEodGhpcykuZGF0YShcIm9uZHJhZ2NsYXNzXCIpLG9uRHJvcDphKHRoaXMpLmRhdGEoXCJvbmRyb3BcIikmJm5ldyBGdW5jdGlvbihcInRhYmxlXCIsXCJyb3dcIixhKHRoaXMpLmRhdGEoXCJvbmRyb3BcIikpLG9uRHJhZ1N0YXJ0OmEodGhpcykuZGF0YShcIm9uZHJhZ3N0YXJ0XCIpJiZuZXcgRnVuY3Rpb24oXCJ0YWJsZVwiLFwicm93XCIsYSh0aGlzKS5kYXRhKFwib25kcmFnc3RhcnRcIikpLG9uRHJhZ1N0b3A6YSh0aGlzKS5kYXRhKFwib25kcmFnc3RvcFwiKSYmbmV3IEZ1bmN0aW9uKFwidGFibGVcIixcInJvd1wiLGEodGhpcykuZGF0YShcIm9uZHJhZ3N0b3BcIikpLHNjcm9sbEFtb3VudDphKHRoaXMpLmRhdGEoXCJzY3JvbGxhbW91bnRcIil8fDUsc2Vuc2l0aXZpdHk6YSh0aGlzKS5kYXRhKFwic2Vuc2l0aXZpdHlcIil8fDEwLGhpZXJhcmNoeUxldmVsOmEodGhpcykuZGF0YShcImhpZXJhcmNoeWxldmVsXCIpfHwwLGluZGVudEFydGlmYWN0OmEodGhpcykuZGF0YShcImluZGVudGFydGlmYWN0XCIpfHwnPGRpdiBjbGFzcz1cImluZGVudFwiPiZuYnNwOzwvZGl2PicsYXV0b1dpZHRoQWRqdXN0OmEodGhpcykuZGF0YShcImF1dG93aWR0aGFkanVzdFwiKXx8ITAsYXV0b0NsZWFuUmVsYXRpb25zOmEodGhpcykuZGF0YShcImF1dG9jbGVhbnJlbGF0aW9uc1wiKXx8ITAsanNvblByZXRpZnlTZXBhcmF0b3I6YSh0aGlzKS5kYXRhKFwianNvbnByZXRpZnlzZXBhcmF0b3JcIil8fFwiXFx0XCIsc2VyaWFsaXplUmVnZXhwOmEodGhpcykuZGF0YShcInNlcmlhbGl6ZXJlZ2V4cFwiKSYmbmV3IFJlZ0V4cChhKHRoaXMpLmRhdGEoXCJzZXJpYWxpemVyZWdleHBcIikpfHwvW15cXC1dKiQvLHNlcmlhbGl6ZVBhcmFtTmFtZTphKHRoaXMpLmRhdGEoXCJzZXJpYWxpemVwYXJhbW5hbWVcIil8fCExLGRyYWdIYW5kbGU6YSh0aGlzKS5kYXRhKFwiZHJhZ2hhbmRsZVwiKXx8bnVsbH0pfSl9KSxqUXVlcnkudGFibGVEbkQ9e2N1cnJlbnRUYWJsZTpudWxsLGRyYWdPYmplY3Q6bnVsbCxtb3VzZU9mZnNldDpudWxsLG9sZFg6MCxvbGRZOjAsYnVpbGQ6ZnVuY3Rpb24oYil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3RoaXMudGFibGVEbkRDb25maWc9YS5leHRlbmQoe29uRHJhZ1N0eWxlOm51bGwsb25Ecm9wU3R5bGU6bnVsbCxvbkRyYWdDbGFzczpcInREbkRfd2hpbGVEcmFnXCIsb25Ecm9wOm51bGwsb25EcmFnU3RhcnQ6bnVsbCxvbkRyYWdTdG9wOm51bGwsc2Nyb2xsQW1vdW50OjUsc2Vuc2l0aXZpdHk6MTAsaGllcmFyY2h5TGV2ZWw6MCxpbmRlbnRBcnRpZmFjdDonPGRpdiBjbGFzcz1cImluZGVudFwiPiZuYnNwOzwvZGl2PicsYXV0b1dpZHRoQWRqdXN0OiEwLGF1dG9DbGVhblJlbGF0aW9uczohMCxqc29uUHJldGlmeVNlcGFyYXRvcjpcIlxcdFwiLHNlcmlhbGl6ZVJlZ2V4cDovW15cXC1dKiQvLHNlcmlhbGl6ZVBhcmFtTmFtZTohMSxkcmFnSGFuZGxlOm51bGx9LGJ8fHt9KSxhLnRhYmxlRG5ELm1ha2VEcmFnZ2FibGUodGhpcyksdGhpcy50YWJsZURuRENvbmZpZy5oaWVyYXJjaHlMZXZlbCYmYS50YWJsZURuRC5tYWtlSW5kZW50ZWQodGhpcyl9KSx0aGlzfSxtYWtlSW5kZW50ZWQ6ZnVuY3Rpb24oYil7dmFyIGMsZCxlPWIudGFibGVEbkRDb25maWcsZj1iLnJvd3MsZz1hKGYpLmZpcnN0KCkuZmluZChcInRkOmZpcnN0XCIpWzBdLGg9MCxpPTA7aWYoYShiKS5oYXNDbGFzcyhcImluZHRkXCIpKXJldHVybiBudWxsO2Q9YShiKS5hZGRDbGFzcyhcImluZHRkXCIpLmF0dHIoXCJzdHlsZVwiKSxhKGIpLmNzcyh7d2hpdGVTcGFjZTpcIm5vd3JhcFwifSk7Zm9yKHZhciBqPTA7ajxmLmxlbmd0aDtqKyspaTxhKGZbal0pLmZpbmQoXCJ0ZDpmaXJzdFwiKS50ZXh0KCkubGVuZ3RoJiYoaT1hKGZbal0pLmZpbmQoXCJ0ZDpmaXJzdFwiKS50ZXh0KCkubGVuZ3RoLGM9aik7Zm9yKGEoZykuY3NzKHt3aWR0aDpcImF1dG9cIn0pLGo9MDtqPGUuaGllcmFyY2h5TGV2ZWw7aisrKWEoZltjXSkuZmluZChcInRkOmZpcnN0XCIpLnByZXBlbmQoZS5pbmRlbnRBcnRpZmFjdCk7Zm9yKGcmJmEoZykuY3NzKHt3aWR0aDpnLm9mZnNldFdpZHRofSksZCYmYShiKS5jc3MoZCksaj0wO2o8ZS5oaWVyYXJjaHlMZXZlbDtqKyspYShmW2NdKS5maW5kKFwidGQ6Zmlyc3RcIikuY2hpbGRyZW4oXCI6Zmlyc3RcIikucmVtb3ZlKCk7cmV0dXJuIGUuaGllcmFyY2h5TGV2ZWwmJmEoZikuZWFjaChmdW5jdGlvbigpeyhoPWEodGhpcykuZGF0YShcImxldmVsXCIpfHwwKTw9ZS5oaWVyYXJjaHlMZXZlbCYmYSh0aGlzKS5kYXRhKFwibGV2ZWxcIixoKXx8YSh0aGlzKS5kYXRhKFwibGV2ZWxcIiwwKTtmb3IodmFyIGI9MDtiPGEodGhpcykuZGF0YShcImxldmVsXCIpO2IrKylhKHRoaXMpLmZpbmQoXCJ0ZDpmaXJzdFwiKS5wcmVwZW5kKGUuaW5kZW50QXJ0aWZhY3QpfSksdGhpc30sbWFrZURyYWdnYWJsZTpmdW5jdGlvbihiKXt2YXIgYz1iLnRhYmxlRG5EQ29uZmlnO2MuZHJhZ0hhbmRsZSYmYShjLmRyYWdIYW5kbGUsYikuZWFjaChmdW5jdGlvbigpe2EodGhpcykuYmluZChlLGZ1bmN0aW9uKGQpe3JldHVybiBhLnRhYmxlRG5ELmluaXRpYWxpc2VEcmFnKGEodGhpcykucGFyZW50cyhcInRyXCIpWzBdLGIsdGhpcyxkLGMpLCExfSl9KXx8YShiLnJvd3MpLmVhY2goZnVuY3Rpb24oKXthKHRoaXMpLmhhc0NsYXNzKFwibm9kcmFnXCIpP2EodGhpcykuY3NzKFwiY3Vyc29yXCIsXCJcIik6YSh0aGlzKS5iaW5kKGUsZnVuY3Rpb24oZCl7aWYoXCJURFwiPT09ZC50YXJnZXQudGFnTmFtZSlyZXR1cm4gYS50YWJsZURuRC5pbml0aWFsaXNlRHJhZyh0aGlzLGIsdGhpcyxkLGMpLCExfSkuY3NzKFwiY3Vyc29yXCIsXCJtb3ZlXCIpfSl9LGN1cnJlbnRPcmRlcjpmdW5jdGlvbigpe3ZhciBiPXRoaXMuY3VycmVudFRhYmxlLnJvd3M7cmV0dXJuIGEubWFwKGIsZnVuY3Rpb24oYil7cmV0dXJuKGEoYikuZGF0YShcImxldmVsXCIpK2IuaWQpLnJlcGxhY2UoL1xccy9nLFwiXCIpfSkuam9pbihcIlwiKX0saW5pdGlhbGlzZURyYWc6ZnVuY3Rpb24oYixkLGUsaCxpKXt0aGlzLmRyYWdPYmplY3Q9Yix0aGlzLmN1cnJlbnRUYWJsZT1kLHRoaXMubW91c2VPZmZzZXQ9dGhpcy5nZXRNb3VzZU9mZnNldChlLGgpLHRoaXMub3JpZ2luYWxPcmRlcj10aGlzLmN1cnJlbnRPcmRlcigpLGEoYykuYmluZChmLHRoaXMubW91c2Vtb3ZlKS5iaW5kKGcsdGhpcy5tb3VzZXVwKSxpLm9uRHJhZ1N0YXJ0JiZpLm9uRHJhZ1N0YXJ0KGQsZSl9LHVwZGF0ZVRhYmxlczpmdW5jdGlvbigpe3RoaXMuZWFjaChmdW5jdGlvbigpe3RoaXMudGFibGVEbkRDb25maWcmJmEudGFibGVEbkQubWFrZURyYWdnYWJsZSh0aGlzKX0pfSxtb3VzZUNvb3JkczpmdW5jdGlvbihhKXtyZXR1cm4gYS5vcmlnaW5hbEV2ZW50LmNoYW5nZWRUb3VjaGVzP3t4OmEub3JpZ2luYWxFdmVudC5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYLHk6YS5vcmlnaW5hbEV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFl9OmEucGFnZVh8fGEucGFnZVk/e3g6YS5wYWdlWCx5OmEucGFnZVl9Ont4OmEuY2xpZW50WCtjLmJvZHkuc2Nyb2xsTGVmdC1jLmJvZHkuY2xpZW50TGVmdCx5OmEuY2xpZW50WStjLmJvZHkuc2Nyb2xsVG9wLWMuYm9keS5jbGllbnRUb3B9fSxnZXRNb3VzZU9mZnNldDpmdW5jdGlvbihhLGMpe3ZhciBkLGU7cmV0dXJuIGM9Y3x8Yi5ldmVudCxlPXRoaXMuZ2V0UG9zaXRpb24oYSksZD10aGlzLm1vdXNlQ29vcmRzKGMpLHt4OmQueC1lLngseTpkLnktZS55fX0sZ2V0UG9zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9MCxjPTA7Zm9yKDA9PT1hLm9mZnNldEhlaWdodCYmKGE9YS5maXJzdENoaWxkKTthLm9mZnNldFBhcmVudDspYis9YS5vZmZzZXRMZWZ0LGMrPWEub2Zmc2V0VG9wLGE9YS5vZmZzZXRQYXJlbnQ7cmV0dXJuIGIrPWEub2Zmc2V0TGVmdCxjKz1hLm9mZnNldFRvcCx7eDpiLHk6Y319LGF1dG9TY3JvbGw6ZnVuY3Rpb24oYSl7dmFyIGQ9dGhpcy5jdXJyZW50VGFibGUudGFibGVEbkRDb25maWcsZT1iLnBhZ2VZT2Zmc2V0LGY9Yi5pbm5lckhlaWdodD9iLmlubmVySGVpZ2h0OmMuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodD9jLmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ6Yy5ib2R5LmNsaWVudEhlaWdodDtjLmFsbCYmKHZvaWQgMCE9PWMuY29tcGF0TW9kZSYmXCJCYWNrQ29tcGF0XCIhPT1jLmNvbXBhdE1vZGU/ZT1jLmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A6dm9pZCAwIT09Yy5ib2R5JiYoZT1jLmJvZHkuc2Nyb2xsVG9wKSksYS55LWU8ZC5zY3JvbGxBbW91bnQmJmIuc2Nyb2xsQnkoMCwtZC5zY3JvbGxBbW91bnQpfHxmLShhLnktZSk8ZC5zY3JvbGxBbW91bnQmJmIuc2Nyb2xsQnkoMCxkLnNjcm9sbEFtb3VudCl9LG1vdmVWZXJ0aWNsZTpmdW5jdGlvbihhLGIpezAhPT1hLnZlcnRpY2FsJiZiJiZ0aGlzLmRyYWdPYmplY3QhPT1iJiZ0aGlzLmRyYWdPYmplY3QucGFyZW50Tm9kZT09PWIucGFyZW50Tm9kZSYmKDA+YS52ZXJ0aWNhbCYmdGhpcy5kcmFnT2JqZWN0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuZHJhZ09iamVjdCxiLm5leHRTaWJsaW5nKXx8MDxhLnZlcnRpY2FsJiZ0aGlzLmRyYWdPYmplY3QucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5kcmFnT2JqZWN0LGIpKX0sbW92ZUhvcml6b250YWw6ZnVuY3Rpb24oYixjKXt2YXIgZCxlPXRoaXMuY3VycmVudFRhYmxlLnRhYmxlRG5EQ29uZmlnO2lmKCFlLmhpZXJhcmNoeUxldmVsfHwwPT09Yi5ob3Jpem9udGFsfHwhY3x8dGhpcy5kcmFnT2JqZWN0IT09YylyZXR1cm4gbnVsbDtkPWEoYykuZGF0YShcImxldmVsXCIpLDA8Yi5ob3Jpem9udGFsJiZkPjAmJmEoYykuZmluZChcInRkOmZpcnN0XCIpLmNoaWxkcmVuKFwiOmZpcnN0XCIpLnJlbW92ZSgpJiZhKGMpLmRhdGEoXCJsZXZlbFwiLC0tZCksMD5iLmhvcml6b250YWwmJmQ8ZS5oaWVyYXJjaHlMZXZlbCYmYShjKS5wcmV2KCkuZGF0YShcImxldmVsXCIpPj1kJiZhKGMpLmNoaWxkcmVuKFwiOmZpcnN0XCIpLnByZXBlbmQoZS5pbmRlbnRBcnRpZmFjdCkmJmEoYykuZGF0YShcImxldmVsXCIsKytkKX0sbW91c2Vtb3ZlOmZ1bmN0aW9uKGIpe3ZhciBjLGQsZSxmLGcsaD1hKGEudGFibGVEbkQuZHJhZ09iamVjdCksaT1hLnRhYmxlRG5ELmN1cnJlbnRUYWJsZS50YWJsZURuRENvbmZpZztyZXR1cm4gYiYmYi5wcmV2ZW50RGVmYXVsdCgpLCEhYS50YWJsZURuRC5kcmFnT2JqZWN0JiYoXCJ0b3VjaG1vdmVcIj09PWIudHlwZSYmZXZlbnQucHJldmVudERlZmF1bHQoKSxpLm9uRHJhZ0NsYXNzJiZoLmFkZENsYXNzKGkub25EcmFnQ2xhc3MpfHxoLmNzcyhpLm9uRHJhZ1N0eWxlKSxkPWEudGFibGVEbkQubW91c2VDb29yZHMoYiksZj1kLngtYS50YWJsZURuRC5tb3VzZU9mZnNldC54LGc9ZC55LWEudGFibGVEbkQubW91c2VPZmZzZXQueSxhLnRhYmxlRG5ELmF1dG9TY3JvbGwoZCksYz1hLnRhYmxlRG5ELmZpbmREcm9wVGFyZ2V0Um93KGgsZyksZT1hLnRhYmxlRG5ELmZpbmREcmFnRGlyZWN0aW9uKGYsZyksYS50YWJsZURuRC5tb3ZlVmVydGljbGUoZSxjKSxhLnRhYmxlRG5ELm1vdmVIb3Jpem9udGFsKGUsYyksITEpfSxmaW5kRHJhZ0RpcmVjdGlvbjpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuY3VycmVudFRhYmxlLnRhYmxlRG5EQ29uZmlnLnNlbnNpdGl2aXR5LGQ9dGhpcy5vbGRYLGU9dGhpcy5vbGRZLGY9ZC1jLGc9ZCtjLGg9ZS1jLGk9ZStjLGo9e2hvcml6b250YWw6YT49ZiYmYTw9Zz8wOmE+ZD8tMToxLHZlcnRpY2FsOmI+PWgmJmI8PWk/MDpiPmU/LTE6MX07cmV0dXJuIDAhPT1qLmhvcml6b250YWwmJih0aGlzLm9sZFg9YSksMCE9PWoudmVydGljYWwmJih0aGlzLm9sZFk9Yiksan0sZmluZERyb3BUYXJnZXRSb3c6ZnVuY3Rpb24oYixjKXtmb3IodmFyIGQ9MCxlPXRoaXMuY3VycmVudFRhYmxlLnJvd3MsZj10aGlzLmN1cnJlbnRUYWJsZS50YWJsZURuRENvbmZpZyxnPTAsaD1udWxsLGk9MDtpPGUubGVuZ3RoO2krKylpZihoPWVbaV0sZz10aGlzLmdldFBvc2l0aW9uKGgpLnksZD1wYXJzZUludChoLm9mZnNldEhlaWdodCkvMiwwPT09aC5vZmZzZXRIZWlnaHQmJihnPXRoaXMuZ2V0UG9zaXRpb24oaC5maXJzdENoaWxkKS55LGQ9cGFyc2VJbnQoaC5maXJzdENoaWxkLm9mZnNldEhlaWdodCkvMiksYz5nLWQmJmM8ZytkKXJldHVybiBiLmlzKGgpfHxmLm9uQWxsb3dEcm9wJiYhZi5vbkFsbG93RHJvcChiLGgpfHxhKGgpLmhhc0NsYXNzKFwibm9kcm9wXCIpP251bGw6aDtyZXR1cm4gbnVsbH0scHJvY2Vzc01vdXNldXA6ZnVuY3Rpb24oKXtpZighdGhpcy5jdXJyZW50VGFibGV8fCF0aGlzLmRyYWdPYmplY3QpcmV0dXJuIG51bGw7dmFyIGI9dGhpcy5jdXJyZW50VGFibGUudGFibGVEbkRDb25maWcsZD10aGlzLmRyYWdPYmplY3QsZT0wLGg9MDthKGMpLnVuYmluZChmLHRoaXMubW91c2Vtb3ZlKS51bmJpbmQoZyx0aGlzLm1vdXNldXApLGIuaGllcmFyY2h5TGV2ZWwmJmIuYXV0b0NsZWFuUmVsYXRpb25zJiZhKHRoaXMuY3VycmVudFRhYmxlLnJvd3MpLmZpcnN0KCkuZmluZChcInRkOmZpcnN0XCIpLmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbigpeyhoPWEodGhpcykucGFyZW50cyhcInRyOmZpcnN0XCIpLmRhdGEoXCJsZXZlbFwiKSkmJmEodGhpcykucGFyZW50cyhcInRyOmZpcnN0XCIpLmRhdGEoXCJsZXZlbFwiLC0taCkmJmEodGhpcykucmVtb3ZlKCl9KSYmYi5oaWVyYXJjaHlMZXZlbD4xJiZhKHRoaXMuY3VycmVudFRhYmxlLnJvd3MpLmVhY2goZnVuY3Rpb24oKXtpZigoaD1hKHRoaXMpLmRhdGEoXCJsZXZlbFwiKSk+MSlmb3IoZT1hKHRoaXMpLnByZXYoKS5kYXRhKFwibGV2ZWxcIik7aD5lKzE7KWEodGhpcykuZmluZChcInRkOmZpcnN0XCIpLmNoaWxkcmVuKFwiOmZpcnN0XCIpLnJlbW92ZSgpLGEodGhpcykuZGF0YShcImxldmVsXCIsLS1oKX0pLGIub25EcmFnQ2xhc3MmJmEoZCkucmVtb3ZlQ2xhc3MoYi5vbkRyYWdDbGFzcyl8fGEoZCkuY3NzKGIub25Ecm9wU3R5bGUpLHRoaXMuZHJhZ09iamVjdD1udWxsLGIub25Ecm9wJiZ0aGlzLm9yaWdpbmFsT3JkZXIhPT10aGlzLmN1cnJlbnRPcmRlcigpJiZhKGQpLmhpZGUoKS5mYWRlSW4oXCJmYXN0XCIpJiZiLm9uRHJvcCh0aGlzLmN1cnJlbnRUYWJsZSxkKSxiLm9uRHJhZ1N0b3AmJmIub25EcmFnU3RvcCh0aGlzLmN1cnJlbnRUYWJsZSxkKSx0aGlzLmN1cnJlbnRUYWJsZT1udWxsfSxtb3VzZXVwOmZ1bmN0aW9uKGIpe3JldHVybiBiJiZiLnByZXZlbnREZWZhdWx0KCksYS50YWJsZURuRC5wcm9jZXNzTW91c2V1cCgpLCExfSxqc29uaXplOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuY3VycmVudFRhYmxlO3JldHVybiBhP0pTT04uc3RyaW5naWZ5KHRoaXMudGFibGVEYXRhKGIpLG51bGwsYi50YWJsZURuRENvbmZpZy5qc29uUHJldGlmeVNlcGFyYXRvcik6SlNPTi5zdHJpbmdpZnkodGhpcy50YWJsZURhdGEoYikpfSxzZXJpYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gYS5wYXJhbSh0aGlzLnRhYmxlRGF0YSh0aGlzLmN1cnJlbnRUYWJsZSkpfSxzZXJpYWxpemVUYWJsZTpmdW5jdGlvbihhKXtmb3IodmFyIGI9XCJcIixjPWEudGFibGVEbkRDb25maWcuc2VyaWFsaXplUGFyYW1OYW1lfHxhLmlkLGQ9YS5yb3dzLGU9MDtlPGQubGVuZ3RoO2UrKyl7Yi5sZW5ndGg+MCYmKGIrPVwiJlwiKTt2YXIgZj1kW2VdLmlkO2YmJmEudGFibGVEbkRDb25maWcmJmEudGFibGVEbkRDb25maWcuc2VyaWFsaXplUmVnZXhwJiYoZj1mLm1hdGNoKGEudGFibGVEbkRDb25maWcuc2VyaWFsaXplUmVnZXhwKVswXSxiKz1jK1wiW109XCIrZil9cmV0dXJuIGJ9LHNlcmlhbGl6ZVRhYmxlczpmdW5jdGlvbigpe3ZhciBiPVtdO3JldHVybiBhKFwidGFibGVcIikuZWFjaChmdW5jdGlvbigpe3RoaXMuaWQmJmIucHVzaChhLnBhcmFtKGEudGFibGVEbkQudGFibGVEYXRhKHRoaXMpKSl9KSxiLmpvaW4oXCImXCIpfSx0YWJsZURhdGE6ZnVuY3Rpb24oYil7dmFyIGMsZCxlLGYsZz1iLnRhYmxlRG5EQ29uZmlnLGg9W10saT0wLGo9MCxrPW51bGwsbD17fTtpZihifHwoYj10aGlzLmN1cnJlbnRUYWJsZSksIWJ8fCFiLnJvd3N8fCFiLnJvd3MubGVuZ3RoKXJldHVybntlcnJvcjp7Y29kZTo1MDAsbWVzc2FnZTpcIk5vdCBhIHZhbGlkIHRhYmxlLlwifX07aWYoIWIuaWQmJiFnLnNlcmlhbGl6ZVBhcmFtTmFtZSlyZXR1cm57ZXJyb3I6e2NvZGU6NTAwLG1lc3NhZ2U6XCJObyBzZXJpYWxpemFibGUgdW5pcXVlIGlkIHByb3ZpZGVkLlwifX07Zj1nLmF1dG9DbGVhblJlbGF0aW9ucyYmYi5yb3dzfHxhLm1ha2VBcnJheShiLnJvd3MpLGQ9Zy5zZXJpYWxpemVQYXJhbU5hbWV8fGIuaWQsZT1kLGM9ZnVuY3Rpb24oYSl7cmV0dXJuIGEmJmcmJmcuc2VyaWFsaXplUmVnZXhwP2EubWF0Y2goZy5zZXJpYWxpemVSZWdleHApWzBdOmF9LGxbZV09W10sIWcuYXV0b0NsZWFuUmVsYXRpb25zJiZhKGZbMF0pLmRhdGEoXCJsZXZlbFwiKSYmZi51bnNoaWZ0KHtpZDpcInVuZGVmaW5lZFwifSk7Zm9yKHZhciBtPTA7bTxmLmxlbmd0aDttKyspaWYoZy5oaWVyYXJjaHlMZXZlbCl7aWYoMD09PShqPWEoZlttXSkuZGF0YShcImxldmVsXCIpfHwwKSllPWQsaD1bXTtlbHNlIGlmKGo+aSloLnB1c2goW2UsaV0pLGU9YyhmW20tMV0uaWQpO2Vsc2UgaWYoajxpKWZvcih2YXIgbj0wO248aC5sZW5ndGg7bisrKWhbbl1bMV09PT1qJiYoZT1oW25dWzBdKSxoW25dWzFdPj1pJiYoaFtuXVsxXT0wKTtpPWosYS5pc0FycmF5KGxbZV0pfHwobFtlXT1bXSksaz1jKGZbbV0uaWQpLGsmJmxbZV0ucHVzaChrKX1lbHNlKGs9YyhmW21dLmlkKSkmJmxbZV0ucHVzaChrKTtyZXR1cm4gbH19LGpRdWVyeS5mbi5leHRlbmQoe3RhYmxlRG5EOmEudGFibGVEbkQuYnVpbGQsdGFibGVEbkRVcGRhdGU6YS50YWJsZURuRC51cGRhdGVUYWJsZXMsdGFibGVEbkRTZXJpYWxpemU6YS5wcm94eShhLnRhYmxlRG5ELnNlcmlhbGl6ZSxhLnRhYmxlRG5EKSx0YWJsZURuRFNlcmlhbGl6ZUFsbDphLnRhYmxlRG5ELnNlcmlhbGl6ZVRhYmxlcyx0YWJsZURuRERhdGE6YS5wcm94eShhLnRhYmxlRG5ELnRhYmxlRGF0YSxhLnRhYmxlRG5EKX0pfShqUXVlcnksd2luZG93LHdpbmRvdy5kb2N1bWVudCk7IiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcImRpdlwiLCB7IGF0dHJzOiB7IGlkOiBcInNlcnBcIiB9IH0sIFtcbiAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInNlcnAtcHJldmlld1wiIH0sIFtcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwic2VycC10aXRsZVwiIH0sIFtcbiAgICAgICAgX3ZtLl92KFwiXFxuICAgICAgXCIgKyBfdm0uX3MoX3ZtLmRpc3BsYXllZFRpdGxlKSArIFwiXFxuICAgIFwiKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJzZXJwLXVybFwiIH0sIFtcbiAgICAgICAgX3ZtLl92KFwiXFxuICAgICAgXCIgKyBfdm0uX3MoX3ZtLnVybCkpLFxuICAgICAgICBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJzZXJwLWFycm93XCIgfSlcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwic2VycC1kZXNjcmlwdGlvblwiIH0sIFtcbiAgICAgICAgX3ZtLl92KFwiXFxuICAgICAgXCIgKyBfdm0uX3MoX3ZtLmRpc3BsYXllZERlc2NyaXB0aW9uKSArIFwiXFxuICAgIFwiKVxuICAgICAgXSlcbiAgICBdKVxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P2Nsb25lZFJ1bGVTZXQtMVswXS5ydWxlc1swXS51c2VbMF0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9zZXJwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0xWzBdLnJ1bGVzWzBdLnVzZVswXSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3NlcnAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9zZXJwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NmM0YzVhYiZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9zZXJwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vc2VycC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vc2VycC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02NmM0YzVhYiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjY2YzRjNWFiXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxcd2FtcDY0XFxcXHd3d1xcXFxpanplcnNob3AtMTc2LVVwZ3JhZGVcXFxcYWRtaW4tZGV2XFxcXHRoZW1lc1xcXFxuZXctdGhlbWVcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNjZjNGM1YWInKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNjZjNGM1YWInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNjZjNGM1YWInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3NlcnAudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY2YzRjNWFiJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzY2YzRjNWFiJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJqcy9hcHAvdXRpbHMvc2VycC9zZXJwLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyBJTVBPUlRBTlQ6IERvIE5PVCB1c2UgRVMyMDE1IGZlYXR1cmVzIGluIHRoaXMgZmlsZSAoZXhjZXB0IGZvciBtb2R1bGVzKS5cbi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsXG4vLyBiZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgd2VicGFjayB1c2VyIGJ1bmRsZS5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgc2NyaXB0RXhwb3J0cyxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZ1bmN0aW9uYWxUZW1wbGF0ZSxcbiAgaW5qZWN0U3R5bGVzLFxuICBzY29wZUlkLFxuICBtb2R1bGVJZGVudGlmaWVyLCAvKiBzZXJ2ZXIgb25seSAqL1xuICBzaGFkb3dNb2RlIC8qIHZ1ZS1jbGkgb25seSAqL1xuKSB7XG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAocmVuZGVyKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSByZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IHN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gJ2RhdGEtdi0nICsgc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBzaGFkb3dNb2RlXG4gICAgICA/IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwoXG4gICAgICAgICAgdGhpcyxcbiAgICAgICAgICAob3B0aW9ucy5mdW5jdGlvbmFsID8gdGhpcy5wYXJlbnQgOiB0aGlzKS4kcm9vdC4kb3B0aW9ucy5zaGFkb3dSb290XG4gICAgICAgIClcbiAgICAgIH1cbiAgICAgIDogaW5qZWN0U3R5bGVzXG4gIH1cblxuICBpZiAoaG9vaykge1xuICAgIGlmIChvcHRpb25zLmZ1bmN0aW9uYWwpIHtcbiAgICAgIC8vIGZvciB0ZW1wbGF0ZS1vbmx5IGhvdC1yZWxvYWQgYmVjYXVzZSBpbiB0aGF0IGNhc2UgdGhlIHJlbmRlciBmbiBkb2Vzbid0XG4gICAgICAvLyBnbyB0aHJvdWdoIHRoZSBub3JtYWxpemVyXG4gICAgICBvcHRpb25zLl9pbmplY3RTdHlsZXMgPSBob29rXG4gICAgICAvLyByZWdpc3RlciBmb3IgZnVuY3Rpb25hbCBjb21wb25lbnQgaW4gdnVlIGZpbGVcbiAgICAgIHZhciBvcmlnaW5hbFJlbmRlciA9IG9wdGlvbnMucmVuZGVyXG4gICAgICBvcHRpb25zLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbiAoaCwgY29udGV4dCkge1xuICAgICAgICBob29rLmNhbGwoY29udGV4dClcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsUmVuZGVyKGgsIGNvbnRleHQpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgcmVnaXN0cmF0aW9uIGFzIGJlZm9yZUNyZWF0ZSBob29rXG4gICAgICB2YXIgZXhpc3RpbmcgPSBvcHRpb25zLmJlZm9yZUNyZWF0ZVxuICAgICAgb3B0aW9ucy5iZWZvcmVDcmVhdGUgPSBleGlzdGluZ1xuICAgICAgICA/IFtdLmNvbmNhdChleGlzdGluZywgaG9vaylcbiAgICAgICAgOiBbaG9va11cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGV4cG9ydHM6IHNjcmlwdEV4cG9ydHMsXG4gICAgb3B0aW9uczogb3B0aW9uc1xuICB9XG59XG4iLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3NlcnAudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NjZjNGM1YWImbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKGNvbnRlbnQuX19lc01vZHVsZSkgY29udGVudCA9IGNvbnRlbnQuZGVmYXVsdDtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCIyYzgzZDRkYlwiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3NlcnAudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NjZjNGM1YWImbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vc2VycC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02NmM0YzVhYiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuICAgICBpZihuZXdDb250ZW50Ll9fZXNNb2R1bGUpIG5ld0NvbnRlbnQgPSBuZXdDb250ZW50LmRlZmF1bHQ7XG4gICAgIGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuICAgICB1cGRhdGUobmV3Q29udGVudCk7XG4gICB9KTtcbiB9XG4gLy8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsIi8qKlxuICogVHJhbnNsYXRlcyB0aGUgbGlzdCBmb3JtYXQgcHJvZHVjZWQgYnkgY3NzLWxvYWRlciBpbnRvIHNvbWV0aGluZ1xuICogZWFzaWVyIHRvIG1hbmlwdWxhdGUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAocGFyZW50SWQsIGxpc3QpIHtcbiAgdmFyIHN0eWxlcyA9IFtdXG4gIHZhciBuZXdTdHlsZXMgPSB7fVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV1cbiAgICB2YXIgaWQgPSBpdGVtWzBdXG4gICAgdmFyIGNzcyA9IGl0ZW1bMV1cbiAgICB2YXIgbWVkaWEgPSBpdGVtWzJdXG4gICAgdmFyIHNvdXJjZU1hcCA9IGl0ZW1bM11cbiAgICB2YXIgcGFydCA9IHtcbiAgICAgIGlkOiBwYXJlbnRJZCArICc6JyArIGksXG4gICAgICBjc3M6IGNzcyxcbiAgICAgIG1lZGlhOiBtZWRpYSxcbiAgICAgIHNvdXJjZU1hcDogc291cmNlTWFwXG4gICAgfVxuICAgIGlmICghbmV3U3R5bGVzW2lkXSkge1xuICAgICAgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHsgaWQ6IGlkLCBwYXJ0czogW3BhcnRdIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KVxuICAgIH1cbiAgfVxuICByZXR1cm4gc3R5bGVzXG59XG4iLCIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4gIE1vZGlmaWVkIGJ5IEV2YW4gWW91IEB5eXg5OTA4MDNcbiovXG5cbmltcG9ydCBsaXN0VG9TdHlsZXMgZnJvbSAnLi9saXN0VG9TdHlsZXMnXG5cbnZhciBoYXNEb2N1bWVudCA9IHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCdcblxuaWYgKHR5cGVvZiBERUJVRyAhPT0gJ3VuZGVmaW5lZCcgJiYgREVCVUcpIHtcbiAgaWYgKCFoYXNEb2N1bWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAndnVlLXN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50LiAnICtcbiAgICBcIlVzZSB7IHRhcmdldDogJ25vZGUnIH0gaW4geW91ciBXZWJwYWNrIGNvbmZpZyB0byBpbmRpY2F0ZSBhIHNlcnZlci1yZW5kZXJpbmcgZW52aXJvbm1lbnQuXCJcbiAgKSB9XG59XG5cbi8qXG50eXBlIFN0eWxlT2JqZWN0ID0ge1xuICBpZDogbnVtYmVyO1xuICBwYXJ0czogQXJyYXk8U3R5bGVPYmplY3RQYXJ0PlxufVxuXG50eXBlIFN0eWxlT2JqZWN0UGFydCA9IHtcbiAgY3NzOiBzdHJpbmc7XG4gIG1lZGlhOiBzdHJpbmc7XG4gIHNvdXJjZU1hcDogP3N0cmluZ1xufVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0gey8qXG4gIFtpZDogbnVtYmVyXToge1xuICAgIGlkOiBudW1iZXIsXG4gICAgcmVmczogbnVtYmVyLFxuICAgIHBhcnRzOiBBcnJheTwob2JqPzogU3R5bGVPYmplY3RQYXJ0KSA9PiB2b2lkPlxuICB9XG4qL31cblxudmFyIGhlYWQgPSBoYXNEb2N1bWVudCAmJiAoZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdKVxudmFyIHNpbmdsZXRvbkVsZW1lbnQgPSBudWxsXG52YXIgc2luZ2xldG9uQ291bnRlciA9IDBcbnZhciBpc1Byb2R1Y3Rpb24gPSBmYWxzZVxudmFyIG5vb3AgPSBmdW5jdGlvbiAoKSB7fVxudmFyIG9wdGlvbnMgPSBudWxsXG52YXIgc3NySWRLZXkgPSAnZGF0YS12dWUtc3NyLWlkJ1xuXG4vLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbi8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcbnZhciBpc09sZElFID0gdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgL21zaWUgWzYtOV1cXGIvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhZGRTdHlsZXNDbGllbnQgKHBhcmVudElkLCBsaXN0LCBfaXNQcm9kdWN0aW9uLCBfb3B0aW9ucykge1xuICBpc1Byb2R1Y3Rpb24gPSBfaXNQcm9kdWN0aW9uXG5cbiAgb3B0aW9ucyA9IF9vcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhwYXJlbnRJZCwgbGlzdClcbiAgYWRkU3R5bGVzVG9Eb20oc3R5bGVzKVxuXG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcbiAgICB2YXIgbWF5UmVtb3ZlID0gW11cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGl0ZW0gPSBzdHlsZXNbaV1cbiAgICAgIHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdXG4gICAgICBkb21TdHlsZS5yZWZzLS1cbiAgICAgIG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKVxuICAgIH1cbiAgICBpZiAobmV3TGlzdCkge1xuICAgICAgc3R5bGVzID0gbGlzdFRvU3R5bGVzKHBhcmVudElkLCBuZXdMaXN0KVxuICAgICAgYWRkU3R5bGVzVG9Eb20oc3R5bGVzKVxuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXMgPSBbXVxuICAgIH1cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldXG4gICAgICBpZiAoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgZG9tU3R5bGUucGFydHNbal0oKVxuICAgICAgICB9XG4gICAgICAgIGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcyAvKiBBcnJheTxTdHlsZU9iamVjdD4gKi8pIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IHN0eWxlc1tpXVxuICAgIHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdXG4gICAgaWYgKGRvbVN0eWxlKSB7XG4gICAgICBkb21TdHlsZS5yZWZzKytcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSlcbiAgICAgIH1cbiAgICAgIGZvciAoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuICAgICAgICBkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0pKVxuICAgICAgfVxuICAgICAgaWYgKGRvbVN0eWxlLnBhcnRzLmxlbmd0aCA+IGl0ZW0ucGFydHMubGVuZ3RoKSB7XG4gICAgICAgIGRvbVN0eWxlLnBhcnRzLmxlbmd0aCA9IGl0ZW0ucGFydHMubGVuZ3RoXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwYXJ0cyA9IFtdXG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgcGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdKSlcbiAgICAgIH1cbiAgICAgIHN0eWxlc0luRG9tW2l0ZW0uaWRdID0geyBpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50ICgpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJylcbiAgc3R5bGVFbGVtZW50LnR5cGUgPSAndGV4dC9jc3MnXG4gIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVFbGVtZW50KVxuICByZXR1cm4gc3R5bGVFbGVtZW50XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmogLyogU3R5bGVPYmplY3RQYXJ0ICovKSB7XG4gIHZhciB1cGRhdGUsIHJlbW92ZVxuICB2YXIgc3R5bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc3R5bGVbJyArIHNzcklkS2V5ICsgJ349XCInICsgb2JqLmlkICsgJ1wiXScpXG5cbiAgaWYgKHN0eWxlRWxlbWVudCkge1xuICAgIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICAgIC8vIGhhcyBTU1Igc3R5bGVzIGFuZCBpbiBwcm9kdWN0aW9uIG1vZGUuXG4gICAgICAvLyBzaW1wbHkgZG8gbm90aGluZy5cbiAgICAgIHJldHVybiBub29wXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGhhcyBTU1Igc3R5bGVzIGJ1dCBpbiBkZXYgbW9kZS5cbiAgICAgIC8vIGZvciBzb21lIHJlYXNvbiBDaHJvbWUgY2FuJ3QgaGFuZGxlIHNvdXJjZSBtYXAgaW4gc2VydmVyLXJlbmRlcmVkXG4gICAgICAvLyBzdHlsZSB0YWdzIC0gc291cmNlIG1hcHMgaW4gPHN0eWxlPiBvbmx5IHdvcmtzIGlmIHRoZSBzdHlsZSB0YWcgaXNcbiAgICAgIC8vIGNyZWF0ZWQgYW5kIGluc2VydGVkIGR5bmFtaWNhbGx5LiBTbyB3ZSByZW1vdmUgdGhlIHNlcnZlciByZW5kZXJlZFxuICAgICAgLy8gc3R5bGVzIGFuZCBpbmplY3QgbmV3IG9uZXMuXG4gICAgICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpXG4gICAgfVxuICB9XG5cbiAgaWYgKGlzT2xkSUUpIHtcbiAgICAvLyB1c2Ugc2luZ2xldG9uIG1vZGUgZm9yIElFOS5cbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrK1xuICAgIHN0eWxlRWxlbWVudCA9IHNpbmdsZXRvbkVsZW1lbnQgfHwgKHNpbmdsZXRvbkVsZW1lbnQgPSBjcmVhdGVTdHlsZUVsZW1lbnQoKSlcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGVFbGVtZW50LCBzdHlsZUluZGV4LCBmYWxzZSlcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGVFbGVtZW50LCBzdHlsZUluZGV4LCB0cnVlKVxuICB9IGVsc2Uge1xuICAgIC8vIHVzZSBtdWx0aS1zdHlsZS10YWcgbW9kZSBpbiBhbGwgb3RoZXIgY2FzZXNcbiAgICBzdHlsZUVsZW1lbnQgPSBjcmVhdGVTdHlsZUVsZW1lbnQoKVxuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZUVsZW1lbnQpXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KVxuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZShvYmopXG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmogLyogU3R5bGVPYmplY3RQYXJ0ICovKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcbiAgICAgICAgICBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJlxuICAgICAgICAgIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKVxuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKVxuICAgIH1cbiAgfVxufVxuXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xuICB2YXIgdGV4dFN0b3JlID0gW11cblxuICByZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudFxuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpXG4gIH1cbn0pKClcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGVFbGVtZW50LCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLmNzc1xuXG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKVxuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKVxuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGVFbGVtZW50LmNoaWxkTm9kZXNcbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSlcbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pXG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChjc3NOb2RlKVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZUVsZW1lbnQsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzc1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWFcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXBcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKVxuICB9XG4gIGlmIChvcHRpb25zLnNzcklkKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShzc3JJZEtleSwgb2JqLmlkKVxuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCkge1xuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLmNocm9tZS5jb20vZGV2dG9vbHMvZG9jcy9qYXZhc2NyaXB0LWRlYnVnZ2luZ1xuICAgIC8vIHRoaXMgbWFrZXMgc291cmNlIG1hcHMgaW5zaWRlIHN0eWxlIHRhZ3Mgd29yayBwcm9wZXJseSBpbiBDaHJvbWVcbiAgICBjc3MgKz0gJ1xcbi8qIyBzb3VyY2VVUkw9JyArIHNvdXJjZU1hcC5zb3VyY2VzWzBdICsgJyAqLydcbiAgICAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxuICAgIGNzcyArPSAnXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCwnICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArICcgKi8nXG4gIH1cblxuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzXG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpXG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKVxuICB9XG59XG4iLCJpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vdnVlLmNvbW1vbi5wcm9kLmpzJylcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi92dWUuY29tbW9uLmRldi5qcycpXG59XG4iLCIvKiFcbiAqIFZ1ZS5qcyB2Mi42LjEyXG4gKiAoYykgMjAxNC0yMDIwIEV2YW4gWW91XG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cblwidXNlIHN0cmljdFwiO3ZhciBlPU9iamVjdC5mcmVlemUoe30pO2Z1bmN0aW9uIHQoZSl7cmV0dXJuIG51bGw9PWV9ZnVuY3Rpb24gbihlKXtyZXR1cm4gbnVsbCE9ZX1mdW5jdGlvbiByKGUpe3JldHVybiEwPT09ZX1mdW5jdGlvbiBpKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlfHxcIm51bWJlclwiPT10eXBlb2YgZXx8XCJzeW1ib2xcIj09dHlwZW9mIGV8fFwiYm9vbGVhblwiPT10eXBlb2YgZX1mdW5jdGlvbiBvKGUpe3JldHVybiBudWxsIT09ZSYmXCJvYmplY3RcIj09dHlwZW9mIGV9dmFyIGE9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztmdW5jdGlvbiBzKGUpe3JldHVyblwiW29iamVjdCBPYmplY3RdXCI9PT1hLmNhbGwoZSl9ZnVuY3Rpb24gYyhlKXt2YXIgdD1wYXJzZUZsb2F0KFN0cmluZyhlKSk7cmV0dXJuIHQ+PTAmJk1hdGguZmxvb3IodCk9PT10JiZpc0Zpbml0ZShlKX1mdW5jdGlvbiB1KGUpe3JldHVybiBuKGUpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnRoZW4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuY2F0Y2h9ZnVuY3Rpb24gbChlKXtyZXR1cm4gbnVsbD09ZT9cIlwiOkFycmF5LmlzQXJyYXkoZSl8fHMoZSkmJmUudG9TdHJpbmc9PT1hP0pTT04uc3RyaW5naWZ5KGUsbnVsbCwyKTpTdHJpbmcoZSl9ZnVuY3Rpb24gZihlKXt2YXIgdD1wYXJzZUZsb2F0KGUpO3JldHVybiBpc05hTih0KT9lOnR9ZnVuY3Rpb24gcChlLHQpe2Zvcih2YXIgbj1PYmplY3QuY3JlYXRlKG51bGwpLHI9ZS5zcGxpdChcIixcIiksaT0wO2k8ci5sZW5ndGg7aSsrKW5bcltpXV09ITA7cmV0dXJuIHQ/ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZS50b0xvd2VyQ2FzZSgpXX06ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV19fXZhciBkPXAoXCJzbG90LGNvbXBvbmVudFwiLCEwKSx2PXAoXCJrZXkscmVmLHNsb3Qsc2xvdC1zY29wZSxpc1wiKTtmdW5jdGlvbiBoKGUsdCl7aWYoZS5sZW5ndGgpe3ZhciBuPWUuaW5kZXhPZih0KTtpZihuPi0xKXJldHVybiBlLnNwbGljZShuLDEpfX12YXIgbT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2Z1bmN0aW9uIHkoZSx0KXtyZXR1cm4gbS5jYWxsKGUsdCl9ZnVuY3Rpb24gZyhlKXt2YXIgdD1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdFtuXXx8KHRbbl09ZShuKSl9fXZhciBfPS8tKFxcdykvZyxiPWcoZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZShfLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQ/dC50b1VwcGVyQ2FzZSgpOlwiXCJ9KX0pLCQ9ZyhmdW5jdGlvbihlKXtyZXR1cm4gZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStlLnNsaWNlKDEpfSksdz0vXFxCKFtBLVpdKS9nLEM9ZyhmdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKHcsXCItJDFcIikudG9Mb3dlckNhc2UoKX0pO3ZhciB4PUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kP2Z1bmN0aW9uKGUsdCl7cmV0dXJuIGUuYmluZCh0KX06ZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBuKG4pe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg7cmV0dXJuIHI/cj4xP2UuYXBwbHkodCxhcmd1bWVudHMpOmUuY2FsbCh0LG4pOmUuY2FsbCh0KX1yZXR1cm4gbi5fbGVuZ3RoPWUubGVuZ3RoLG59O2Z1bmN0aW9uIGsoZSx0KXt0PXR8fDA7Zm9yKHZhciBuPWUubGVuZ3RoLXQscj1uZXcgQXJyYXkobik7bi0tOylyW25dPWVbbit0XTtyZXR1cm4gcn1mdW5jdGlvbiBBKGUsdCl7Zm9yKHZhciBuIGluIHQpZVtuXT10W25dO3JldHVybiBlfWZ1bmN0aW9uIE8oZSl7Zm9yKHZhciB0PXt9LG49MDtuPGUubGVuZ3RoO24rKyllW25dJiZBKHQsZVtuXSk7cmV0dXJuIHR9ZnVuY3Rpb24gUyhlLHQsbil7fXZhciBUPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4hMX0sRT1mdW5jdGlvbihlKXtyZXR1cm4gZX07ZnVuY3Rpb24gTihlLHQpe2lmKGU9PT10KXJldHVybiEwO3ZhciBuPW8oZSkscj1vKHQpO2lmKCFufHwhcilyZXR1cm4hbiYmIXImJlN0cmluZyhlKT09PVN0cmluZyh0KTt0cnl7dmFyIGk9QXJyYXkuaXNBcnJheShlKSxhPUFycmF5LmlzQXJyYXkodCk7aWYoaSYmYSlyZXR1cm4gZS5sZW5ndGg9PT10Lmxlbmd0aCYmZS5ldmVyeShmdW5jdGlvbihlLG4pe3JldHVybiBOKGUsdFtuXSl9KTtpZihlIGluc3RhbmNlb2YgRGF0ZSYmdCBpbnN0YW5jZW9mIERhdGUpcmV0dXJuIGUuZ2V0VGltZSgpPT09dC5nZXRUaW1lKCk7aWYoaXx8YSlyZXR1cm4hMTt2YXIgcz1PYmplY3Qua2V5cyhlKSxjPU9iamVjdC5rZXlzKHQpO3JldHVybiBzLmxlbmd0aD09PWMubGVuZ3RoJiZzLmV2ZXJ5KGZ1bmN0aW9uKG4pe3JldHVybiBOKGVbbl0sdFtuXSl9KX1jYXRjaChlKXtyZXR1cm4hMX19ZnVuY3Rpb24gaihlLHQpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKWlmKE4oZVtuXSx0KSlyZXR1cm4gbjtyZXR1cm4tMX1mdW5jdGlvbiBEKGUpe3ZhciB0PSExO3JldHVybiBmdW5jdGlvbigpe3R8fCh0PSEwLGUuYXBwbHkodGhpcyxhcmd1bWVudHMpKX19dmFyIEw9XCJkYXRhLXNlcnZlci1yZW5kZXJlZFwiLE09W1wiY29tcG9uZW50XCIsXCJkaXJlY3RpdmVcIixcImZpbHRlclwiXSxJPVtcImJlZm9yZUNyZWF0ZVwiLFwiY3JlYXRlZFwiLFwiYmVmb3JlTW91bnRcIixcIm1vdW50ZWRcIixcImJlZm9yZVVwZGF0ZVwiLFwidXBkYXRlZFwiLFwiYmVmb3JlRGVzdHJveVwiLFwiZGVzdHJveWVkXCIsXCJhY3RpdmF0ZWRcIixcImRlYWN0aXZhdGVkXCIsXCJlcnJvckNhcHR1cmVkXCIsXCJzZXJ2ZXJQcmVmZXRjaFwiXSxGPXtvcHRpb25NZXJnZVN0cmF0ZWdpZXM6T2JqZWN0LmNyZWF0ZShudWxsKSxzaWxlbnQ6ITEscHJvZHVjdGlvblRpcDohMSxkZXZ0b29sczohMSxwZXJmb3JtYW5jZTohMSxlcnJvckhhbmRsZXI6bnVsbCx3YXJuSGFuZGxlcjpudWxsLGlnbm9yZWRFbGVtZW50czpbXSxrZXlDb2RlczpPYmplY3QuY3JlYXRlKG51bGwpLGlzUmVzZXJ2ZWRUYWc6VCxpc1Jlc2VydmVkQXR0cjpULGlzVW5rbm93bkVsZW1lbnQ6VCxnZXRUYWdOYW1lc3BhY2U6UyxwYXJzZVBsYXRmb3JtVGFnTmFtZTpFLG11c3RVc2VQcm9wOlQsYXN5bmM6ITAsX2xpZmVjeWNsZUhvb2tzOkl9LFA9L2EtekEtWlxcdTAwQjdcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDNGLVxcdTIwNDBcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkQvO2Z1bmN0aW9uIFIoZSx0LG4scil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6bixlbnVtZXJhYmxlOiEhcix3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9KX12YXIgSD1uZXcgUmVnRXhwKFwiW15cIitQLnNvdXJjZStcIi4kX1xcXFxkXVwiKTt2YXIgQixVPVwiX19wcm90b19fXCJpbnt9LHo9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyxWPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBXWEVudmlyb25tZW50JiYhIVdYRW52aXJvbm1lbnQucGxhdGZvcm0sSz1WJiZXWEVudmlyb25tZW50LnBsYXRmb3JtLnRvTG93ZXJDYXNlKCksSj16JiZ3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLHE9SiYmL21zaWV8dHJpZGVudC8udGVzdChKKSxXPUomJkouaW5kZXhPZihcIm1zaWUgOS4wXCIpPjAsWj1KJiZKLmluZGV4T2YoXCJlZGdlL1wiKT4wLEc9KEomJkouaW5kZXhPZihcImFuZHJvaWRcIiksSiYmL2lwaG9uZXxpcGFkfGlwb2R8aW9zLy50ZXN0KEopfHxcImlvc1wiPT09SyksWD0oSiYmL2Nocm9tZVxcL1xcZCsvLnRlc3QoSiksSiYmL3BoYW50b21qcy8udGVzdChKKSxKJiZKLm1hdGNoKC9maXJlZm94XFwvKFxcZCspLykpLFk9e30ud2F0Y2gsUT0hMTtpZih6KXRyeXt2YXIgZWU9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KGVlLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtRPSEwfX0pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdC1wYXNzaXZlXCIsbnVsbCxlZSl9Y2F0Y2goZSl7fXZhciB0ZT1mdW5jdGlvbigpe3JldHVybiB2b2lkIDA9PT1CJiYoQj0heiYmIVYmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWwmJihnbG9iYWwucHJvY2VzcyYmXCJzZXJ2ZXJcIj09PWdsb2JhbC5wcm9jZXNzLmVudi5WVUVfRU5WKSksQn0sbmU9eiYmd2luZG93Ll9fVlVFX0RFVlRPT0xTX0dMT0JBTF9IT09LX187ZnVuY3Rpb24gcmUoZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmL25hdGl2ZSBjb2RlLy50ZXN0KGUudG9TdHJpbmcoKSl9dmFyIGllLG9lPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJnJlKFN5bWJvbCkmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBSZWZsZWN0JiZyZShSZWZsZWN0Lm93bktleXMpO2llPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTZXQmJnJlKFNldCk/U2V0OmZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3RoaXMuc2V0PU9iamVjdC5jcmVhdGUobnVsbCl9cmV0dXJuIGUucHJvdG90eXBlLmhhcz1mdW5jdGlvbihlKXtyZXR1cm4hMD09PXRoaXMuc2V0W2VdfSxlLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSl7dGhpcy5zZXRbZV09ITB9LGUucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5zZXQ9T2JqZWN0LmNyZWF0ZShudWxsKX0sZX0oKTt2YXIgYWU9UyxzZT0wLGNlPWZ1bmN0aW9uKCl7dGhpcy5pZD1zZSsrLHRoaXMuc3Vicz1bXX07Y2UucHJvdG90eXBlLmFkZFN1Yj1mdW5jdGlvbihlKXt0aGlzLnN1YnMucHVzaChlKX0sY2UucHJvdG90eXBlLnJlbW92ZVN1Yj1mdW5jdGlvbihlKXtoKHRoaXMuc3VicyxlKX0sY2UucHJvdG90eXBlLmRlcGVuZD1mdW5jdGlvbigpe2NlLnRhcmdldCYmY2UudGFyZ2V0LmFkZERlcCh0aGlzKX0sY2UucHJvdG90eXBlLm5vdGlmeT1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLnN1YnMuc2xpY2UoKSx0PTAsbj1lLmxlbmd0aDt0PG47dCsrKWVbdF0udXBkYXRlKCl9LGNlLnRhcmdldD1udWxsO3ZhciB1ZT1bXTtmdW5jdGlvbiBsZShlKXt1ZS5wdXNoKGUpLGNlLnRhcmdldD1lfWZ1bmN0aW9uIGZlKCl7dWUucG9wKCksY2UudGFyZ2V0PXVlW3VlLmxlbmd0aC0xXX12YXIgcGU9ZnVuY3Rpb24oZSx0LG4scixpLG8sYSxzKXt0aGlzLnRhZz1lLHRoaXMuZGF0YT10LHRoaXMuY2hpbGRyZW49bix0aGlzLnRleHQ9cix0aGlzLmVsbT1pLHRoaXMubnM9dm9pZCAwLHRoaXMuY29udGV4dD1vLHRoaXMuZm5Db250ZXh0PXZvaWQgMCx0aGlzLmZuT3B0aW9ucz12b2lkIDAsdGhpcy5mblNjb3BlSWQ9dm9pZCAwLHRoaXMua2V5PXQmJnQua2V5LHRoaXMuY29tcG9uZW50T3B0aW9ucz1hLHRoaXMuY29tcG9uZW50SW5zdGFuY2U9dm9pZCAwLHRoaXMucGFyZW50PXZvaWQgMCx0aGlzLnJhdz0hMSx0aGlzLmlzU3RhdGljPSExLHRoaXMuaXNSb290SW5zZXJ0PSEwLHRoaXMuaXNDb21tZW50PSExLHRoaXMuaXNDbG9uZWQ9ITEsdGhpcy5pc09uY2U9ITEsdGhpcy5hc3luY0ZhY3Rvcnk9cyx0aGlzLmFzeW5jTWV0YT12b2lkIDAsdGhpcy5pc0FzeW5jUGxhY2Vob2xkZXI9ITF9LGRlPXtjaGlsZDp7Y29uZmlndXJhYmxlOiEwfX07ZGUuY2hpbGQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29tcG9uZW50SW5zdGFuY2V9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHBlLnByb3RvdHlwZSxkZSk7dmFyIHZlPWZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPVwiXCIpO3ZhciB0PW5ldyBwZTtyZXR1cm4gdC50ZXh0PWUsdC5pc0NvbW1lbnQ9ITAsdH07ZnVuY3Rpb24gaGUoZSl7cmV0dXJuIG5ldyBwZSh2b2lkIDAsdm9pZCAwLHZvaWQgMCxTdHJpbmcoZSkpfWZ1bmN0aW9uIG1lKGUpe3ZhciB0PW5ldyBwZShlLnRhZyxlLmRhdGEsZS5jaGlsZHJlbiYmZS5jaGlsZHJlbi5zbGljZSgpLGUudGV4dCxlLmVsbSxlLmNvbnRleHQsZS5jb21wb25lbnRPcHRpb25zLGUuYXN5bmNGYWN0b3J5KTtyZXR1cm4gdC5ucz1lLm5zLHQuaXNTdGF0aWM9ZS5pc1N0YXRpYyx0LmtleT1lLmtleSx0LmlzQ29tbWVudD1lLmlzQ29tbWVudCx0LmZuQ29udGV4dD1lLmZuQ29udGV4dCx0LmZuT3B0aW9ucz1lLmZuT3B0aW9ucyx0LmZuU2NvcGVJZD1lLmZuU2NvcGVJZCx0LmFzeW5jTWV0YT1lLmFzeW5jTWV0YSx0LmlzQ2xvbmVkPSEwLHR9dmFyIHllPUFycmF5LnByb3RvdHlwZSxnZT1PYmplY3QuY3JlYXRlKHllKTtbXCJwdXNoXCIsXCJwb3BcIixcInNoaWZ0XCIsXCJ1bnNoaWZ0XCIsXCJzcGxpY2VcIixcInNvcnRcIixcInJldmVyc2VcIl0uZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD15ZVtlXTtSKGdlLGUsZnVuY3Rpb24oKXtmb3IodmFyIG49W10scj1hcmd1bWVudHMubGVuZ3RoO3ItLTspbltyXT1hcmd1bWVudHNbcl07dmFyIGksbz10LmFwcGx5KHRoaXMsbiksYT10aGlzLl9fb2JfXztzd2l0Y2goZSl7Y2FzZVwicHVzaFwiOmNhc2VcInVuc2hpZnRcIjppPW47YnJlYWs7Y2FzZVwic3BsaWNlXCI6aT1uLnNsaWNlKDIpfXJldHVybiBpJiZhLm9ic2VydmVBcnJheShpKSxhLmRlcC5ub3RpZnkoKSxvfSl9KTt2YXIgX2U9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZ2UpLGJlPSEwO2Z1bmN0aW9uICRlKGUpe2JlPWV9dmFyIHdlPWZ1bmN0aW9uKGUpe3ZhciB0O3RoaXMudmFsdWU9ZSx0aGlzLmRlcD1uZXcgY2UsdGhpcy52bUNvdW50PTAsUihlLFwiX19vYl9fXCIsdGhpcyksQXJyYXkuaXNBcnJheShlKT8oVT8odD1nZSxlLl9fcHJvdG9fXz10KTpmdW5jdGlvbihlLHQsbil7Zm9yKHZhciByPTAsaT1uLmxlbmd0aDtyPGk7cisrKXt2YXIgbz1uW3JdO1IoZSxvLHRbb10pfX0oZSxnZSxfZSksdGhpcy5vYnNlcnZlQXJyYXkoZSkpOnRoaXMud2FsayhlKX07ZnVuY3Rpb24gQ2UoZSx0KXt2YXIgbjtpZihvKGUpJiYhKGUgaW5zdGFuY2VvZiBwZSkpcmV0dXJuIHkoZSxcIl9fb2JfX1wiKSYmZS5fX29iX18gaW5zdGFuY2VvZiB3ZT9uPWUuX19vYl9fOmJlJiYhdGUoKSYmKEFycmF5LmlzQXJyYXkoZSl8fHMoZSkpJiZPYmplY3QuaXNFeHRlbnNpYmxlKGUpJiYhZS5faXNWdWUmJihuPW5ldyB3ZShlKSksdCYmbiYmbi52bUNvdW50Kyssbn1mdW5jdGlvbiB4ZShlLHQsbixyLGkpe3ZhciBvPW5ldyBjZSxhPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KTtpZighYXx8ITEhPT1hLmNvbmZpZ3VyYWJsZSl7dmFyIHM9YSYmYS5nZXQsYz1hJiZhLnNldDtzJiYhY3x8MiE9PWFyZ3VtZW50cy5sZW5ndGh8fChuPWVbdF0pO3ZhciB1PSFpJiZDZShuKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXt2YXIgdD1zP3MuY2FsbChlKTpuO3JldHVybiBjZS50YXJnZXQmJihvLmRlcGVuZCgpLHUmJih1LmRlcC5kZXBlbmQoKSxBcnJheS5pc0FycmF5KHQpJiZmdW5jdGlvbiBlKHQpe2Zvcih2YXIgbj12b2lkIDAscj0wLGk9dC5sZW5ndGg7cjxpO3IrKykobj10W3JdKSYmbi5fX29iX18mJm4uX19vYl9fLmRlcC5kZXBlbmQoKSxBcnJheS5pc0FycmF5KG4pJiZlKG4pfSh0KSkpLHR9LHNldDpmdW5jdGlvbih0KXt2YXIgcj1zP3MuY2FsbChlKTpuO3Q9PT1yfHx0IT10JiZyIT1yfHxzJiYhY3x8KGM/Yy5jYWxsKGUsdCk6bj10LHU9IWkmJkNlKHQpLG8ubm90aWZ5KCkpfX0pfX1mdW5jdGlvbiBrZShlLHQsbil7aWYoQXJyYXkuaXNBcnJheShlKSYmYyh0KSlyZXR1cm4gZS5sZW5ndGg9TWF0aC5tYXgoZS5sZW5ndGgsdCksZS5zcGxpY2UodCwxLG4pLG47aWYodCBpbiBlJiYhKHQgaW4gT2JqZWN0LnByb3RvdHlwZSkpcmV0dXJuIGVbdF09bixuO3ZhciByPWUuX19vYl9fO3JldHVybiBlLl9pc1Z1ZXx8ciYmci52bUNvdW50P246cj8oeGUoci52YWx1ZSx0LG4pLHIuZGVwLm5vdGlmeSgpLG4pOihlW3RdPW4sbil9ZnVuY3Rpb24gQWUoZSx0KXtpZihBcnJheS5pc0FycmF5KGUpJiZjKHQpKWUuc3BsaWNlKHQsMSk7ZWxzZXt2YXIgbj1lLl9fb2JfXztlLl9pc1Z1ZXx8biYmbi52bUNvdW50fHx5KGUsdCkmJihkZWxldGUgZVt0XSxuJiZuLmRlcC5ub3RpZnkoKSl9fXdlLnByb3RvdHlwZS53YWxrPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1PYmplY3Qua2V5cyhlKSxuPTA7bjx0Lmxlbmd0aDtuKyspeGUoZSx0W25dKX0sd2UucHJvdG90eXBlLm9ic2VydmVBcnJheT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MCxuPWUubGVuZ3RoO3Q8bjt0KyspQ2UoZVt0XSl9O3ZhciBPZT1GLm9wdGlvbk1lcmdlU3RyYXRlZ2llcztmdW5jdGlvbiBTZShlLHQpe2lmKCF0KXJldHVybiBlO2Zvcih2YXIgbixyLGksbz1vZT9SZWZsZWN0Lm93bktleXModCk6T2JqZWN0LmtleXModCksYT0wO2E8by5sZW5ndGg7YSsrKVwiX19vYl9fXCIhPT0obj1vW2FdKSYmKHI9ZVtuXSxpPXRbbl0seShlLG4pP3IhPT1pJiZzKHIpJiZzKGkpJiZTZShyLGkpOmtlKGUsbixpKSk7cmV0dXJuIGV9ZnVuY3Rpb24gVGUoZSx0LG4pe3JldHVybiBuP2Z1bmN0aW9uKCl7dmFyIHI9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90LmNhbGwobixuKTp0LGk9XCJmdW5jdGlvblwiPT10eXBlb2YgZT9lLmNhbGwobixuKTplO3JldHVybiByP1NlKHIsaSk6aX06dD9lP2Z1bmN0aW9uKCl7cmV0dXJuIFNlKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dC5jYWxsKHRoaXMsdGhpcyk6dCxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UuY2FsbCh0aGlzLHRoaXMpOmUpfTp0OmV9ZnVuY3Rpb24gRWUoZSx0KXt2YXIgbj10P2U/ZS5jb25jYXQodCk6QXJyYXkuaXNBcnJheSh0KT90Olt0XTplO3JldHVybiBuP2Z1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxuPTA7bjxlLmxlbmd0aDtuKyspLTE9PT10LmluZGV4T2YoZVtuXSkmJnQucHVzaChlW25dKTtyZXR1cm4gdH0obik6bn1mdW5jdGlvbiBOZShlLHQsbixyKXt2YXIgaT1PYmplY3QuY3JlYXRlKGV8fG51bGwpO3JldHVybiB0P0EoaSx0KTppfU9lLmRhdGE9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBuP1RlKGUsdCxuKTp0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6VGUoZSx0KX0sSS5mb3JFYWNoKGZ1bmN0aW9uKGUpe09lW2VdPUVlfSksTS5mb3JFYWNoKGZ1bmN0aW9uKGUpe09lW2UrXCJzXCJdPU5lfSksT2Uud2F0Y2g9ZnVuY3Rpb24oZSx0LG4scil7aWYoZT09PVkmJihlPXZvaWQgMCksdD09PVkmJih0PXZvaWQgMCksIXQpcmV0dXJuIE9iamVjdC5jcmVhdGUoZXx8bnVsbCk7aWYoIWUpcmV0dXJuIHQ7dmFyIGk9e307Zm9yKHZhciBvIGluIEEoaSxlKSx0KXt2YXIgYT1pW29dLHM9dFtvXTthJiYhQXJyYXkuaXNBcnJheShhKSYmKGE9W2FdKSxpW29dPWE/YS5jb25jYXQocyk6QXJyYXkuaXNBcnJheShzKT9zOltzXX1yZXR1cm4gaX0sT2UucHJvcHM9T2UubWV0aG9kcz1PZS5pbmplY3Q9T2UuY29tcHV0ZWQ9ZnVuY3Rpb24oZSx0LG4scil7aWYoIWUpcmV0dXJuIHQ7dmFyIGk9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gQShpLGUpLHQmJkEoaSx0KSxpfSxPZS5wcm92aWRlPVRlO3ZhciBqZT1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P2U6dH07ZnVuY3Rpb24gRGUoZSx0LG4pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJih0PXQub3B0aW9ucyksZnVuY3Rpb24oZSx0KXt2YXIgbj1lLnByb3BzO2lmKG4pe3ZhciByLGksbz17fTtpZihBcnJheS5pc0FycmF5KG4pKWZvcihyPW4ubGVuZ3RoO3ItLTspXCJzdHJpbmdcIj09dHlwZW9mKGk9bltyXSkmJihvW2IoaSldPXt0eXBlOm51bGx9KTtlbHNlIGlmKHMobikpZm9yKHZhciBhIGluIG4paT1uW2FdLG9bYihhKV09cyhpKT9pOnt0eXBlOml9O2UucHJvcHM9b319KHQpLGZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5pbmplY3Q7aWYobil7dmFyIHI9ZS5pbmplY3Q9e307aWYoQXJyYXkuaXNBcnJheShuKSlmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKylyW25baV1dPXtmcm9tOm5baV19O2Vsc2UgaWYocyhuKSlmb3IodmFyIG8gaW4gbil7dmFyIGE9bltvXTtyW29dPXMoYSk/QSh7ZnJvbTpvfSxhKTp7ZnJvbTphfX19fSh0KSxmdW5jdGlvbihlKXt2YXIgdD1lLmRpcmVjdGl2ZXM7aWYodClmb3IodmFyIG4gaW4gdCl7dmFyIHI9dFtuXTtcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiYodFtuXT17YmluZDpyLHVwZGF0ZTpyfSl9fSh0KSwhdC5fYmFzZSYmKHQuZXh0ZW5kcyYmKGU9RGUoZSx0LmV4dGVuZHMsbikpLHQubWl4aW5zKSlmb3IodmFyIHI9MCxpPXQubWl4aW5zLmxlbmd0aDtyPGk7cisrKWU9RGUoZSx0Lm1peGluc1tyXSxuKTt2YXIgbyxhPXt9O2ZvcihvIGluIGUpYyhvKTtmb3IobyBpbiB0KXkoZSxvKXx8YyhvKTtmdW5jdGlvbiBjKHIpe3ZhciBpPU9lW3JdfHxqZTthW3JdPWkoZVtyXSx0W3JdLG4scil9cmV0dXJuIGF9ZnVuY3Rpb24gTGUoZSx0LG4scil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4pe3ZhciBpPWVbdF07aWYoeShpLG4pKXJldHVybiBpW25dO3ZhciBvPWIobik7aWYoeShpLG8pKXJldHVybiBpW29dO3ZhciBhPSQobyk7cmV0dXJuIHkoaSxhKT9pW2FdOmlbbl18fGlbb118fGlbYV19fWZ1bmN0aW9uIE1lKGUsdCxuLHIpe3ZhciBpPXRbZV0sbz0heShuLGUpLGE9bltlXSxzPVBlKEJvb2xlYW4saS50eXBlKTtpZihzPi0xKWlmKG8mJiF5KGksXCJkZWZhdWx0XCIpKWE9ITE7ZWxzZSBpZihcIlwiPT09YXx8YT09PUMoZSkpe3ZhciBjPVBlKFN0cmluZyxpLnR5cGUpOyhjPDB8fHM8YykmJihhPSEwKX1pZih2b2lkIDA9PT1hKXthPWZ1bmN0aW9uKGUsdCxuKXtpZigheSh0LFwiZGVmYXVsdFwiKSlyZXR1cm47dmFyIHI9dC5kZWZhdWx0O2lmKGUmJmUuJG9wdGlvbnMucHJvcHNEYXRhJiZ2b2lkIDA9PT1lLiRvcHRpb25zLnByb3BzRGF0YVtuXSYmdm9pZCAwIT09ZS5fcHJvcHNbbl0pcmV0dXJuIGUuX3Byb3BzW25dO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHImJlwiRnVuY3Rpb25cIiE9PUllKHQudHlwZSk/ci5jYWxsKGUpOnJ9KHIsaSxlKTt2YXIgdT1iZTskZSghMCksQ2UoYSksJGUodSl9cmV0dXJuIGF9ZnVuY3Rpb24gSWUoZSl7dmFyIHQ9ZSYmZS50b1N0cmluZygpLm1hdGNoKC9eXFxzKmZ1bmN0aW9uIChcXHcrKS8pO3JldHVybiB0P3RbMV06XCJcIn1mdW5jdGlvbiBGZShlLHQpe3JldHVybiBJZShlKT09PUllKHQpfWZ1bmN0aW9uIFBlKGUsdCl7aWYoIUFycmF5LmlzQXJyYXkodCkpcmV0dXJuIEZlKHQsZSk/MDotMTtmb3IodmFyIG49MCxyPXQubGVuZ3RoO248cjtuKyspaWYoRmUodFtuXSxlKSlyZXR1cm4gbjtyZXR1cm4tMX1mdW5jdGlvbiBSZShlLHQsbil7bGUoKTt0cnl7aWYodClmb3IodmFyIHI9dDtyPXIuJHBhcmVudDspe3ZhciBpPXIuJG9wdGlvbnMuZXJyb3JDYXB0dXJlZDtpZihpKWZvcih2YXIgbz0wO288aS5sZW5ndGg7bysrKXRyeXtpZighMT09PWlbb10uY2FsbChyLGUsdCxuKSlyZXR1cm59Y2F0Y2goZSl7QmUoZSxyLFwiZXJyb3JDYXB0dXJlZCBob29rXCIpfX1CZShlLHQsbil9ZmluYWxseXtmZSgpfX1mdW5jdGlvbiBIZShlLHQsbixyLGkpe3ZhciBvO3RyeXsobz1uP2UuYXBwbHkodCxuKTplLmNhbGwodCkpJiYhby5faXNWdWUmJnUobykmJiFvLl9oYW5kbGVkJiYoby5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gUmUoZSxyLGkrXCIgKFByb21pc2UvYXN5bmMpXCIpfSksby5faGFuZGxlZD0hMCl9Y2F0Y2goZSl7UmUoZSxyLGkpfXJldHVybiBvfWZ1bmN0aW9uIEJlKGUsdCxuKXtpZihGLmVycm9ySGFuZGxlcil0cnl7cmV0dXJuIEYuZXJyb3JIYW5kbGVyLmNhbGwobnVsbCxlLHQsbil9Y2F0Y2godCl7dCE9PWUmJlVlKHQsbnVsbCxcImNvbmZpZy5lcnJvckhhbmRsZXJcIil9VWUoZSx0LG4pfWZ1bmN0aW9uIFVlKGUsdCxuKXtpZigheiYmIVZ8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBjb25zb2xlKXRocm93IGU7Y29uc29sZS5lcnJvcihlKX12YXIgemUsVmU9ITEsS2U9W10sSmU9ITE7ZnVuY3Rpb24gcWUoKXtKZT0hMTt2YXIgZT1LZS5zbGljZSgwKTtLZS5sZW5ndGg9MDtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyllW3RdKCl9aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UmJnJlKFByb21pc2UpKXt2YXIgV2U9UHJvbWlzZS5yZXNvbHZlKCk7emU9ZnVuY3Rpb24oKXtXZS50aGVuKHFlKSxHJiZzZXRUaW1lb3V0KFMpfSxWZT0hMH1lbHNlIGlmKHF8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBNdXRhdGlvbk9ic2VydmVyfHwhcmUoTXV0YXRpb25PYnNlcnZlcikmJlwiW29iamVjdCBNdXRhdGlvbk9ic2VydmVyQ29uc3RydWN0b3JdXCIhPT1NdXRhdGlvbk9ic2VydmVyLnRvU3RyaW5nKCkpemU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNldEltbWVkaWF0ZSYmcmUoc2V0SW1tZWRpYXRlKT9mdW5jdGlvbigpe3NldEltbWVkaWF0ZShxZSl9OmZ1bmN0aW9uKCl7c2V0VGltZW91dChxZSwwKX07ZWxzZXt2YXIgWmU9MSxHZT1uZXcgTXV0YXRpb25PYnNlcnZlcihxZSksWGU9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoU3RyaW5nKFplKSk7R2Uub2JzZXJ2ZShYZSx7Y2hhcmFjdGVyRGF0YTohMH0pLHplPWZ1bmN0aW9uKCl7WmU9KFplKzEpJTIsWGUuZGF0YT1TdHJpbmcoWmUpfSxWZT0hMH1mdW5jdGlvbiBZZShlLHQpe3ZhciBuO2lmKEtlLnB1c2goZnVuY3Rpb24oKXtpZihlKXRyeXtlLmNhbGwodCl9Y2F0Y2goZSl7UmUoZSx0LFwibmV4dFRpY2tcIil9ZWxzZSBuJiZuKHQpfSksSmV8fChKZT0hMCx6ZSgpKSwhZSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UpcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKGUpe249ZX0pfXZhciBRZT1uZXcgaWU7ZnVuY3Rpb24gZXQoZSl7IWZ1bmN0aW9uIGUodCxuKXt2YXIgcixpO3ZhciBhPUFycmF5LmlzQXJyYXkodCk7aWYoIWEmJiFvKHQpfHxPYmplY3QuaXNGcm96ZW4odCl8fHQgaW5zdGFuY2VvZiBwZSlyZXR1cm47aWYodC5fX29iX18pe3ZhciBzPXQuX19vYl9fLmRlcC5pZDtpZihuLmhhcyhzKSlyZXR1cm47bi5hZGQocyl9aWYoYSlmb3Iocj10Lmxlbmd0aDtyLS07KWUodFtyXSxuKTtlbHNlIGZvcihpPU9iamVjdC5rZXlzKHQpLHI9aS5sZW5ndGg7ci0tOyllKHRbaVtyXV0sbil9KGUsUWUpLFFlLmNsZWFyKCl9dmFyIHR0PWcoZnVuY3Rpb24oZSl7dmFyIHQ9XCImXCI9PT1lLmNoYXJBdCgwKSxuPVwiflwiPT09KGU9dD9lLnNsaWNlKDEpOmUpLmNoYXJBdCgwKSxyPVwiIVwiPT09KGU9bj9lLnNsaWNlKDEpOmUpLmNoYXJBdCgwKTtyZXR1cm57bmFtZTplPXI/ZS5zbGljZSgxKTplLG9uY2U6bixjYXB0dXJlOnIscGFzc2l2ZTp0fX0pO2Z1bmN0aW9uIG50KGUsdCl7ZnVuY3Rpb24gbigpe3ZhciBlPWFyZ3VtZW50cyxyPW4uZm5zO2lmKCFBcnJheS5pc0FycmF5KHIpKXJldHVybiBIZShyLG51bGwsYXJndW1lbnRzLHQsXCJ2LW9uIGhhbmRsZXJcIik7Zm9yKHZhciBpPXIuc2xpY2UoKSxvPTA7bzxpLmxlbmd0aDtvKyspSGUoaVtvXSxudWxsLGUsdCxcInYtb24gaGFuZGxlclwiKX1yZXR1cm4gbi5mbnM9ZSxufWZ1bmN0aW9uIHJ0KGUsbixpLG8sYSxzKXt2YXIgYyx1LGwsZjtmb3IoYyBpbiBlKXU9ZVtjXSxsPW5bY10sZj10dChjKSx0KHUpfHwodChsKT8odCh1LmZucykmJih1PWVbY109bnQodSxzKSkscihmLm9uY2UpJiYodT1lW2NdPWEoZi5uYW1lLHUsZi5jYXB0dXJlKSksaShmLm5hbWUsdSxmLmNhcHR1cmUsZi5wYXNzaXZlLGYucGFyYW1zKSk6dSE9PWwmJihsLmZucz11LGVbY109bCkpO2ZvcihjIGluIG4pdChlW2NdKSYmbygoZj10dChjKSkubmFtZSxuW2NdLGYuY2FwdHVyZSl9ZnVuY3Rpb24gaXQoZSxpLG8pe3ZhciBhO2UgaW5zdGFuY2VvZiBwZSYmKGU9ZS5kYXRhLmhvb2t8fChlLmRhdGEuaG9vaz17fSkpO3ZhciBzPWVbaV07ZnVuY3Rpb24gYygpe28uYXBwbHkodGhpcyxhcmd1bWVudHMpLGgoYS5mbnMsYyl9dChzKT9hPW50KFtjXSk6bihzLmZucykmJnIocy5tZXJnZWQpPyhhPXMpLmZucy5wdXNoKGMpOmE9bnQoW3MsY10pLGEubWVyZ2VkPSEwLGVbaV09YX1mdW5jdGlvbiBvdChlLHQscixpLG8pe2lmKG4odCkpe2lmKHkodCxyKSlyZXR1cm4gZVtyXT10W3JdLG98fGRlbGV0ZSB0W3JdLCEwO2lmKHkodCxpKSlyZXR1cm4gZVtyXT10W2ldLG98fGRlbGV0ZSB0W2ldLCEwfXJldHVybiExfWZ1bmN0aW9uIGF0KGUpe3JldHVybiBpKGUpP1toZShlKV06QXJyYXkuaXNBcnJheShlKT9mdW5jdGlvbiBlKG8sYSl7dmFyIHM9W107dmFyIGMsdSxsLGY7Zm9yKGM9MDtjPG8ubGVuZ3RoO2MrKyl0KHU9b1tjXSl8fFwiYm9vbGVhblwiPT10eXBlb2YgdXx8KGw9cy5sZW5ndGgtMSxmPXNbbF0sQXJyYXkuaXNBcnJheSh1KT91Lmxlbmd0aD4wJiYoc3QoKHU9ZSh1LChhfHxcIlwiKStcIl9cIitjKSlbMF0pJiZzdChmKSYmKHNbbF09aGUoZi50ZXh0K3VbMF0udGV4dCksdS5zaGlmdCgpKSxzLnB1c2guYXBwbHkocyx1KSk6aSh1KT9zdChmKT9zW2xdPWhlKGYudGV4dCt1KTpcIlwiIT09dSYmcy5wdXNoKGhlKHUpKTpzdCh1KSYmc3QoZik/c1tsXT1oZShmLnRleHQrdS50ZXh0KToocihvLl9pc1ZMaXN0KSYmbih1LnRhZykmJnQodS5rZXkpJiZuKGEpJiYodS5rZXk9XCJfX3ZsaXN0XCIrYStcIl9cIitjK1wiX19cIikscy5wdXNoKHUpKSk7cmV0dXJuIHN9KGUpOnZvaWQgMH1mdW5jdGlvbiBzdChlKXtyZXR1cm4gbihlKSYmbihlLnRleHQpJiYhMT09PWUuaXNDb21tZW50fWZ1bmN0aW9uIGN0KGUsdCl7aWYoZSl7Zm9yKHZhciBuPU9iamVjdC5jcmVhdGUobnVsbCkscj1vZT9SZWZsZWN0Lm93bktleXMoZSk6T2JqZWN0LmtleXMoZSksaT0wO2k8ci5sZW5ndGg7aSsrKXt2YXIgbz1yW2ldO2lmKFwiX19vYl9fXCIhPT1vKXtmb3IodmFyIGE9ZVtvXS5mcm9tLHM9dDtzOyl7aWYocy5fcHJvdmlkZWQmJnkocy5fcHJvdmlkZWQsYSkpe25bb109cy5fcHJvdmlkZWRbYV07YnJlYWt9cz1zLiRwYXJlbnR9aWYoIXMmJlwiZGVmYXVsdFwiaW4gZVtvXSl7dmFyIGM9ZVtvXS5kZWZhdWx0O25bb109XCJmdW5jdGlvblwiPT10eXBlb2YgYz9jLmNhbGwodCk6Y319fXJldHVybiBufX1mdW5jdGlvbiB1dChlLHQpe2lmKCFlfHwhZS5sZW5ndGgpcmV0dXJue307Zm9yKHZhciBuPXt9LHI9MCxpPWUubGVuZ3RoO3I8aTtyKyspe3ZhciBvPWVbcl0sYT1vLmRhdGE7aWYoYSYmYS5hdHRycyYmYS5hdHRycy5zbG90JiZkZWxldGUgYS5hdHRycy5zbG90LG8uY29udGV4dCE9PXQmJm8uZm5Db250ZXh0IT09dHx8IWF8fG51bGw9PWEuc2xvdCkobi5kZWZhdWx0fHwobi5kZWZhdWx0PVtdKSkucHVzaChvKTtlbHNle3ZhciBzPWEuc2xvdCxjPW5bc118fChuW3NdPVtdKTtcInRlbXBsYXRlXCI9PT1vLnRhZz9jLnB1c2guYXBwbHkoYyxvLmNoaWxkcmVufHxbXSk6Yy5wdXNoKG8pfX1mb3IodmFyIHUgaW4gbiluW3VdLmV2ZXJ5KGx0KSYmZGVsZXRlIG5bdV07cmV0dXJuIG59ZnVuY3Rpb24gbHQoZSl7cmV0dXJuIGUuaXNDb21tZW50JiYhZS5hc3luY0ZhY3Rvcnl8fFwiIFwiPT09ZS50ZXh0fWZ1bmN0aW9uIGZ0KHQsbixyKXt2YXIgaSxvPU9iamVjdC5rZXlzKG4pLmxlbmd0aD4wLGE9dD8hIXQuJHN0YWJsZTohbyxzPXQmJnQuJGtleTtpZih0KXtpZih0Ll9ub3JtYWxpemVkKXJldHVybiB0Ll9ub3JtYWxpemVkO2lmKGEmJnImJnIhPT1lJiZzPT09ci4ka2V5JiYhbyYmIXIuJGhhc05vcm1hbClyZXR1cm4gcjtmb3IodmFyIGMgaW4gaT17fSx0KXRbY10mJlwiJFwiIT09Y1swXSYmKGlbY109cHQobixjLHRbY10pKX1lbHNlIGk9e307Zm9yKHZhciB1IGluIG4pdSBpbiBpfHwoaVt1XT1kdChuLHUpKTtyZXR1cm4gdCYmT2JqZWN0LmlzRXh0ZW5zaWJsZSh0KSYmKHQuX25vcm1hbGl6ZWQ9aSksUihpLFwiJHN0YWJsZVwiLGEpLFIoaSxcIiRrZXlcIixzKSxSKGksXCIkaGFzTm9ybWFsXCIsbyksaX1mdW5jdGlvbiBwdChlLHQsbil7dmFyIHI9ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoP24uYXBwbHkobnVsbCxhcmd1bWVudHMpOm4oe30pO3JldHVybihlPWUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiYhQXJyYXkuaXNBcnJheShlKT9bZV06YXQoZSkpJiYoMD09PWUubGVuZ3RofHwxPT09ZS5sZW5ndGgmJmVbMF0uaXNDb21tZW50KT92b2lkIDA6ZX07cmV0dXJuIG4ucHJveHkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse2dldDpyLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSkscn1mdW5jdGlvbiBkdChlLHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlW3RdfX1mdW5jdGlvbiB2dChlLHQpe3ZhciByLGksYSxzLGM7aWYoQXJyYXkuaXNBcnJheShlKXx8XCJzdHJpbmdcIj09dHlwZW9mIGUpZm9yKHI9bmV3IEFycmF5KGUubGVuZ3RoKSxpPTAsYT1lLmxlbmd0aDtpPGE7aSsrKXJbaV09dChlW2ldLGkpO2Vsc2UgaWYoXCJudW1iZXJcIj09dHlwZW9mIGUpZm9yKHI9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXJbaV09dChpKzEsaSk7ZWxzZSBpZihvKGUpKWlmKG9lJiZlW1N5bWJvbC5pdGVyYXRvcl0pe3I9W107Zm9yKHZhciB1PWVbU3ltYm9sLml0ZXJhdG9yXSgpLGw9dS5uZXh0KCk7IWwuZG9uZTspci5wdXNoKHQobC52YWx1ZSxyLmxlbmd0aCkpLGw9dS5uZXh0KCl9ZWxzZSBmb3Iocz1PYmplY3Qua2V5cyhlKSxyPW5ldyBBcnJheShzLmxlbmd0aCksaT0wLGE9cy5sZW5ndGg7aTxhO2krKyljPXNbaV0scltpXT10KGVbY10sYyxpKTtyZXR1cm4gbihyKXx8KHI9W10pLHIuX2lzVkxpc3Q9ITAscn1mdW5jdGlvbiBodChlLHQsbixyKXt2YXIgaSxvPXRoaXMuJHNjb3BlZFNsb3RzW2VdO28/KG49bnx8e30sciYmKG49QShBKHt9LHIpLG4pKSxpPW8obil8fHQpOmk9dGhpcy4kc2xvdHNbZV18fHQ7dmFyIGE9biYmbi5zbG90O3JldHVybiBhP3RoaXMuJGNyZWF0ZUVsZW1lbnQoXCJ0ZW1wbGF0ZVwiLHtzbG90OmF9LGkpOml9ZnVuY3Rpb24gbXQoZSl7cmV0dXJuIExlKHRoaXMuJG9wdGlvbnMsXCJmaWx0ZXJzXCIsZSl8fEV9ZnVuY3Rpb24geXQoZSx0KXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT8tMT09PWUuaW5kZXhPZih0KTplIT09dH1mdW5jdGlvbiBndChlLHQsbixyLGkpe3ZhciBvPUYua2V5Q29kZXNbdF18fG47cmV0dXJuIGkmJnImJiFGLmtleUNvZGVzW3RdP3l0KGkscik6bz95dChvLGUpOnI/QyhyKSE9PXQ6dm9pZCAwfWZ1bmN0aW9uIF90KGUsdCxuLHIsaSl7aWYobilpZihvKG4pKXt2YXIgYTtBcnJheS5pc0FycmF5KG4pJiYobj1PKG4pKTt2YXIgcz1mdW5jdGlvbihvKXtpZihcImNsYXNzXCI9PT1vfHxcInN0eWxlXCI9PT1vfHx2KG8pKWE9ZTtlbHNle3ZhciBzPWUuYXR0cnMmJmUuYXR0cnMudHlwZTthPXJ8fEYubXVzdFVzZVByb3AodCxzLG8pP2UuZG9tUHJvcHN8fChlLmRvbVByb3BzPXt9KTplLmF0dHJzfHwoZS5hdHRycz17fSl9dmFyIGM9YihvKSx1PUMobyk7YyBpbiBhfHx1IGluIGF8fChhW29dPW5bb10saSYmKChlLm9ufHwoZS5vbj17fSkpW1widXBkYXRlOlwiK29dPWZ1bmN0aW9uKGUpe25bb109ZX0pKX07Zm9yKHZhciBjIGluIG4pcyhjKX1lbHNlO3JldHVybiBlfWZ1bmN0aW9uIGJ0KGUsdCl7dmFyIG49dGhpcy5fc3RhdGljVHJlZXN8fCh0aGlzLl9zdGF0aWNUcmVlcz1bXSkscj1uW2VdO3JldHVybiByJiYhdD9yOih3dChyPW5bZV09dGhpcy4kb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnNbZV0uY2FsbCh0aGlzLl9yZW5kZXJQcm94eSxudWxsLHRoaXMpLFwiX19zdGF0aWNfX1wiK2UsITEpLHIpfWZ1bmN0aW9uICR0KGUsdCxuKXtyZXR1cm4gd3QoZSxcIl9fb25jZV9fXCIrdCsobj9cIl9cIituOlwiXCIpLCEwKSxlfWZ1bmN0aW9uIHd0KGUsdCxuKXtpZihBcnJheS5pc0FycmF5KGUpKWZvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKWVbcl0mJlwic3RyaW5nXCIhPXR5cGVvZiBlW3JdJiZDdChlW3JdLHQrXCJfXCIrcixuKTtlbHNlIEN0KGUsdCxuKX1mdW5jdGlvbiBDdChlLHQsbil7ZS5pc1N0YXRpYz0hMCxlLmtleT10LGUuaXNPbmNlPW59ZnVuY3Rpb24geHQoZSx0KXtpZih0KWlmKHModCkpe3ZhciBuPWUub249ZS5vbj9BKHt9LGUub24pOnt9O2Zvcih2YXIgciBpbiB0KXt2YXIgaT1uW3JdLG89dFtyXTtuW3JdPWk/W10uY29uY2F0KGksbyk6b319ZWxzZTtyZXR1cm4gZX1mdW5jdGlvbiBrdChlLHQsbixyKXt0PXR8fHskc3RhYmxlOiFufTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIG89ZVtpXTtBcnJheS5pc0FycmF5KG8pP2t0KG8sdCxuKTpvJiYoby5wcm94eSYmKG8uZm4ucHJveHk9ITApLHRbby5rZXldPW8uZm4pfXJldHVybiByJiYodC4ka2V5PXIpLHR9ZnVuY3Rpb24gQXQoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rPTIpe3ZhciByPXRbbl07XCJzdHJpbmdcIj09dHlwZW9mIHImJnImJihlW3Rbbl1dPXRbbisxXSl9cmV0dXJuIGV9ZnVuY3Rpb24gT3QoZSx0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT90K2U6ZX1mdW5jdGlvbiBTdChlKXtlLl9vPSR0LGUuX249ZixlLl9zPWwsZS5fbD12dCxlLl90PWh0LGUuX3E9TixlLl9pPWosZS5fbT1idCxlLl9mPW10LGUuX2s9Z3QsZS5fYj1fdCxlLl92PWhlLGUuX2U9dmUsZS5fdT1rdCxlLl9nPXh0LGUuX2Q9QXQsZS5fcD1PdH1mdW5jdGlvbiBUdCh0LG4saSxvLGEpe3ZhciBzLGM9dGhpcyx1PWEub3B0aW9uczt5KG8sXCJfdWlkXCIpPyhzPU9iamVjdC5jcmVhdGUobykpLl9vcmlnaW5hbD1vOihzPW8sbz1vLl9vcmlnaW5hbCk7dmFyIGw9cih1Ll9jb21waWxlZCksZj0hbDt0aGlzLmRhdGE9dCx0aGlzLnByb3BzPW4sdGhpcy5jaGlsZHJlbj1pLHRoaXMucGFyZW50PW8sdGhpcy5saXN0ZW5lcnM9dC5vbnx8ZSx0aGlzLmluamVjdGlvbnM9Y3QodS5pbmplY3QsbyksdGhpcy5zbG90cz1mdW5jdGlvbigpe3JldHVybiBjLiRzbG90c3x8ZnQodC5zY29wZWRTbG90cyxjLiRzbG90cz11dChpLG8pKSxjLiRzbG90c30sT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJzY29wZWRTbG90c1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBmdCh0LnNjb3BlZFNsb3RzLHRoaXMuc2xvdHMoKSl9fSksbCYmKHRoaXMuJG9wdGlvbnM9dSx0aGlzLiRzbG90cz10aGlzLnNsb3RzKCksdGhpcy4kc2NvcGVkU2xvdHM9ZnQodC5zY29wZWRTbG90cyx0aGlzLiRzbG90cykpLHUuX3Njb3BlSWQ/dGhpcy5fYz1mdW5jdGlvbihlLHQsbixyKXt2YXIgaT1QdChzLGUsdCxuLHIsZik7cmV0dXJuIGkmJiFBcnJheS5pc0FycmF5KGkpJiYoaS5mblNjb3BlSWQ9dS5fc2NvcGVJZCxpLmZuQ29udGV4dD1vKSxpfTp0aGlzLl9jPWZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiBQdChzLGUsdCxuLHIsZil9fWZ1bmN0aW9uIEV0KGUsdCxuLHIsaSl7dmFyIG89bWUoZSk7cmV0dXJuIG8uZm5Db250ZXh0PW4sby5mbk9wdGlvbnM9cix0LnNsb3QmJigoby5kYXRhfHwoby5kYXRhPXt9KSkuc2xvdD10LnNsb3QpLG99ZnVuY3Rpb24gTnQoZSx0KXtmb3IodmFyIG4gaW4gdCllW2IobildPXRbbl19U3QoVHQucHJvdG90eXBlKTt2YXIganQ9e2luaXQ6ZnVuY3Rpb24oZSx0KXtpZihlLmNvbXBvbmVudEluc3RhbmNlJiYhZS5jb21wb25lbnRJbnN0YW5jZS5faXNEZXN0cm95ZWQmJmUuZGF0YS5rZWVwQWxpdmUpe3ZhciByPWU7anQucHJlcGF0Y2gocixyKX1lbHNleyhlLmNvbXBvbmVudEluc3RhbmNlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9e19pc0NvbXBvbmVudDohMCxfcGFyZW50Vm5vZGU6ZSxwYXJlbnQ6dH0saT1lLmRhdGEuaW5saW5lVGVtcGxhdGU7bihpKSYmKHIucmVuZGVyPWkucmVuZGVyLHIuc3RhdGljUmVuZGVyRm5zPWkuc3RhdGljUmVuZGVyRm5zKTtyZXR1cm4gbmV3IGUuY29tcG9uZW50T3B0aW9ucy5DdG9yKHIpfShlLFd0KSkuJG1vdW50KHQ/ZS5lbG06dm9pZCAwLHQpfX0scHJlcGF0Y2g6ZnVuY3Rpb24odCxuKXt2YXIgcj1uLmNvbXBvbmVudE9wdGlvbnM7IWZ1bmN0aW9uKHQsbixyLGksbyl7dmFyIGE9aS5kYXRhLnNjb3BlZFNsb3RzLHM9dC4kc2NvcGVkU2xvdHMsYz0hIShhJiYhYS4kc3RhYmxlfHxzIT09ZSYmIXMuJHN0YWJsZXx8YSYmdC4kc2NvcGVkU2xvdHMuJGtleSE9PWEuJGtleSksdT0hIShvfHx0LiRvcHRpb25zLl9yZW5kZXJDaGlsZHJlbnx8Yyk7dC4kb3B0aW9ucy5fcGFyZW50Vm5vZGU9aSx0LiR2bm9kZT1pLHQuX3Zub2RlJiYodC5fdm5vZGUucGFyZW50PWkpO2lmKHQuJG9wdGlvbnMuX3JlbmRlckNoaWxkcmVuPW8sdC4kYXR0cnM9aS5kYXRhLmF0dHJzfHxlLHQuJGxpc3RlbmVycz1yfHxlLG4mJnQuJG9wdGlvbnMucHJvcHMpeyRlKCExKTtmb3IodmFyIGw9dC5fcHJvcHMsZj10LiRvcHRpb25zLl9wcm9wS2V5c3x8W10scD0wO3A8Zi5sZW5ndGg7cCsrKXt2YXIgZD1mW3BdLHY9dC4kb3B0aW9ucy5wcm9wcztsW2RdPU1lKGQsdixuLHQpfSRlKCEwKSx0LiRvcHRpb25zLnByb3BzRGF0YT1ufXI9cnx8ZTt2YXIgaD10LiRvcHRpb25zLl9wYXJlbnRMaXN0ZW5lcnM7dC4kb3B0aW9ucy5fcGFyZW50TGlzdGVuZXJzPXIscXQodCxyLGgpLHUmJih0LiRzbG90cz11dChvLGkuY29udGV4dCksdC4kZm9yY2VVcGRhdGUoKSl9KG4uY29tcG9uZW50SW5zdGFuY2U9dC5jb21wb25lbnRJbnN0YW5jZSxyLnByb3BzRGF0YSxyLmxpc3RlbmVycyxuLHIuY2hpbGRyZW4pfSxpbnNlcnQ6ZnVuY3Rpb24oZSl7dmFyIHQsbj1lLmNvbnRleHQscj1lLmNvbXBvbmVudEluc3RhbmNlO3IuX2lzTW91bnRlZHx8KHIuX2lzTW91bnRlZD0hMCxZdChyLFwibW91bnRlZFwiKSksZS5kYXRhLmtlZXBBbGl2ZSYmKG4uX2lzTW91bnRlZD8oKHQ9cikuX2luYWN0aXZlPSExLGVuLnB1c2godCkpOlh0KHIsITApKX0sZGVzdHJveTpmdW5jdGlvbihlKXt2YXIgdD1lLmNvbXBvbmVudEluc3RhbmNlO3QuX2lzRGVzdHJveWVkfHwoZS5kYXRhLmtlZXBBbGl2ZT9mdW5jdGlvbiBlKHQsbil7aWYobiYmKHQuX2RpcmVjdEluYWN0aXZlPSEwLEd0KHQpKSlyZXR1cm47aWYoIXQuX2luYWN0aXZlKXt0Ll9pbmFjdGl2ZT0hMDtmb3IodmFyIHI9MDtyPHQuJGNoaWxkcmVuLmxlbmd0aDtyKyspZSh0LiRjaGlsZHJlbltyXSk7WXQodCxcImRlYWN0aXZhdGVkXCIpfX0odCwhMCk6dC4kZGVzdHJveSgpKX19LER0PU9iamVjdC5rZXlzKGp0KTtmdW5jdGlvbiBMdChpLGEscyxjLGwpe2lmKCF0KGkpKXt2YXIgZj1zLiRvcHRpb25zLl9iYXNlO2lmKG8oaSkmJihpPWYuZXh0ZW5kKGkpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBpKXt2YXIgcDtpZih0KGkuY2lkKSYmdm9pZCAwPT09KGk9ZnVuY3Rpb24oZSxpKXtpZihyKGUuZXJyb3IpJiZuKGUuZXJyb3JDb21wKSlyZXR1cm4gZS5lcnJvckNvbXA7aWYobihlLnJlc29sdmVkKSlyZXR1cm4gZS5yZXNvbHZlZDt2YXIgYT1IdDthJiZuKGUub3duZXJzKSYmLTE9PT1lLm93bmVycy5pbmRleE9mKGEpJiZlLm93bmVycy5wdXNoKGEpO2lmKHIoZS5sb2FkaW5nKSYmbihlLmxvYWRpbmdDb21wKSlyZXR1cm4gZS5sb2FkaW5nQ29tcDtpZihhJiYhbihlLm93bmVycykpe3ZhciBzPWUub3duZXJzPVthXSxjPSEwLGw9bnVsbCxmPW51bGw7YS4kb24oXCJob29rOmRlc3Ryb3llZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGgocyxhKX0pO3ZhciBwPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLG49cy5sZW5ndGg7dDxuO3QrKylzW3RdLiRmb3JjZVVwZGF0ZSgpO2UmJihzLmxlbmd0aD0wLG51bGwhPT1sJiYoY2xlYXJUaW1lb3V0KGwpLGw9bnVsbCksbnVsbCE9PWYmJihjbGVhclRpbWVvdXQoZiksZj1udWxsKSl9LGQ9RChmdW5jdGlvbih0KXtlLnJlc29sdmVkPUJ0KHQsaSksYz9zLmxlbmd0aD0wOnAoITApfSksdj1EKGZ1bmN0aW9uKHQpe24oZS5lcnJvckNvbXApJiYoZS5lcnJvcj0hMCxwKCEwKSl9KSxtPWUoZCx2KTtyZXR1cm4gbyhtKSYmKHUobSk/dChlLnJlc29sdmVkKSYmbS50aGVuKGQsdik6dShtLmNvbXBvbmVudCkmJihtLmNvbXBvbmVudC50aGVuKGQsdiksbihtLmVycm9yKSYmKGUuZXJyb3JDb21wPUJ0KG0uZXJyb3IsaSkpLG4obS5sb2FkaW5nKSYmKGUubG9hZGluZ0NvbXA9QnQobS5sb2FkaW5nLGkpLDA9PT1tLmRlbGF5P2UubG9hZGluZz0hMDpsPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtsPW51bGwsdChlLnJlc29sdmVkKSYmdChlLmVycm9yKSYmKGUubG9hZGluZz0hMCxwKCExKSl9LG0uZGVsYXl8fDIwMCkpLG4obS50aW1lb3V0KSYmKGY9c2V0VGltZW91dChmdW5jdGlvbigpe2Y9bnVsbCx0KGUucmVzb2x2ZWQpJiZ2KG51bGwpfSxtLnRpbWVvdXQpKSkpLGM9ITEsZS5sb2FkaW5nP2UubG9hZGluZ0NvbXA6ZS5yZXNvbHZlZH19KHA9aSxmKSkpcmV0dXJuIGZ1bmN0aW9uKGUsdCxuLHIsaSl7dmFyIG89dmUoKTtyZXR1cm4gby5hc3luY0ZhY3Rvcnk9ZSxvLmFzeW5jTWV0YT17ZGF0YTp0LGNvbnRleHQ6bixjaGlsZHJlbjpyLHRhZzppfSxvfShwLGEscyxjLGwpO2E9YXx8e30sJG4oaSksbihhLm1vZGVsKSYmZnVuY3Rpb24oZSx0KXt2YXIgcj1lLm1vZGVsJiZlLm1vZGVsLnByb3B8fFwidmFsdWVcIixpPWUubW9kZWwmJmUubW9kZWwuZXZlbnR8fFwiaW5wdXRcIjsodC5hdHRyc3x8KHQuYXR0cnM9e30pKVtyXT10Lm1vZGVsLnZhbHVlO3ZhciBvPXQub258fCh0Lm9uPXt9KSxhPW9baV0scz10Lm1vZGVsLmNhbGxiYWNrO24oYSk/KEFycmF5LmlzQXJyYXkoYSk/LTE9PT1hLmluZGV4T2Yocyk6YSE9PXMpJiYob1tpXT1bc10uY29uY2F0KGEpKTpvW2ldPXN9KGkub3B0aW9ucyxhKTt2YXIgZD1mdW5jdGlvbihlLHIsaSl7dmFyIG89ci5vcHRpb25zLnByb3BzO2lmKCF0KG8pKXt2YXIgYT17fSxzPWUuYXR0cnMsYz1lLnByb3BzO2lmKG4ocyl8fG4oYykpZm9yKHZhciB1IGluIG8pe3ZhciBsPUModSk7b3QoYSxjLHUsbCwhMCl8fG90KGEscyx1LGwsITEpfXJldHVybiBhfX0oYSxpKTtpZihyKGkub3B0aW9ucy5mdW5jdGlvbmFsKSlyZXR1cm4gZnVuY3Rpb24odCxyLGksbyxhKXt2YXIgcz10Lm9wdGlvbnMsYz17fSx1PXMucHJvcHM7aWYobih1KSlmb3IodmFyIGwgaW4gdSljW2xdPU1lKGwsdSxyfHxlKTtlbHNlIG4oaS5hdHRycykmJk50KGMsaS5hdHRycyksbihpLnByb3BzKSYmTnQoYyxpLnByb3BzKTt2YXIgZj1uZXcgVHQoaSxjLGEsbyx0KSxwPXMucmVuZGVyLmNhbGwobnVsbCxmLl9jLGYpO2lmKHAgaW5zdGFuY2VvZiBwZSlyZXR1cm4gRXQocCxpLGYucGFyZW50LHMpO2lmKEFycmF5LmlzQXJyYXkocCkpe2Zvcih2YXIgZD1hdChwKXx8W10sdj1uZXcgQXJyYXkoZC5sZW5ndGgpLGg9MDtoPGQubGVuZ3RoO2grKyl2W2hdPUV0KGRbaF0saSxmLnBhcmVudCxzKTtyZXR1cm4gdn19KGksZCxhLHMsYyk7dmFyIHY9YS5vbjtpZihhLm9uPWEubmF0aXZlT24scihpLm9wdGlvbnMuYWJzdHJhY3QpKXt2YXIgbT1hLnNsb3Q7YT17fSxtJiYoYS5zbG90PW0pfSFmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5ob29rfHwoZS5ob29rPXt9KSxuPTA7bjxEdC5sZW5ndGg7bisrKXt2YXIgcj1EdFtuXSxpPXRbcl0sbz1qdFtyXTtpPT09b3x8aSYmaS5fbWVyZ2VkfHwodFtyXT1pP010KG8saSk6byl9fShhKTt2YXIgeT1pLm9wdGlvbnMubmFtZXx8bDtyZXR1cm4gbmV3IHBlKFwidnVlLWNvbXBvbmVudC1cIitpLmNpZCsoeT9cIi1cIit5OlwiXCIpLGEsdm9pZCAwLHZvaWQgMCx2b2lkIDAscyx7Q3RvcjppLHByb3BzRGF0YTpkLGxpc3RlbmVyczp2LHRhZzpsLGNoaWxkcmVuOmN9LHApfX19ZnVuY3Rpb24gTXQoZSx0KXt2YXIgbj1mdW5jdGlvbihuLHIpe2UobixyKSx0KG4scil9O3JldHVybiBuLl9tZXJnZWQ9ITAsbn12YXIgSXQ9MSxGdD0yO2Z1bmN0aW9uIFB0KGUsYSxzLGMsdSxsKXtyZXR1cm4oQXJyYXkuaXNBcnJheShzKXx8aShzKSkmJih1PWMsYz1zLHM9dm9pZCAwKSxyKGwpJiYodT1GdCksZnVuY3Rpb24oZSxpLGEscyxjKXtpZihuKGEpJiZuKGEuX19vYl9fKSlyZXR1cm4gdmUoKTtuKGEpJiZuKGEuaXMpJiYoaT1hLmlzKTtpZighaSlyZXR1cm4gdmUoKTtBcnJheS5pc0FycmF5KHMpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBzWzBdJiYoKGE9YXx8e30pLnNjb3BlZFNsb3RzPXtkZWZhdWx0OnNbMF19LHMubGVuZ3RoPTApO2M9PT1GdD9zPWF0KHMpOmM9PT1JdCYmKHM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0KyspaWYoQXJyYXkuaXNBcnJheShlW3RdKSlyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSxlKTtyZXR1cm4gZX0ocykpO3ZhciB1LGw7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGkpe3ZhciBmO2w9ZS4kdm5vZGUmJmUuJHZub2RlLm5zfHxGLmdldFRhZ05hbWVzcGFjZShpKSx1PUYuaXNSZXNlcnZlZFRhZyhpKT9uZXcgcGUoRi5wYXJzZVBsYXRmb3JtVGFnTmFtZShpKSxhLHMsdm9pZCAwLHZvaWQgMCxlKTphJiZhLnByZXx8IW4oZj1MZShlLiRvcHRpb25zLFwiY29tcG9uZW50c1wiLGkpKT9uZXcgcGUoaSxhLHMsdm9pZCAwLHZvaWQgMCxlKTpMdChmLGEsZSxzLGkpfWVsc2UgdT1MdChpLGEsZSxzKTtyZXR1cm4gQXJyYXkuaXNBcnJheSh1KT91Om4odSk/KG4obCkmJmZ1bmN0aW9uIGUoaSxvLGEpe2kubnM9bztcImZvcmVpZ25PYmplY3RcIj09PWkudGFnJiYobz12b2lkIDAsYT0hMCk7aWYobihpLmNoaWxkcmVuKSlmb3IodmFyIHM9MCxjPWkuY2hpbGRyZW4ubGVuZ3RoO3M8YztzKyspe3ZhciB1PWkuY2hpbGRyZW5bc107bih1LnRhZykmJih0KHUubnMpfHxyKGEpJiZcInN2Z1wiIT09dS50YWcpJiZlKHUsbyxhKX19KHUsbCksbihhKSYmZnVuY3Rpb24oZSl7byhlLnN0eWxlKSYmZXQoZS5zdHlsZSk7byhlLmNsYXNzKSYmZXQoZS5jbGFzcyl9KGEpLHUpOnZlKCl9KGUsYSxzLGMsdSl9dmFyIFJ0LEh0PW51bGw7ZnVuY3Rpb24gQnQoZSx0KXtyZXR1cm4oZS5fX2VzTW9kdWxlfHxvZSYmXCJNb2R1bGVcIj09PWVbU3ltYm9sLnRvU3RyaW5nVGFnXSkmJihlPWUuZGVmYXVsdCksbyhlKT90LmV4dGVuZChlKTplfWZ1bmN0aW9uIFV0KGUpe3JldHVybiBlLmlzQ29tbWVudCYmZS5hc3luY0ZhY3Rvcnl9ZnVuY3Rpb24genQoZSl7aWYoQXJyYXkuaXNBcnJheShlKSlmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7dmFyIHI9ZVt0XTtpZihuKHIpJiYobihyLmNvbXBvbmVudE9wdGlvbnMpfHxVdChyKSkpcmV0dXJuIHJ9fWZ1bmN0aW9uIFZ0KGUsdCl7UnQuJG9uKGUsdCl9ZnVuY3Rpb24gS3QoZSx0KXtSdC4kb2ZmKGUsdCl9ZnVuY3Rpb24gSnQoZSx0KXt2YXIgbj1SdDtyZXR1cm4gZnVuY3Rpb24gcigpe251bGwhPT10LmFwcGx5KG51bGwsYXJndW1lbnRzKSYmbi4kb2ZmKGUscil9fWZ1bmN0aW9uIHF0KGUsdCxuKXtSdD1lLHJ0KHQsbnx8e30sVnQsS3QsSnQsZSksUnQ9dm9pZCAwfXZhciBXdD1udWxsO2Z1bmN0aW9uIFp0KGUpe3ZhciB0PVd0O3JldHVybiBXdD1lLGZ1bmN0aW9uKCl7V3Q9dH19ZnVuY3Rpb24gR3QoZSl7Zm9yKDtlJiYoZT1lLiRwYXJlbnQpOylpZihlLl9pbmFjdGl2ZSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBYdChlLHQpe2lmKHQpe2lmKGUuX2RpcmVjdEluYWN0aXZlPSExLEd0KGUpKXJldHVybn1lbHNlIGlmKGUuX2RpcmVjdEluYWN0aXZlKXJldHVybjtpZihlLl9pbmFjdGl2ZXx8bnVsbD09PWUuX2luYWN0aXZlKXtlLl9pbmFjdGl2ZT0hMTtmb3IodmFyIG49MDtuPGUuJGNoaWxkcmVuLmxlbmd0aDtuKyspWHQoZS4kY2hpbGRyZW5bbl0pO1l0KGUsXCJhY3RpdmF0ZWRcIil9fWZ1bmN0aW9uIFl0KGUsdCl7bGUoKTt2YXIgbj1lLiRvcHRpb25zW3RdLHI9dCtcIiBob29rXCI7aWYobilmb3IodmFyIGk9MCxvPW4ubGVuZ3RoO2k8bztpKyspSGUobltpXSxlLG51bGwsZSxyKTtlLl9oYXNIb29rRXZlbnQmJmUuJGVtaXQoXCJob29rOlwiK3QpLGZlKCl9dmFyIFF0PVtdLGVuPVtdLHRuPXt9LG5uPSExLHJuPSExLG9uPTA7dmFyIGFuPTAsc249RGF0ZS5ub3c7aWYoeiYmIXEpe3ZhciBjbj13aW5kb3cucGVyZm9ybWFuY2U7Y24mJlwiZnVuY3Rpb25cIj09dHlwZW9mIGNuLm5vdyYmc24oKT5kb2N1bWVudC5jcmVhdGVFdmVudChcIkV2ZW50XCIpLnRpbWVTdGFtcCYmKHNuPWZ1bmN0aW9uKCl7cmV0dXJuIGNuLm5vdygpfSl9ZnVuY3Rpb24gdW4oKXt2YXIgZSx0O2Zvcihhbj1zbigpLHJuPSEwLFF0LnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5pZC10LmlkfSksb249MDtvbjxRdC5sZW5ndGg7b24rKykoZT1RdFtvbl0pLmJlZm9yZSYmZS5iZWZvcmUoKSx0PWUuaWQsdG5bdF09bnVsbCxlLnJ1bigpO3ZhciBuPWVuLnNsaWNlKCkscj1RdC5zbGljZSgpO29uPVF0Lmxlbmd0aD1lbi5sZW5ndGg9MCx0bj17fSxubj1ybj0hMSxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyllW3RdLl9pbmFjdGl2ZT0hMCxYdChlW3RdLCEwKX0obiksZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sZW5ndGg7Zm9yKDt0LS07KXt2YXIgbj1lW3RdLHI9bi52bTtyLl93YXRjaGVyPT09biYmci5faXNNb3VudGVkJiYhci5faXNEZXN0cm95ZWQmJll0KHIsXCJ1cGRhdGVkXCIpfX0ociksbmUmJkYuZGV2dG9vbHMmJm5lLmVtaXQoXCJmbHVzaFwiKX12YXIgbG49MCxmbj1mdW5jdGlvbihlLHQsbixyLGkpe3RoaXMudm09ZSxpJiYoZS5fd2F0Y2hlcj10aGlzKSxlLl93YXRjaGVycy5wdXNoKHRoaXMpLHI/KHRoaXMuZGVlcD0hIXIuZGVlcCx0aGlzLnVzZXI9ISFyLnVzZXIsdGhpcy5sYXp5PSEhci5sYXp5LHRoaXMuc3luYz0hIXIuc3luYyx0aGlzLmJlZm9yZT1yLmJlZm9yZSk6dGhpcy5kZWVwPXRoaXMudXNlcj10aGlzLmxhenk9dGhpcy5zeW5jPSExLHRoaXMuY2I9bix0aGlzLmlkPSsrbG4sdGhpcy5hY3RpdmU9ITAsdGhpcy5kaXJ0eT10aGlzLmxhenksdGhpcy5kZXBzPVtdLHRoaXMubmV3RGVwcz1bXSx0aGlzLmRlcElkcz1uZXcgaWUsdGhpcy5uZXdEZXBJZHM9bmV3IGllLHRoaXMuZXhwcmVzc2lvbj1cIlwiLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dGhpcy5nZXR0ZXI9dDoodGhpcy5nZXR0ZXI9ZnVuY3Rpb24oZSl7aWYoIUgudGVzdChlKSl7dmFyIHQ9ZS5zcGxpdChcIi5cIik7cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXtpZighZSlyZXR1cm47ZT1lW3Rbbl1dfXJldHVybiBlfX19KHQpLHRoaXMuZ2V0dGVyfHwodGhpcy5nZXR0ZXI9UykpLHRoaXMudmFsdWU9dGhpcy5sYXp5P3ZvaWQgMDp0aGlzLmdldCgpfTtmbi5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKCl7dmFyIGU7bGUodGhpcyk7dmFyIHQ9dGhpcy52bTt0cnl7ZT10aGlzLmdldHRlci5jYWxsKHQsdCl9Y2F0Y2goZSl7aWYoIXRoaXMudXNlcil0aHJvdyBlO1JlKGUsdCwnZ2V0dGVyIGZvciB3YXRjaGVyIFwiJyt0aGlzLmV4cHJlc3Npb24rJ1wiJyl9ZmluYWxseXt0aGlzLmRlZXAmJmV0KGUpLGZlKCksdGhpcy5jbGVhbnVwRGVwcygpfXJldHVybiBlfSxmbi5wcm90b3R5cGUuYWRkRGVwPWZ1bmN0aW9uKGUpe3ZhciB0PWUuaWQ7dGhpcy5uZXdEZXBJZHMuaGFzKHQpfHwodGhpcy5uZXdEZXBJZHMuYWRkKHQpLHRoaXMubmV3RGVwcy5wdXNoKGUpLHRoaXMuZGVwSWRzLmhhcyh0KXx8ZS5hZGRTdWIodGhpcykpfSxmbi5wcm90b3R5cGUuY2xlYW51cERlcHM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5kZXBzLmxlbmd0aDtlLS07KXt2YXIgdD10aGlzLmRlcHNbZV07dGhpcy5uZXdEZXBJZHMuaGFzKHQuaWQpfHx0LnJlbW92ZVN1Yih0aGlzKX12YXIgbj10aGlzLmRlcElkczt0aGlzLmRlcElkcz10aGlzLm5ld0RlcElkcyx0aGlzLm5ld0RlcElkcz1uLHRoaXMubmV3RGVwSWRzLmNsZWFyKCksbj10aGlzLmRlcHMsdGhpcy5kZXBzPXRoaXMubmV3RGVwcyx0aGlzLm5ld0RlcHM9bix0aGlzLm5ld0RlcHMubGVuZ3RoPTB9LGZuLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt0aGlzLmxhenk/dGhpcy5kaXJ0eT0hMDp0aGlzLnN5bmM/dGhpcy5ydW4oKTpmdW5jdGlvbihlKXt2YXIgdD1lLmlkO2lmKG51bGw9PXRuW3RdKXtpZih0blt0XT0hMCxybil7Zm9yKHZhciBuPVF0Lmxlbmd0aC0xO24+b24mJlF0W25dLmlkPmUuaWQ7KW4tLTtRdC5zcGxpY2UobisxLDAsZSl9ZWxzZSBRdC5wdXNoKGUpO25ufHwobm49ITAsWWUodW4pKX19KHRoaXMpfSxmbi5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7aWYodGhpcy5hY3RpdmUpe3ZhciBlPXRoaXMuZ2V0KCk7aWYoZSE9PXRoaXMudmFsdWV8fG8oZSl8fHRoaXMuZGVlcCl7dmFyIHQ9dGhpcy52YWx1ZTtpZih0aGlzLnZhbHVlPWUsdGhpcy51c2VyKXRyeXt0aGlzLmNiLmNhbGwodGhpcy52bSxlLHQpfWNhdGNoKGUpe1JlKGUsdGhpcy52bSwnY2FsbGJhY2sgZm9yIHdhdGNoZXIgXCInK3RoaXMuZXhwcmVzc2lvbisnXCInKX1lbHNlIHRoaXMuY2IuY2FsbCh0aGlzLnZtLGUsdCl9fX0sZm4ucHJvdG90eXBlLmV2YWx1YXRlPWZ1bmN0aW9uKCl7dGhpcy52YWx1ZT10aGlzLmdldCgpLHRoaXMuZGlydHk9ITF9LGZuLnByb3RvdHlwZS5kZXBlbmQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5kZXBzLmxlbmd0aDtlLS07KXRoaXMuZGVwc1tlXS5kZXBlbmQoKX0sZm4ucHJvdG90eXBlLnRlYXJkb3duPWZ1bmN0aW9uKCl7aWYodGhpcy5hY3RpdmUpe3RoaXMudm0uX2lzQmVpbmdEZXN0cm95ZWR8fGgodGhpcy52bS5fd2F0Y2hlcnMsdGhpcyk7Zm9yKHZhciBlPXRoaXMuZGVwcy5sZW5ndGg7ZS0tOyl0aGlzLmRlcHNbZV0ucmVtb3ZlU3ViKHRoaXMpO3RoaXMuYWN0aXZlPSExfX07dmFyIHBuPXtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6UyxzZXQ6U307ZnVuY3Rpb24gZG4oZSx0LG4pe3BuLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzW3RdW25dfSxwbi5zZXQ9ZnVuY3Rpb24oZSl7dGhpc1t0XVtuXT1lfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuLHBuKX1mdW5jdGlvbiB2bihlKXtlLl93YXRjaGVycz1bXTt2YXIgdD1lLiRvcHRpb25zO3QucHJvcHMmJmZ1bmN0aW9uKGUsdCl7dmFyIG49ZS4kb3B0aW9ucy5wcm9wc0RhdGF8fHt9LHI9ZS5fcHJvcHM9e30saT1lLiRvcHRpb25zLl9wcm9wS2V5cz1bXTtlLiRwYXJlbnQmJiRlKCExKTt2YXIgbz1mdW5jdGlvbihvKXtpLnB1c2gobyk7dmFyIGE9TWUobyx0LG4sZSk7eGUocixvLGEpLG8gaW4gZXx8ZG4oZSxcIl9wcm9wc1wiLG8pfTtmb3IodmFyIGEgaW4gdClvKGEpOyRlKCEwKX0oZSx0LnByb3BzKSx0Lm1ldGhvZHMmJmZ1bmN0aW9uKGUsdCl7ZS4kb3B0aW9ucy5wcm9wcztmb3IodmFyIG4gaW4gdCllW25dPVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRbbl0/Uzp4KHRbbl0sZSl9KGUsdC5tZXRob2RzKSx0LmRhdGE/ZnVuY3Rpb24oZSl7dmFyIHQ9ZS4kb3B0aW9ucy5kYXRhO3ModD1lLl9kYXRhPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/ZnVuY3Rpb24oZSx0KXtsZSgpO3RyeXtyZXR1cm4gZS5jYWxsKHQsdCl9Y2F0Y2goZSl7cmV0dXJuIFJlKGUsdCxcImRhdGEoKVwiKSx7fX1maW5hbGx5e2ZlKCl9fSh0LGUpOnR8fHt9KXx8KHQ9e30pO3ZhciBuPU9iamVjdC5rZXlzKHQpLHI9ZS4kb3B0aW9ucy5wcm9wcyxpPShlLiRvcHRpb25zLm1ldGhvZHMsbi5sZW5ndGgpO2Zvcig7aS0tOyl7dmFyIG89bltpXTtyJiZ5KHIsbyl8fChhPXZvaWQgMCwzNiE9PShhPShvK1wiXCIpLmNoYXJDb2RlQXQoMCkpJiY5NSE9PWEmJmRuKGUsXCJfZGF0YVwiLG8pKX12YXIgYTtDZSh0LCEwKX0oZSk6Q2UoZS5fZGF0YT17fSwhMCksdC5jb21wdXRlZCYmZnVuY3Rpb24oZSx0KXt2YXIgbj1lLl9jb21wdXRlZFdhdGNoZXJzPU9iamVjdC5jcmVhdGUobnVsbCkscj10ZSgpO2Zvcih2YXIgaSBpbiB0KXt2YXIgbz10W2ldLGE9XCJmdW5jdGlvblwiPT10eXBlb2Ygbz9vOm8uZ2V0O3J8fChuW2ldPW5ldyBmbihlLGF8fFMsUyxobikpLGkgaW4gZXx8bW4oZSxpLG8pfX0oZSx0LmNvbXB1dGVkKSx0LndhdGNoJiZ0LndhdGNoIT09WSYmZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl7dmFyIHI9dFtuXTtpZihBcnJheS5pc0FycmF5KHIpKWZvcih2YXIgaT0wO2k8ci5sZW5ndGg7aSsrKV9uKGUsbixyW2ldKTtlbHNlIF9uKGUsbixyKX19KGUsdC53YXRjaCl9dmFyIGhuPXtsYXp5OiEwfTtmdW5jdGlvbiBtbihlLHQsbil7dmFyIHI9IXRlKCk7XCJmdW5jdGlvblwiPT10eXBlb2Ygbj8ocG4uZ2V0PXI/eW4odCk6Z24obikscG4uc2V0PVMpOihwbi5nZXQ9bi5nZXQ/ciYmITEhPT1uLmNhY2hlP3luKHQpOmduKG4uZ2V0KTpTLHBuLnNldD1uLnNldHx8UyksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxwbil9ZnVuY3Rpb24geW4oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fY29tcHV0ZWRXYXRjaGVycyYmdGhpcy5fY29tcHV0ZWRXYXRjaGVyc1tlXTtpZih0KXJldHVybiB0LmRpcnR5JiZ0LmV2YWx1YXRlKCksY2UudGFyZ2V0JiZ0LmRlcGVuZCgpLHQudmFsdWV9fWZ1bmN0aW9uIGduKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyx0aGlzKX19ZnVuY3Rpb24gX24oZSx0LG4scil7cmV0dXJuIHMobikmJihyPW4sbj1uLmhhbmRsZXIpLFwic3RyaW5nXCI9PXR5cGVvZiBuJiYobj1lW25dKSxlLiR3YXRjaCh0LG4scil9dmFyIGJuPTA7ZnVuY3Rpb24gJG4oZSl7dmFyIHQ9ZS5vcHRpb25zO2lmKGUuc3VwZXIpe3ZhciBuPSRuKGUuc3VwZXIpO2lmKG4hPT1lLnN1cGVyT3B0aW9ucyl7ZS5zdXBlck9wdGlvbnM9bjt2YXIgcj1mdW5jdGlvbihlKXt2YXIgdCxuPWUub3B0aW9ucyxyPWUuc2VhbGVkT3B0aW9ucztmb3IodmFyIGkgaW4gbiluW2ldIT09cltpXSYmKHR8fCh0PXt9KSx0W2ldPW5baV0pO3JldHVybiB0fShlKTtyJiZBKGUuZXh0ZW5kT3B0aW9ucyxyKSwodD1lLm9wdGlvbnM9RGUobixlLmV4dGVuZE9wdGlvbnMpKS5uYW1lJiYodC5jb21wb25lbnRzW3QubmFtZV09ZSl9fXJldHVybiB0fWZ1bmN0aW9uIHduKGUpe3RoaXMuX2luaXQoZSl9ZnVuY3Rpb24gQ24oZSl7ZS5jaWQ9MDt2YXIgdD0xO2UuZXh0ZW5kPWZ1bmN0aW9uKGUpe2U9ZXx8e307dmFyIG49dGhpcyxyPW4uY2lkLGk9ZS5fQ3Rvcnx8KGUuX0N0b3I9e30pO2lmKGlbcl0pcmV0dXJuIGlbcl07dmFyIG89ZS5uYW1lfHxuLm9wdGlvbnMubmFtZSxhPWZ1bmN0aW9uKGUpe3RoaXMuX2luaXQoZSl9O3JldHVybihhLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG4ucHJvdG90eXBlKSkuY29uc3RydWN0b3I9YSxhLmNpZD10KyssYS5vcHRpb25zPURlKG4ub3B0aW9ucyxlKSxhLnN1cGVyPW4sYS5vcHRpb25zLnByb3BzJiZmdW5jdGlvbihlKXt2YXIgdD1lLm9wdGlvbnMucHJvcHM7Zm9yKHZhciBuIGluIHQpZG4oZS5wcm90b3R5cGUsXCJfcHJvcHNcIixuKX0oYSksYS5vcHRpb25zLmNvbXB1dGVkJiZmdW5jdGlvbihlKXt2YXIgdD1lLm9wdGlvbnMuY29tcHV0ZWQ7Zm9yKHZhciBuIGluIHQpbW4oZS5wcm90b3R5cGUsbix0W25dKX0oYSksYS5leHRlbmQ9bi5leHRlbmQsYS5taXhpbj1uLm1peGluLGEudXNlPW4udXNlLE0uZm9yRWFjaChmdW5jdGlvbihlKXthW2VdPW5bZV19KSxvJiYoYS5vcHRpb25zLmNvbXBvbmVudHNbb109YSksYS5zdXBlck9wdGlvbnM9bi5vcHRpb25zLGEuZXh0ZW5kT3B0aW9ucz1lLGEuc2VhbGVkT3B0aW9ucz1BKHt9LGEub3B0aW9ucyksaVtyXT1hLGF9fWZ1bmN0aW9uIHhuKGUpe3JldHVybiBlJiYoZS5DdG9yLm9wdGlvbnMubmFtZXx8ZS50YWcpfWZ1bmN0aW9uIGtuKGUsdCl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSk/ZS5pbmRleE9mKHQpPi0xOlwic3RyaW5nXCI9PXR5cGVvZiBlP2Uuc3BsaXQoXCIsXCIpLmluZGV4T2YodCk+LTE6KG49ZSxcIltvYmplY3QgUmVnRXhwXVwiPT09YS5jYWxsKG4pJiZlLnRlc3QodCkpO3ZhciBufWZ1bmN0aW9uIEFuKGUsdCl7dmFyIG49ZS5jYWNoZSxyPWUua2V5cyxpPWUuX3Zub2RlO2Zvcih2YXIgbyBpbiBuKXt2YXIgYT1uW29dO2lmKGEpe3ZhciBzPXhuKGEuY29tcG9uZW50T3B0aW9ucyk7cyYmIXQocykmJk9uKG4sbyxyLGkpfX19ZnVuY3Rpb24gT24oZSx0LG4scil7dmFyIGk9ZVt0XTshaXx8ciYmaS50YWc9PT1yLnRhZ3x8aS5jb21wb25lbnRJbnN0YW5jZS4kZGVzdHJveSgpLGVbdF09bnVsbCxoKG4sdCl9IWZ1bmN0aW9uKHQpe3QucHJvdG90eXBlLl9pbml0PWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7bi5fdWlkPWJuKyssbi5faXNWdWU9ITAsdCYmdC5faXNDb21wb25lbnQ/ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLiRvcHRpb25zPU9iamVjdC5jcmVhdGUoZS5jb25zdHJ1Y3Rvci5vcHRpb25zKSxyPXQuX3BhcmVudFZub2RlO24ucGFyZW50PXQucGFyZW50LG4uX3BhcmVudFZub2RlPXI7dmFyIGk9ci5jb21wb25lbnRPcHRpb25zO24ucHJvcHNEYXRhPWkucHJvcHNEYXRhLG4uX3BhcmVudExpc3RlbmVycz1pLmxpc3RlbmVycyxuLl9yZW5kZXJDaGlsZHJlbj1pLmNoaWxkcmVuLG4uX2NvbXBvbmVudFRhZz1pLnRhZyx0LnJlbmRlciYmKG4ucmVuZGVyPXQucmVuZGVyLG4uc3RhdGljUmVuZGVyRm5zPXQuc3RhdGljUmVuZGVyRm5zKX0obix0KTpuLiRvcHRpb25zPURlKCRuKG4uY29uc3RydWN0b3IpLHR8fHt9LG4pLG4uX3JlbmRlclByb3h5PW4sbi5fc2VsZj1uLGZ1bmN0aW9uKGUpe3ZhciB0PWUuJG9wdGlvbnMsbj10LnBhcmVudDtpZihuJiYhdC5hYnN0cmFjdCl7Zm9yKDtuLiRvcHRpb25zLmFic3RyYWN0JiZuLiRwYXJlbnQ7KW49bi4kcGFyZW50O24uJGNoaWxkcmVuLnB1c2goZSl9ZS4kcGFyZW50PW4sZS4kcm9vdD1uP24uJHJvb3Q6ZSxlLiRjaGlsZHJlbj1bXSxlLiRyZWZzPXt9LGUuX3dhdGNoZXI9bnVsbCxlLl9pbmFjdGl2ZT1udWxsLGUuX2RpcmVjdEluYWN0aXZlPSExLGUuX2lzTW91bnRlZD0hMSxlLl9pc0Rlc3Ryb3llZD0hMSxlLl9pc0JlaW5nRGVzdHJveWVkPSExfShuKSxmdW5jdGlvbihlKXtlLl9ldmVudHM9T2JqZWN0LmNyZWF0ZShudWxsKSxlLl9oYXNIb29rRXZlbnQ9ITE7dmFyIHQ9ZS4kb3B0aW9ucy5fcGFyZW50TGlzdGVuZXJzO3QmJnF0KGUsdCl9KG4pLGZ1bmN0aW9uKHQpe3QuX3Zub2RlPW51bGwsdC5fc3RhdGljVHJlZXM9bnVsbDt2YXIgbj10LiRvcHRpb25zLHI9dC4kdm5vZGU9bi5fcGFyZW50Vm5vZGUsaT1yJiZyLmNvbnRleHQ7dC4kc2xvdHM9dXQobi5fcmVuZGVyQ2hpbGRyZW4saSksdC4kc2NvcGVkU2xvdHM9ZSx0Ll9jPWZ1bmN0aW9uKGUsbixyLGkpe3JldHVybiBQdCh0LGUsbixyLGksITEpfSx0LiRjcmVhdGVFbGVtZW50PWZ1bmN0aW9uKGUsbixyLGkpe3JldHVybiBQdCh0LGUsbixyLGksITApfTt2YXIgbz1yJiZyLmRhdGE7eGUodCxcIiRhdHRyc1wiLG8mJm8uYXR0cnN8fGUsbnVsbCwhMCkseGUodCxcIiRsaXN0ZW5lcnNcIixuLl9wYXJlbnRMaXN0ZW5lcnN8fGUsbnVsbCwhMCl9KG4pLFl0KG4sXCJiZWZvcmVDcmVhdGVcIiksZnVuY3Rpb24oZSl7dmFyIHQ9Y3QoZS4kb3B0aW9ucy5pbmplY3QsZSk7dCYmKCRlKCExKSxPYmplY3Qua2V5cyh0KS5mb3JFYWNoKGZ1bmN0aW9uKG4pe3hlKGUsbix0W25dKX0pLCRlKCEwKSl9KG4pLHZuKG4pLGZ1bmN0aW9uKGUpe3ZhciB0PWUuJG9wdGlvbnMucHJvdmlkZTt0JiYoZS5fcHJvdmlkZWQ9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90LmNhbGwoZSk6dCl9KG4pLFl0KG4sXCJjcmVhdGVkXCIpLG4uJG9wdGlvbnMuZWwmJm4uJG1vdW50KG4uJG9wdGlvbnMuZWwpfX0od24pLGZ1bmN0aW9uKGUpe3ZhciB0PXtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YX19LG49e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9wc319O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIiRkYXRhXCIsdCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiJHByb3BzXCIsbiksZS5wcm90b3R5cGUuJHNldD1rZSxlLnByb3RvdHlwZS4kZGVsZXRlPUFlLGUucHJvdG90eXBlLiR3YXRjaD1mdW5jdGlvbihlLHQsbil7aWYocyh0KSlyZXR1cm4gX24odGhpcyxlLHQsbik7KG49bnx8e30pLnVzZXI9ITA7dmFyIHI9bmV3IGZuKHRoaXMsZSx0LG4pO2lmKG4uaW1tZWRpYXRlKXRyeXt0LmNhbGwodGhpcyxyLnZhbHVlKX1jYXRjaChlKXtSZShlLHRoaXMsJ2NhbGxiYWNrIGZvciBpbW1lZGlhdGUgd2F0Y2hlciBcIicrci5leHByZXNzaW9uKydcIicpfXJldHVybiBmdW5jdGlvbigpe3IudGVhcmRvd24oKX19fSh3biksZnVuY3Rpb24oZSl7dmFyIHQ9L15ob29rOi87ZS5wcm90b3R5cGUuJG9uPWZ1bmN0aW9uKGUsbil7dmFyIHI9dGhpcztpZihBcnJheS5pc0FycmF5KGUpKWZvcih2YXIgaT0wLG89ZS5sZW5ndGg7aTxvO2krKylyLiRvbihlW2ldLG4pO2Vsc2Uoci5fZXZlbnRzW2VdfHwoci5fZXZlbnRzW2VdPVtdKSkucHVzaChuKSx0LnRlc3QoZSkmJihyLl9oYXNIb29rRXZlbnQ9ITApO3JldHVybiByfSxlLnByb3RvdHlwZS4kb25jZT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7ZnVuY3Rpb24gcigpe24uJG9mZihlLHIpLHQuYXBwbHkobixhcmd1bWVudHMpfXJldHVybiByLmZuPXQsbi4kb24oZSxyKSxufSxlLnByb3RvdHlwZS4kb2ZmPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gbi5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCksbjtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHI9MCxpPWUubGVuZ3RoO3I8aTtyKyspbi4kb2ZmKGVbcl0sdCk7cmV0dXJuIG59dmFyIG8sYT1uLl9ldmVudHNbZV07aWYoIWEpcmV0dXJuIG47aWYoIXQpcmV0dXJuIG4uX2V2ZW50c1tlXT1udWxsLG47Zm9yKHZhciBzPWEubGVuZ3RoO3MtLTspaWYoKG89YVtzXSk9PT10fHxvLmZuPT09dCl7YS5zcGxpY2UocywxKTticmVha31yZXR1cm4gbn0sZS5wcm90b3R5cGUuJGVtaXQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZXZlbnRzW2VdO2lmKHQpe3Q9dC5sZW5ndGg+MT9rKHQpOnQ7Zm9yKHZhciBuPWsoYXJndW1lbnRzLDEpLHI9J2V2ZW50IGhhbmRsZXIgZm9yIFwiJytlKydcIicsaT0wLG89dC5sZW5ndGg7aTxvO2krKylIZSh0W2ldLHRoaXMsbix0aGlzLHIpfXJldHVybiB0aGlzfX0od24pLGZ1bmN0aW9uKGUpe2UucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLHI9bi4kZWwsaT1uLl92bm9kZSxvPVp0KG4pO24uX3Zub2RlPWUsbi4kZWw9aT9uLl9fcGF0Y2hfXyhpLGUpOm4uX19wYXRjaF9fKG4uJGVsLGUsdCwhMSksbygpLHImJihyLl9fdnVlX189bnVsbCksbi4kZWwmJihuLiRlbC5fX3Z1ZV9fPW4pLG4uJHZub2RlJiZuLiRwYXJlbnQmJm4uJHZub2RlPT09bi4kcGFyZW50Ll92bm9kZSYmKG4uJHBhcmVudC4kZWw9bi4kZWwpfSxlLnByb3RvdHlwZS4kZm9yY2VVcGRhdGU9ZnVuY3Rpb24oKXt0aGlzLl93YXRjaGVyJiZ0aGlzLl93YXRjaGVyLnVwZGF0ZSgpfSxlLnByb3RvdHlwZS4kZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYoIWUuX2lzQmVpbmdEZXN0cm95ZWQpe1l0KGUsXCJiZWZvcmVEZXN0cm95XCIpLGUuX2lzQmVpbmdEZXN0cm95ZWQ9ITA7dmFyIHQ9ZS4kcGFyZW50OyF0fHx0Ll9pc0JlaW5nRGVzdHJveWVkfHxlLiRvcHRpb25zLmFic3RyYWN0fHxoKHQuJGNoaWxkcmVuLGUpLGUuX3dhdGNoZXImJmUuX3dhdGNoZXIudGVhcmRvd24oKTtmb3IodmFyIG49ZS5fd2F0Y2hlcnMubGVuZ3RoO24tLTspZS5fd2F0Y2hlcnNbbl0udGVhcmRvd24oKTtlLl9kYXRhLl9fb2JfXyYmZS5fZGF0YS5fX29iX18udm1Db3VudC0tLGUuX2lzRGVzdHJveWVkPSEwLGUuX19wYXRjaF9fKGUuX3Zub2RlLG51bGwpLFl0KGUsXCJkZXN0cm95ZWRcIiksZS4kb2ZmKCksZS4kZWwmJihlLiRlbC5fX3Z1ZV9fPW51bGwpLGUuJHZub2RlJiYoZS4kdm5vZGUucGFyZW50PW51bGwpfX19KHduKSxmdW5jdGlvbihlKXtTdChlLnByb3RvdHlwZSksZS5wcm90b3R5cGUuJG5leHRUaWNrPWZ1bmN0aW9uKGUpe3JldHVybiBZZShlLHRoaXMpfSxlLnByb3RvdHlwZS5fcmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLG49dC4kb3B0aW9ucyxyPW4ucmVuZGVyLGk9bi5fcGFyZW50Vm5vZGU7aSYmKHQuJHNjb3BlZFNsb3RzPWZ0KGkuZGF0YS5zY29wZWRTbG90cyx0LiRzbG90cyx0LiRzY29wZWRTbG90cykpLHQuJHZub2RlPWk7dHJ5e0h0PXQsZT1yLmNhbGwodC5fcmVuZGVyUHJveHksdC4kY3JlYXRlRWxlbWVudCl9Y2F0Y2gobil7UmUobix0LFwicmVuZGVyXCIpLGU9dC5fdm5vZGV9ZmluYWxseXtIdD1udWxsfXJldHVybiBBcnJheS5pc0FycmF5KGUpJiYxPT09ZS5sZW5ndGgmJihlPWVbMF0pLGUgaW5zdGFuY2VvZiBwZXx8KGU9dmUoKSksZS5wYXJlbnQ9aSxlfX0od24pO3ZhciBTbj1bU3RyaW5nLFJlZ0V4cCxBcnJheV0sVG49e0tlZXBBbGl2ZTp7bmFtZTpcImtlZXAtYWxpdmVcIixhYnN0cmFjdDohMCxwcm9wczp7aW5jbHVkZTpTbixleGNsdWRlOlNuLG1heDpbU3RyaW5nLE51bWJlcl19LGNyZWF0ZWQ6ZnVuY3Rpb24oKXt0aGlzLmNhY2hlPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5rZXlzPVtdfSxkZXN0cm95ZWQ6ZnVuY3Rpb24oKXtmb3IodmFyIGUgaW4gdGhpcy5jYWNoZSlPbih0aGlzLmNhY2hlLGUsdGhpcy5rZXlzKX0sbW91bnRlZDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy4kd2F0Y2goXCJpbmNsdWRlXCIsZnVuY3Rpb24odCl7QW4oZSxmdW5jdGlvbihlKXtyZXR1cm4ga24odCxlKX0pfSksdGhpcy4kd2F0Y2goXCJleGNsdWRlXCIsZnVuY3Rpb24odCl7QW4oZSxmdW5jdGlvbihlKXtyZXR1cm4ha24odCxlKX0pfSl9LHJlbmRlcjpmdW5jdGlvbigpe3ZhciBlPXRoaXMuJHNsb3RzLmRlZmF1bHQsdD16dChlKSxuPXQmJnQuY29tcG9uZW50T3B0aW9ucztpZihuKXt2YXIgcj14bihuKSxpPXRoaXMuaW5jbHVkZSxvPXRoaXMuZXhjbHVkZTtpZihpJiYoIXJ8fCFrbihpLHIpKXx8byYmciYma24obyxyKSlyZXR1cm4gdDt2YXIgYT10aGlzLmNhY2hlLHM9dGhpcy5rZXlzLGM9bnVsbD09dC5rZXk/bi5DdG9yLmNpZCsobi50YWc/XCI6OlwiK24udGFnOlwiXCIpOnQua2V5O2FbY10/KHQuY29tcG9uZW50SW5zdGFuY2U9YVtjXS5jb21wb25lbnRJbnN0YW5jZSxoKHMsYykscy5wdXNoKGMpKTooYVtjXT10LHMucHVzaChjKSx0aGlzLm1heCYmcy5sZW5ndGg+cGFyc2VJbnQodGhpcy5tYXgpJiZPbihhLHNbMF0scyx0aGlzLl92bm9kZSkpLHQuZGF0YS5rZWVwQWxpdmU9ITB9cmV0dXJuIHR8fGUmJmVbMF19fX07IWZ1bmN0aW9uKGUpe3ZhciB0PXtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRn19O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiY29uZmlnXCIsdCksZS51dGlsPXt3YXJuOmFlLGV4dGVuZDpBLG1lcmdlT3B0aW9uczpEZSxkZWZpbmVSZWFjdGl2ZTp4ZX0sZS5zZXQ9a2UsZS5kZWxldGU9QWUsZS5uZXh0VGljaz1ZZSxlLm9ic2VydmFibGU9ZnVuY3Rpb24oZSl7cmV0dXJuIENlKGUpLGV9LGUub3B0aW9ucz1PYmplY3QuY3JlYXRlKG51bGwpLE0uZm9yRWFjaChmdW5jdGlvbih0KXtlLm9wdGlvbnNbdCtcInNcIl09T2JqZWN0LmNyZWF0ZShudWxsKX0pLGUub3B0aW9ucy5fYmFzZT1lLEEoZS5vcHRpb25zLmNvbXBvbmVudHMsVG4pLGZ1bmN0aW9uKGUpe2UudXNlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2luc3RhbGxlZFBsdWdpbnN8fCh0aGlzLl9pbnN0YWxsZWRQbHVnaW5zPVtdKTtpZih0LmluZGV4T2YoZSk+LTEpcmV0dXJuIHRoaXM7dmFyIG49ayhhcmd1bWVudHMsMSk7cmV0dXJuIG4udW5zaGlmdCh0aGlzKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmluc3RhbGw/ZS5pbnN0YWxsLmFwcGx5KGUsbik6XCJmdW5jdGlvblwiPT10eXBlb2YgZSYmZS5hcHBseShudWxsLG4pLHQucHVzaChlKSx0aGlzfX0oZSksZnVuY3Rpb24oZSl7ZS5taXhpbj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5vcHRpb25zPURlKHRoaXMub3B0aW9ucyxlKSx0aGlzfX0oZSksQ24oZSksZnVuY3Rpb24oZSl7TS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2VbdF09ZnVuY3Rpb24oZSxuKXtyZXR1cm4gbj8oXCJjb21wb25lbnRcIj09PXQmJnMobikmJihuLm5hbWU9bi5uYW1lfHxlLG49dGhpcy5vcHRpb25zLl9iYXNlLmV4dGVuZChuKSksXCJkaXJlY3RpdmVcIj09PXQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIG4mJihuPXtiaW5kOm4sdXBkYXRlOm59KSx0aGlzLm9wdGlvbnNbdCtcInNcIl1bZV09bixuKTp0aGlzLm9wdGlvbnNbdCtcInNcIl1bZV19fSl9KGUpfSh3biksT2JqZWN0LmRlZmluZVByb3BlcnR5KHduLnByb3RvdHlwZSxcIiRpc1NlcnZlclwiLHtnZXQ6dGV9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkod24ucHJvdG90eXBlLFwiJHNzckNvbnRleHRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJHZub2RlJiZ0aGlzLiR2bm9kZS5zc3JDb250ZXh0fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3bixcIkZ1bmN0aW9uYWxSZW5kZXJDb250ZXh0XCIse3ZhbHVlOlR0fSksd24udmVyc2lvbj1cIjIuNi4xMlwiO3ZhciBFbj1wKFwic3R5bGUsY2xhc3NcIiksTm49cChcImlucHV0LHRleHRhcmVhLG9wdGlvbixzZWxlY3QscHJvZ3Jlc3NcIiksam49ZnVuY3Rpb24oZSx0LG4pe3JldHVyblwidmFsdWVcIj09PW4mJk5uKGUpJiZcImJ1dHRvblwiIT09dHx8XCJzZWxlY3RlZFwiPT09biYmXCJvcHRpb25cIj09PWV8fFwiY2hlY2tlZFwiPT09biYmXCJpbnB1dFwiPT09ZXx8XCJtdXRlZFwiPT09biYmXCJ2aWRlb1wiPT09ZX0sRG49cChcImNvbnRlbnRlZGl0YWJsZSxkcmFnZ2FibGUsc3BlbGxjaGVja1wiKSxMbj1wKFwiZXZlbnRzLGNhcmV0LHR5cGluZyxwbGFpbnRleHQtb25seVwiKSxNbj1mdW5jdGlvbihlLHQpe3JldHVybiBIbih0KXx8XCJmYWxzZVwiPT09dD9cImZhbHNlXCI6XCJjb250ZW50ZWRpdGFibGVcIj09PWUmJkxuKHQpP3Q6XCJ0cnVlXCJ9LEluPXAoXCJhbGxvd2Z1bGxzY3JlZW4sYXN5bmMsYXV0b2ZvY3VzLGF1dG9wbGF5LGNoZWNrZWQsY29tcGFjdCxjb250cm9scyxkZWNsYXJlLGRlZmF1bHQsZGVmYXVsdGNoZWNrZWQsZGVmYXVsdG11dGVkLGRlZmF1bHRzZWxlY3RlZCxkZWZlcixkaXNhYmxlZCxlbmFibGVkLGZvcm1ub3ZhbGlkYXRlLGhpZGRlbixpbmRldGVybWluYXRlLGluZXJ0LGlzbWFwLGl0ZW1zY29wZSxsb29wLG11bHRpcGxlLG11dGVkLG5vaHJlZixub3Jlc2l6ZSxub3NoYWRlLG5vdmFsaWRhdGUsbm93cmFwLG9wZW4scGF1c2VvbmV4aXQscmVhZG9ubHkscmVxdWlyZWQscmV2ZXJzZWQsc2NvcGVkLHNlYW1sZXNzLHNlbGVjdGVkLHNvcnRhYmxlLHRyYW5zbGF0ZSx0cnVlc3BlZWQsdHlwZW11c3RtYXRjaCx2aXNpYmxlXCIpLEZuPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLFBuPWZ1bmN0aW9uKGUpe3JldHVyblwiOlwiPT09ZS5jaGFyQXQoNSkmJlwieGxpbmtcIj09PWUuc2xpY2UoMCw1KX0sUm49ZnVuY3Rpb24oZSl7cmV0dXJuIFBuKGUpP2Uuc2xpY2UoNixlLmxlbmd0aCk6XCJcIn0sSG49ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWV8fCExPT09ZX07ZnVuY3Rpb24gQm4oZSl7Zm9yKHZhciB0PWUuZGF0YSxyPWUsaT1lO24oaS5jb21wb25lbnRJbnN0YW5jZSk7KShpPWkuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlKSYmaS5kYXRhJiYodD1VbihpLmRhdGEsdCkpO2Zvcig7bihyPXIucGFyZW50KTspciYmci5kYXRhJiYodD1Vbih0LHIuZGF0YSkpO3JldHVybiBmdW5jdGlvbihlLHQpe2lmKG4oZSl8fG4odCkpcmV0dXJuIHpuKGUsVm4odCkpO3JldHVyblwiXCJ9KHQuc3RhdGljQ2xhc3MsdC5jbGFzcyl9ZnVuY3Rpb24gVW4oZSx0KXtyZXR1cm57c3RhdGljQ2xhc3M6em4oZS5zdGF0aWNDbGFzcyx0LnN0YXRpY0NsYXNzKSxjbGFzczpuKGUuY2xhc3MpP1tlLmNsYXNzLHQuY2xhc3NdOnQuY2xhc3N9fWZ1bmN0aW9uIHpuKGUsdCl7cmV0dXJuIGU/dD9lK1wiIFwiK3Q6ZTp0fHxcIlwifWZ1bmN0aW9uIFZuKGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpP2Z1bmN0aW9uKGUpe2Zvcih2YXIgdCxyPVwiXCIsaT0wLG89ZS5sZW5ndGg7aTxvO2krKyluKHQ9Vm4oZVtpXSkpJiZcIlwiIT09dCYmKHImJihyKz1cIiBcIikscis9dCk7cmV0dXJuIHJ9KGUpOm8oZSk/ZnVuY3Rpb24oZSl7dmFyIHQ9XCJcIjtmb3IodmFyIG4gaW4gZSllW25dJiYodCYmKHQrPVwiIFwiKSx0Kz1uKTtyZXR1cm4gdH0oZSk6XCJzdHJpbmdcIj09dHlwZW9mIGU/ZTpcIlwifXZhciBLbj17c3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixtYXRoOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwifSxKbj1wKFwiaHRtbCxib2R5LGJhc2UsaGVhZCxsaW5rLG1ldGEsc3R5bGUsdGl0bGUsYWRkcmVzcyxhcnRpY2xlLGFzaWRlLGZvb3RlcixoZWFkZXIsaDEsaDIsaDMsaDQsaDUsaDYsaGdyb3VwLG5hdixzZWN0aW9uLGRpdixkZCxkbCxkdCxmaWdjYXB0aW9uLGZpZ3VyZSxwaWN0dXJlLGhyLGltZyxsaSxtYWluLG9sLHAscHJlLHVsLGEsYixhYmJyLGJkaSxiZG8sYnIsY2l0ZSxjb2RlLGRhdGEsZGZuLGVtLGksa2JkLG1hcmsscSxycCxydCxydGMscnVieSxzLHNhbXAsc21hbGwsc3BhbixzdHJvbmcsc3ViLHN1cCx0aW1lLHUsdmFyLHdicixhcmVhLGF1ZGlvLG1hcCx0cmFjayx2aWRlbyxlbWJlZCxvYmplY3QscGFyYW0sc291cmNlLGNhbnZhcyxzY3JpcHQsbm9zY3JpcHQsZGVsLGlucyxjYXB0aW9uLGNvbCxjb2xncm91cCx0YWJsZSx0aGVhZCx0Ym9keSx0ZCx0aCx0cixidXR0b24sZGF0YWxpc3QsZmllbGRzZXQsZm9ybSxpbnB1dCxsYWJlbCxsZWdlbmQsbWV0ZXIsb3B0Z3JvdXAsb3B0aW9uLG91dHB1dCxwcm9ncmVzcyxzZWxlY3QsdGV4dGFyZWEsZGV0YWlscyxkaWFsb2csbWVudSxtZW51aXRlbSxzdW1tYXJ5LGNvbnRlbnQsZWxlbWVudCxzaGFkb3csdGVtcGxhdGUsYmxvY2txdW90ZSxpZnJhbWUsdGZvb3RcIikscW49cChcInN2ZyxhbmltYXRlLGNpcmNsZSxjbGlwcGF0aCxjdXJzb3IsZGVmcyxkZXNjLGVsbGlwc2UsZmlsdGVyLGZvbnQtZmFjZSxmb3JlaWduT2JqZWN0LGcsZ2x5cGgsaW1hZ2UsbGluZSxtYXJrZXIsbWFzayxtaXNzaW5nLWdseXBoLHBhdGgscGF0dGVybixwb2x5Z29uLHBvbHlsaW5lLHJlY3Qsc3dpdGNoLHN5bWJvbCx0ZXh0LHRleHRwYXRoLHRzcGFuLHVzZSx2aWV3XCIsITApLFduPWZ1bmN0aW9uKGUpe3JldHVybiBKbihlKXx8cW4oZSl9O2Z1bmN0aW9uIFpuKGUpe3JldHVybiBxbihlKT9cInN2Z1wiOlwibWF0aFwiPT09ZT9cIm1hdGhcIjp2b2lkIDB9dmFyIEduPU9iamVjdC5jcmVhdGUobnVsbCk7dmFyIFhuPXAoXCJ0ZXh0LG51bWJlcixwYXNzd29yZCxzZWFyY2gsZW1haWwsdGVsLHVybFwiKTtmdW5jdGlvbiBZbihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSl7dmFyIHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKTtyZXR1cm4gdHx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKX1yZXR1cm4gZX12YXIgUW49T2JqZWN0LmZyZWV6ZSh7Y3JlYXRlRWxlbWVudDpmdW5jdGlvbihlLHQpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZSk7cmV0dXJuXCJzZWxlY3RcIiE9PWU/bjoodC5kYXRhJiZ0LmRhdGEuYXR0cnMmJnZvaWQgMCE9PXQuZGF0YS5hdHRycy5tdWx0aXBsZSYmbi5zZXRBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiLFwibXVsdGlwbGVcIiksbil9LGNyZWF0ZUVsZW1lbnROUzpmdW5jdGlvbihlLHQpe3JldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoS25bZV0sdCl9LGNyZWF0ZVRleHROb2RlOmZ1bmN0aW9uKGUpe3JldHVybiBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShlKX0sY3JlYXRlQ29tbWVudDpmdW5jdGlvbihlKXtyZXR1cm4gZG9jdW1lbnQuY3JlYXRlQ29tbWVudChlKX0saW5zZXJ0QmVmb3JlOmZ1bmN0aW9uKGUsdCxuKXtlLmluc2VydEJlZm9yZSh0LG4pfSxyZW1vdmVDaGlsZDpmdW5jdGlvbihlLHQpe2UucmVtb3ZlQ2hpbGQodCl9LGFwcGVuZENoaWxkOmZ1bmN0aW9uKGUsdCl7ZS5hcHBlbmRDaGlsZCh0KX0scGFyZW50Tm9kZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5wYXJlbnROb2RlfSxuZXh0U2libGluZzpmdW5jdGlvbihlKXtyZXR1cm4gZS5uZXh0U2libGluZ30sdGFnTmFtZTpmdW5jdGlvbihlKXtyZXR1cm4gZS50YWdOYW1lfSxzZXRUZXh0Q29udGVudDpmdW5jdGlvbihlLHQpe2UudGV4dENvbnRlbnQ9dH0sc2V0U3R5bGVTY29wZTpmdW5jdGlvbihlLHQpe2Uuc2V0QXR0cmlidXRlKHQsXCJcIil9fSksZXI9e2NyZWF0ZTpmdW5jdGlvbihlLHQpe3RyKHQpfSx1cGRhdGU6ZnVuY3Rpb24oZSx0KXtlLmRhdGEucmVmIT09dC5kYXRhLnJlZiYmKHRyKGUsITApLHRyKHQpKX0sZGVzdHJveTpmdW5jdGlvbihlKXt0cihlLCEwKX19O2Z1bmN0aW9uIHRyKGUsdCl7dmFyIHI9ZS5kYXRhLnJlZjtpZihuKHIpKXt2YXIgaT1lLmNvbnRleHQsbz1lLmNvbXBvbmVudEluc3RhbmNlfHxlLmVsbSxhPWkuJHJlZnM7dD9BcnJheS5pc0FycmF5KGFbcl0pP2goYVtyXSxvKTphW3JdPT09byYmKGFbcl09dm9pZCAwKTplLmRhdGEucmVmSW5Gb3I/QXJyYXkuaXNBcnJheShhW3JdKT9hW3JdLmluZGV4T2Yobyk8MCYmYVtyXS5wdXNoKG8pOmFbcl09W29dOmFbcl09b319dmFyIG5yPW5ldyBwZShcIlwiLHt9LFtdKSxycj1bXCJjcmVhdGVcIixcImFjdGl2YXRlXCIsXCJ1cGRhdGVcIixcInJlbW92ZVwiLFwiZGVzdHJveVwiXTtmdW5jdGlvbiBpcihlLGkpe3JldHVybiBlLmtleT09PWkua2V5JiYoZS50YWc9PT1pLnRhZyYmZS5pc0NvbW1lbnQ9PT1pLmlzQ29tbWVudCYmbihlLmRhdGEpPT09bihpLmRhdGEpJiZmdW5jdGlvbihlLHQpe2lmKFwiaW5wdXRcIiE9PWUudGFnKXJldHVybiEwO3ZhciByLGk9bihyPWUuZGF0YSkmJm4ocj1yLmF0dHJzKSYmci50eXBlLG89bihyPXQuZGF0YSkmJm4ocj1yLmF0dHJzKSYmci50eXBlO3JldHVybiBpPT09b3x8WG4oaSkmJlhuKG8pfShlLGkpfHxyKGUuaXNBc3luY1BsYWNlaG9sZGVyKSYmZS5hc3luY0ZhY3Rvcnk9PT1pLmFzeW5jRmFjdG9yeSYmdChpLmFzeW5jRmFjdG9yeS5lcnJvcikpfWZ1bmN0aW9uIG9yKGUsdCxyKXt2YXIgaSxvLGE9e307Zm9yKGk9dDtpPD1yOysraSluKG89ZVtpXS5rZXkpJiYoYVtvXT1pKTtyZXR1cm4gYX12YXIgYXI9e2NyZWF0ZTpzcix1cGRhdGU6c3IsZGVzdHJveTpmdW5jdGlvbihlKXtzcihlLG5yKX19O2Z1bmN0aW9uIHNyKGUsdCl7KGUuZGF0YS5kaXJlY3RpdmVzfHx0LmRhdGEuZGlyZWN0aXZlcykmJmZ1bmN0aW9uKGUsdCl7dmFyIG4scixpLG89ZT09PW5yLGE9dD09PW5yLHM9dXIoZS5kYXRhLmRpcmVjdGl2ZXMsZS5jb250ZXh0KSxjPXVyKHQuZGF0YS5kaXJlY3RpdmVzLHQuY29udGV4dCksdT1bXSxsPVtdO2ZvcihuIGluIGMpcj1zW25dLGk9Y1tuXSxyPyhpLm9sZFZhbHVlPXIudmFsdWUsaS5vbGRBcmc9ci5hcmcsZnIoaSxcInVwZGF0ZVwiLHQsZSksaS5kZWYmJmkuZGVmLmNvbXBvbmVudFVwZGF0ZWQmJmwucHVzaChpKSk6KGZyKGksXCJiaW5kXCIsdCxlKSxpLmRlZiYmaS5kZWYuaW5zZXJ0ZWQmJnUucHVzaChpKSk7aWYodS5sZW5ndGgpe3ZhciBmPWZ1bmN0aW9uKCl7Zm9yKHZhciBuPTA7bjx1Lmxlbmd0aDtuKyspZnIodVtuXSxcImluc2VydGVkXCIsdCxlKX07bz9pdCh0LFwiaW5zZXJ0XCIsZik6ZigpfWwubGVuZ3RoJiZpdCh0LFwicG9zdHBhdGNoXCIsZnVuY3Rpb24oKXtmb3IodmFyIG49MDtuPGwubGVuZ3RoO24rKylmcihsW25dLFwiY29tcG9uZW50VXBkYXRlZFwiLHQsZSl9KTtpZighbylmb3IobiBpbiBzKWNbbl18fGZyKHNbbl0sXCJ1bmJpbmRcIixlLGUsYSl9KGUsdCl9dmFyIGNyPU9iamVjdC5jcmVhdGUobnVsbCk7ZnVuY3Rpb24gdXIoZSx0KXt2YXIgbixyLGk9T2JqZWN0LmNyZWF0ZShudWxsKTtpZighZSlyZXR1cm4gaTtmb3Iobj0wO248ZS5sZW5ndGg7bisrKShyPWVbbl0pLm1vZGlmaWVyc3x8KHIubW9kaWZpZXJzPWNyKSxpW2xyKHIpXT1yLHIuZGVmPUxlKHQuJG9wdGlvbnMsXCJkaXJlY3RpdmVzXCIsci5uYW1lKTtyZXR1cm4gaX1mdW5jdGlvbiBscihlKXtyZXR1cm4gZS5yYXdOYW1lfHxlLm5hbWUrXCIuXCIrT2JqZWN0LmtleXMoZS5tb2RpZmllcnN8fHt9KS5qb2luKFwiLlwiKX1mdW5jdGlvbiBmcihlLHQsbixyLGkpe3ZhciBvPWUuZGVmJiZlLmRlZlt0XTtpZihvKXRyeXtvKG4uZWxtLGUsbixyLGkpfWNhdGNoKHIpe1JlKHIsbi5jb250ZXh0LFwiZGlyZWN0aXZlIFwiK2UubmFtZStcIiBcIit0K1wiIGhvb2tcIil9fXZhciBwcj1bZXIsYXJdO2Z1bmN0aW9uIGRyKGUscil7dmFyIGk9ci5jb21wb25lbnRPcHRpb25zO2lmKCEobihpKSYmITE9PT1pLkN0b3Iub3B0aW9ucy5pbmhlcml0QXR0cnN8fHQoZS5kYXRhLmF0dHJzKSYmdChyLmRhdGEuYXR0cnMpKSl7dmFyIG8sYSxzPXIuZWxtLGM9ZS5kYXRhLmF0dHJzfHx7fSx1PXIuZGF0YS5hdHRyc3x8e307Zm9yKG8gaW4gbih1Ll9fb2JfXykmJih1PXIuZGF0YS5hdHRycz1BKHt9LHUpKSx1KWE9dVtvXSxjW29dIT09YSYmdnIocyxvLGEpO2ZvcihvIGluKHF8fFopJiZ1LnZhbHVlIT09Yy52YWx1ZSYmdnIocyxcInZhbHVlXCIsdS52YWx1ZSksYyl0KHVbb10pJiYoUG4obyk/cy5yZW1vdmVBdHRyaWJ1dGVOUyhGbixSbihvKSk6RG4obyl8fHMucmVtb3ZlQXR0cmlidXRlKG8pKX19ZnVuY3Rpb24gdnIoZSx0LG4pe2UudGFnTmFtZS5pbmRleE9mKFwiLVwiKT4tMT9ocihlLHQsbik6SW4odCk/SG4obik/ZS5yZW1vdmVBdHRyaWJ1dGUodCk6KG49XCJhbGxvd2Z1bGxzY3JlZW5cIj09PXQmJlwiRU1CRURcIj09PWUudGFnTmFtZT9cInRydWVcIjp0LGUuc2V0QXR0cmlidXRlKHQsbikpOkRuKHQpP2Uuc2V0QXR0cmlidXRlKHQsTW4odCxuKSk6UG4odCk/SG4obik/ZS5yZW1vdmVBdHRyaWJ1dGVOUyhGbixSbih0KSk6ZS5zZXRBdHRyaWJ1dGVOUyhGbix0LG4pOmhyKGUsdCxuKX1mdW5jdGlvbiBocihlLHQsbil7aWYoSG4obikpZS5yZW1vdmVBdHRyaWJ1dGUodCk7ZWxzZXtpZihxJiYhVyYmXCJURVhUQVJFQVwiPT09ZS50YWdOYW1lJiZcInBsYWNlaG9sZGVyXCI9PT10JiZcIlwiIT09biYmIWUuX19pZXBoKXt2YXIgcj1mdW5jdGlvbih0KXt0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImlucHV0XCIscil9O2UuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsciksZS5fX2llcGg9ITB9ZS5zZXRBdHRyaWJ1dGUodCxuKX19dmFyIG1yPXtjcmVhdGU6ZHIsdXBkYXRlOmRyfTtmdW5jdGlvbiB5cihlLHIpe3ZhciBpPXIuZWxtLG89ci5kYXRhLGE9ZS5kYXRhO2lmKCEodChvLnN0YXRpY0NsYXNzKSYmdChvLmNsYXNzKSYmKHQoYSl8fHQoYS5zdGF0aWNDbGFzcykmJnQoYS5jbGFzcykpKSl7dmFyIHM9Qm4ociksYz1pLl90cmFuc2l0aW9uQ2xhc3NlcztuKGMpJiYocz16bihzLFZuKGMpKSkscyE9PWkuX3ByZXZDbGFzcyYmKGkuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixzKSxpLl9wcmV2Q2xhc3M9cyl9fXZhciBncixfcixiciwkcix3cixDcix4cj17Y3JlYXRlOnlyLHVwZGF0ZTp5cn0sa3I9L1tcXHcpLitcXC1fJFxcXV0vO2Z1bmN0aW9uIEFyKGUpe3ZhciB0LG4scixpLG8sYT0hMSxzPSExLGM9ITEsdT0hMSxsPTAsZj0wLHA9MCxkPTA7Zm9yKHI9MDtyPGUubGVuZ3RoO3IrKylpZihuPXQsdD1lLmNoYXJDb2RlQXQociksYSkzOT09PXQmJjkyIT09biYmKGE9ITEpO2Vsc2UgaWYocykzND09PXQmJjkyIT09biYmKHM9ITEpO2Vsc2UgaWYoYyk5Nj09PXQmJjkyIT09biYmKGM9ITEpO2Vsc2UgaWYodSk0Nz09PXQmJjkyIT09biYmKHU9ITEpO2Vsc2UgaWYoMTI0IT09dHx8MTI0PT09ZS5jaGFyQ29kZUF0KHIrMSl8fDEyND09PWUuY2hhckNvZGVBdChyLTEpfHxsfHxmfHxwKXtzd2l0Y2godCl7Y2FzZSAzNDpzPSEwO2JyZWFrO2Nhc2UgMzk6YT0hMDticmVhaztjYXNlIDk2OmM9ITA7YnJlYWs7Y2FzZSA0MDpwKys7YnJlYWs7Y2FzZSA0MTpwLS07YnJlYWs7Y2FzZSA5MTpmKys7YnJlYWs7Y2FzZSA5MzpmLS07YnJlYWs7Y2FzZSAxMjM6bCsrO2JyZWFrO2Nhc2UgMTI1OmwtLX1pZig0Nz09PXQpe2Zvcih2YXIgdj1yLTEsaD12b2lkIDA7dj49MCYmXCIgXCI9PT0oaD1lLmNoYXJBdCh2KSk7di0tKTtoJiZrci50ZXN0KGgpfHwodT0hMCl9fWVsc2Ugdm9pZCAwPT09aT8oZD1yKzEsaT1lLnNsaWNlKDAscikudHJpbSgpKTptKCk7ZnVuY3Rpb24gbSgpeyhvfHwobz1bXSkpLnB1c2goZS5zbGljZShkLHIpLnRyaW0oKSksZD1yKzF9aWYodm9pZCAwPT09aT9pPWUuc2xpY2UoMCxyKS50cmltKCk6MCE9PWQmJm0oKSxvKWZvcihyPTA7cjxvLmxlbmd0aDtyKyspaT1PcihpLG9bcl0pO3JldHVybiBpfWZ1bmN0aW9uIE9yKGUsdCl7dmFyIG49dC5pbmRleE9mKFwiKFwiKTtpZihuPDApcmV0dXJuJ19mKFwiJyt0KydcIikoJytlK1wiKVwiO3ZhciByPXQuc2xpY2UoMCxuKSxpPXQuc2xpY2UobisxKTtyZXR1cm4nX2YoXCInK3IrJ1wiKSgnK2UrKFwiKVwiIT09aT9cIixcIitpOmkpfWZ1bmN0aW9uIFNyKGUsdCl7Y29uc29sZS5lcnJvcihcIltWdWUgY29tcGlsZXJdOiBcIitlKX1mdW5jdGlvbiBUcihlLHQpe3JldHVybiBlP2UubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlW3RdfSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlfSk6W119ZnVuY3Rpb24gRXIoZSx0LG4scixpKXsoZS5wcm9wc3x8KGUucHJvcHM9W10pKS5wdXNoKFJyKHtuYW1lOnQsdmFsdWU6bixkeW5hbWljOml9LHIpKSxlLnBsYWluPSExfWZ1bmN0aW9uIE5yKGUsdCxuLHIsaSl7KGk/ZS5keW5hbWljQXR0cnN8fChlLmR5bmFtaWNBdHRycz1bXSk6ZS5hdHRyc3x8KGUuYXR0cnM9W10pKS5wdXNoKFJyKHtuYW1lOnQsdmFsdWU6bixkeW5hbWljOml9LHIpKSxlLnBsYWluPSExfWZ1bmN0aW9uIGpyKGUsdCxuLHIpe2UuYXR0cnNNYXBbdF09bixlLmF0dHJzTGlzdC5wdXNoKFJyKHtuYW1lOnQsdmFsdWU6bn0scikpfWZ1bmN0aW9uIERyKGUsdCxuLHIsaSxvLGEscyl7KGUuZGlyZWN0aXZlc3x8KGUuZGlyZWN0aXZlcz1bXSkpLnB1c2goUnIoe25hbWU6dCxyYXdOYW1lOm4sdmFsdWU6cixhcmc6aSxpc0R5bmFtaWNBcmc6byxtb2RpZmllcnM6YX0scykpLGUucGxhaW49ITF9ZnVuY3Rpb24gTHIoZSx0LG4pe3JldHVybiBuP1wiX3AoXCIrdCsnLFwiJytlKydcIiknOmUrdH1mdW5jdGlvbiBNcih0LG4scixpLG8sYSxzLGMpe3ZhciB1OyhpPWl8fGUpLnJpZ2h0P2M/bj1cIihcIituK1wiKT09PSdjbGljayc/J2NvbnRleHRtZW51JzooXCIrbitcIilcIjpcImNsaWNrXCI9PT1uJiYobj1cImNvbnRleHRtZW51XCIsZGVsZXRlIGkucmlnaHQpOmkubWlkZGxlJiYoYz9uPVwiKFwiK24rXCIpPT09J2NsaWNrJz8nbW91c2V1cCc6KFwiK24rXCIpXCI6XCJjbGlja1wiPT09biYmKG49XCJtb3VzZXVwXCIpKSxpLmNhcHR1cmUmJihkZWxldGUgaS5jYXB0dXJlLG49THIoXCIhXCIsbixjKSksaS5vbmNlJiYoZGVsZXRlIGkub25jZSxuPUxyKFwiflwiLG4sYykpLGkucGFzc2l2ZSYmKGRlbGV0ZSBpLnBhc3NpdmUsbj1McihcIiZcIixuLGMpKSxpLm5hdGl2ZT8oZGVsZXRlIGkubmF0aXZlLHU9dC5uYXRpdmVFdmVudHN8fCh0Lm5hdGl2ZUV2ZW50cz17fSkpOnU9dC5ldmVudHN8fCh0LmV2ZW50cz17fSk7dmFyIGw9UnIoe3ZhbHVlOnIudHJpbSgpLGR5bmFtaWM6Y30scyk7aSE9PWUmJihsLm1vZGlmaWVycz1pKTt2YXIgZj11W25dO0FycmF5LmlzQXJyYXkoZik/bz9mLnVuc2hpZnQobCk6Zi5wdXNoKGwpOnVbbl09Zj9vP1tsLGZdOltmLGxdOmwsdC5wbGFpbj0hMX1mdW5jdGlvbiBJcihlLHQsbil7dmFyIHI9RnIoZSxcIjpcIit0KXx8RnIoZSxcInYtYmluZDpcIit0KTtpZihudWxsIT1yKXJldHVybiBBcihyKTtpZighMSE9PW4pe3ZhciBpPUZyKGUsdCk7aWYobnVsbCE9aSlyZXR1cm4gSlNPTi5zdHJpbmdpZnkoaSl9fWZ1bmN0aW9uIEZyKGUsdCxuKXt2YXIgcjtpZihudWxsIT0ocj1lLmF0dHJzTWFwW3RdKSlmb3IodmFyIGk9ZS5hdHRyc0xpc3Qsbz0wLGE9aS5sZW5ndGg7bzxhO28rKylpZihpW29dLm5hbWU9PT10KXtpLnNwbGljZShvLDEpO2JyZWFrfXJldHVybiBuJiZkZWxldGUgZS5hdHRyc01hcFt0XSxyfWZ1bmN0aW9uIFByKGUsdCl7Zm9yKHZhciBuPWUuYXR0cnNMaXN0LHI9MCxpPW4ubGVuZ3RoO3I8aTtyKyspe3ZhciBvPW5bcl07aWYodC50ZXN0KG8ubmFtZSkpcmV0dXJuIG4uc3BsaWNlKHIsMSksb319ZnVuY3Rpb24gUnIoZSx0KXtyZXR1cm4gdCYmKG51bGwhPXQuc3RhcnQmJihlLnN0YXJ0PXQuc3RhcnQpLG51bGwhPXQuZW5kJiYoZS5lbmQ9dC5lbmQpKSxlfWZ1bmN0aW9uIEhyKGUsdCxuKXt2YXIgcj1ufHx7fSxpPXIubnVtYmVyLG89XCIkJHZcIjtyLnRyaW0mJihvPVwiKHR5cGVvZiAkJHYgPT09ICdzdHJpbmcnPyAkJHYudHJpbSgpOiAkJHYpXCIpLGkmJihvPVwiX24oXCIrbytcIilcIik7dmFyIGE9QnIodCxvKTtlLm1vZGVsPXt2YWx1ZTpcIihcIit0K1wiKVwiLGV4cHJlc3Npb246SlNPTi5zdHJpbmdpZnkodCksY2FsbGJhY2s6XCJmdW5jdGlvbiAoJCR2KSB7XCIrYStcIn1cIn19ZnVuY3Rpb24gQnIoZSx0KXt2YXIgbj1mdW5jdGlvbihlKXtpZihlPWUudHJpbSgpLGdyPWUubGVuZ3RoLGUuaW5kZXhPZihcIltcIik8MHx8ZS5sYXN0SW5kZXhPZihcIl1cIik8Z3ItMSlyZXR1cm4oJHI9ZS5sYXN0SW5kZXhPZihcIi5cIikpPi0xP3tleHA6ZS5zbGljZSgwLCRyKSxrZXk6J1wiJytlLnNsaWNlKCRyKzEpKydcIid9OntleHA6ZSxrZXk6bnVsbH07X3I9ZSwkcj13cj1Dcj0wO2Zvcig7IXpyKCk7KVZyKGJyPVVyKCkpP0pyKGJyKTo5MT09PWJyJiZLcihicik7cmV0dXJue2V4cDplLnNsaWNlKDAsd3IpLGtleTplLnNsaWNlKHdyKzEsQ3IpfX0oZSk7cmV0dXJuIG51bGw9PT1uLmtleT9lK1wiPVwiK3Q6XCIkc2V0KFwiK24uZXhwK1wiLCBcIituLmtleStcIiwgXCIrdCtcIilcIn1mdW5jdGlvbiBVcigpe3JldHVybiBfci5jaGFyQ29kZUF0KCsrJHIpfWZ1bmN0aW9uIHpyKCl7cmV0dXJuICRyPj1ncn1mdW5jdGlvbiBWcihlKXtyZXR1cm4gMzQ9PT1lfHwzOT09PWV9ZnVuY3Rpb24gS3IoZSl7dmFyIHQ9MTtmb3Iod3I9JHI7IXpyKCk7KWlmKFZyKGU9VXIoKSkpSnIoZSk7ZWxzZSBpZig5MT09PWUmJnQrKyw5Mz09PWUmJnQtLSwwPT09dCl7Q3I9JHI7YnJlYWt9fWZ1bmN0aW9uIEpyKGUpe2Zvcih2YXIgdD1lOyF6cigpJiYoZT1VcigpKSE9PXQ7KTt9dmFyIHFyLFdyPVwiX19yXCIsWnI9XCJfX2NcIjtmdW5jdGlvbiBHcihlLHQsbil7dmFyIHI9cXI7cmV0dXJuIGZ1bmN0aW9uIGkoKXtudWxsIT09dC5hcHBseShudWxsLGFyZ3VtZW50cykmJlFyKGUsaSxuLHIpfX12YXIgWHI9VmUmJiEoWCYmTnVtYmVyKFhbMV0pPD01Myk7ZnVuY3Rpb24gWXIoZSx0LG4scil7aWYoWHIpe3ZhciBpPWFuLG89dDt0PW8uX3dyYXBwZXI9ZnVuY3Rpb24oZSl7aWYoZS50YXJnZXQ9PT1lLmN1cnJlbnRUYXJnZXR8fGUudGltZVN0YW1wPj1pfHxlLnRpbWVTdGFtcDw9MHx8ZS50YXJnZXQub3duZXJEb2N1bWVudCE9PWRvY3VtZW50KXJldHVybiBvLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19cXIuYWRkRXZlbnRMaXN0ZW5lcihlLHQsUT97Y2FwdHVyZTpuLHBhc3NpdmU6cn06bil9ZnVuY3Rpb24gUXIoZSx0LG4scil7KHJ8fHFyKS5yZW1vdmVFdmVudExpc3RlbmVyKGUsdC5fd3JhcHBlcnx8dCxuKX1mdW5jdGlvbiBlaShlLHIpe2lmKCF0KGUuZGF0YS5vbil8fCF0KHIuZGF0YS5vbikpe3ZhciBpPXIuZGF0YS5vbnx8e30sbz1lLmRhdGEub258fHt9O3FyPXIuZWxtLGZ1bmN0aW9uKGUpe2lmKG4oZVtXcl0pKXt2YXIgdD1xP1wiY2hhbmdlXCI6XCJpbnB1dFwiO2VbdF09W10uY29uY2F0KGVbV3JdLGVbdF18fFtdKSxkZWxldGUgZVtXcl19bihlW1pyXSkmJihlLmNoYW5nZT1bXS5jb25jYXQoZVtacl0sZS5jaGFuZ2V8fFtdKSxkZWxldGUgZVtacl0pfShpKSxydChpLG8sWXIsUXIsR3Isci5jb250ZXh0KSxxcj12b2lkIDB9fXZhciB0aSxuaT17Y3JlYXRlOmVpLHVwZGF0ZTplaX07ZnVuY3Rpb24gcmkoZSxyKXtpZighdChlLmRhdGEuZG9tUHJvcHMpfHwhdChyLmRhdGEuZG9tUHJvcHMpKXt2YXIgaSxvLGE9ci5lbG0scz1lLmRhdGEuZG9tUHJvcHN8fHt9LGM9ci5kYXRhLmRvbVByb3BzfHx7fTtmb3IoaSBpbiBuKGMuX19vYl9fKSYmKGM9ci5kYXRhLmRvbVByb3BzPUEoe30sYykpLHMpaSBpbiBjfHwoYVtpXT1cIlwiKTtmb3IoaSBpbiBjKXtpZihvPWNbaV0sXCJ0ZXh0Q29udGVudFwiPT09aXx8XCJpbm5lckhUTUxcIj09PWkpe2lmKHIuY2hpbGRyZW4mJihyLmNoaWxkcmVuLmxlbmd0aD0wKSxvPT09c1tpXSljb250aW51ZTsxPT09YS5jaGlsZE5vZGVzLmxlbmd0aCYmYS5yZW1vdmVDaGlsZChhLmNoaWxkTm9kZXNbMF0pfWlmKFwidmFsdWVcIj09PWkmJlwiUFJPR1JFU1NcIiE9PWEudGFnTmFtZSl7YS5fdmFsdWU9bzt2YXIgdT10KG8pP1wiXCI6U3RyaW5nKG8pO2lpKGEsdSkmJihhLnZhbHVlPXUpfWVsc2UgaWYoXCJpbm5lckhUTUxcIj09PWkmJnFuKGEudGFnTmFtZSkmJnQoYS5pbm5lckhUTUwpKXsodGk9dGl8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLmlubmVySFRNTD1cIjxzdmc+XCIrbytcIjwvc3ZnPlwiO2Zvcih2YXIgbD10aS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7bC5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGwuZmlyc3RDaGlsZCl9ZWxzZSBpZihvIT09c1tpXSl0cnl7YVtpXT1vfWNhdGNoKGUpe319fX1mdW5jdGlvbiBpaShlLHQpe3JldHVybiFlLmNvbXBvc2luZyYmKFwiT1BUSU9OXCI9PT1lLnRhZ05hbWV8fGZ1bmN0aW9uKGUsdCl7dmFyIG49ITA7dHJ5e249ZG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWV9Y2F0Y2goZSl7fXJldHVybiBuJiZlLnZhbHVlIT09dH0oZSx0KXx8ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLGk9ZS5fdk1vZGlmaWVycztpZihuKGkpKXtpZihpLm51bWJlcilyZXR1cm4gZihyKSE9PWYodCk7aWYoaS50cmltKXJldHVybiByLnRyaW0oKSE9PXQudHJpbSgpfXJldHVybiByIT09dH0oZSx0KSl9dmFyIG9pPXtjcmVhdGU6cmksdXBkYXRlOnJpfSxhaT1nKGZ1bmN0aW9uKGUpe3ZhciB0PXt9LG49LzooLispLztyZXR1cm4gZS5zcGxpdCgvOyg/IVteKF0qXFwpKS9nKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2lmKGUpe3ZhciByPWUuc3BsaXQobik7ci5sZW5ndGg+MSYmKHRbclswXS50cmltKCldPXJbMV0udHJpbSgpKX19KSx0fSk7ZnVuY3Rpb24gc2koZSl7dmFyIHQ9Y2koZS5zdHlsZSk7cmV0dXJuIGUuc3RhdGljU3R5bGU/QShlLnN0YXRpY1N0eWxlLHQpOnR9ZnVuY3Rpb24gY2koZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSk/TyhlKTpcInN0cmluZ1wiPT10eXBlb2YgZT9haShlKTplfXZhciB1aSxsaT0vXi0tLyxmaT0vXFxzKiFpbXBvcnRhbnQkLyxwaT1mdW5jdGlvbihlLHQsbil7aWYobGkudGVzdCh0KSllLnN0eWxlLnNldFByb3BlcnR5KHQsbik7ZWxzZSBpZihmaS50ZXN0KG4pKWUuc3R5bGUuc2V0UHJvcGVydHkoQyh0KSxuLnJlcGxhY2UoZmksXCJcIiksXCJpbXBvcnRhbnRcIik7ZWxzZXt2YXIgcj12aSh0KTtpZihBcnJheS5pc0FycmF5KG4pKWZvcih2YXIgaT0wLG89bi5sZW5ndGg7aTxvO2krKyllLnN0eWxlW3JdPW5baV07ZWxzZSBlLnN0eWxlW3JdPW59fSxkaT1bXCJXZWJraXRcIixcIk1velwiLFwibXNcIl0sdmk9ZyhmdW5jdGlvbihlKXtpZih1aT11aXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcImZpbHRlclwiIT09KGU9YihlKSkmJmUgaW4gdWkpcmV0dXJuIGU7Zm9yKHZhciB0PWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSxuPTA7bjxkaS5sZW5ndGg7bisrKXt2YXIgcj1kaVtuXSt0O2lmKHIgaW4gdWkpcmV0dXJuIHJ9fSk7ZnVuY3Rpb24gaGkoZSxyKXt2YXIgaT1yLmRhdGEsbz1lLmRhdGE7aWYoISh0KGkuc3RhdGljU3R5bGUpJiZ0KGkuc3R5bGUpJiZ0KG8uc3RhdGljU3R5bGUpJiZ0KG8uc3R5bGUpKSl7dmFyIGEscyxjPXIuZWxtLHU9by5zdGF0aWNTdHlsZSxsPW8ubm9ybWFsaXplZFN0eWxlfHxvLnN0eWxlfHx7fSxmPXV8fGwscD1jaShyLmRhdGEuc3R5bGUpfHx7fTtyLmRhdGEubm9ybWFsaXplZFN0eWxlPW4ocC5fX29iX18pP0Eoe30scCk6cDt2YXIgZD1mdW5jdGlvbihlLHQpe3ZhciBuLHI9e307aWYodClmb3IodmFyIGk9ZTtpLmNvbXBvbmVudEluc3RhbmNlOykoaT1pLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZSkmJmkuZGF0YSYmKG49c2koaS5kYXRhKSkmJkEocixuKTsobj1zaShlLmRhdGEpKSYmQShyLG4pO2Zvcih2YXIgbz1lO289by5wYXJlbnQ7KW8uZGF0YSYmKG49c2koby5kYXRhKSkmJkEocixuKTtyZXR1cm4gcn0ociwhMCk7Zm9yKHMgaW4gZil0KGRbc10pJiZwaShjLHMsXCJcIik7Zm9yKHMgaW4gZCkoYT1kW3NdKSE9PWZbc10mJnBpKGMscyxudWxsPT1hP1wiXCI6YSl9fXZhciBtaT17Y3JlYXRlOmhpLHVwZGF0ZTpoaX0seWk9L1xccysvO2Z1bmN0aW9uIGdpKGUsdCl7aWYodCYmKHQ9dC50cmltKCkpKWlmKGUuY2xhc3NMaXN0KXQuaW5kZXhPZihcIiBcIik+LTE/dC5zcGxpdCh5aSkuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gZS5jbGFzc0xpc3QuYWRkKHQpfSk6ZS5jbGFzc0xpc3QuYWRkKHQpO2Vsc2V7dmFyIG49XCIgXCIrKGUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIil8fFwiXCIpK1wiIFwiO24uaW5kZXhPZihcIiBcIit0K1wiIFwiKTwwJiZlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsKG4rdCkudHJpbSgpKX19ZnVuY3Rpb24gX2koZSx0KXtpZih0JiYodD10LnRyaW0oKSkpaWYoZS5jbGFzc0xpc3QpdC5pbmRleE9mKFwiIFwiKT4tMT90LnNwbGl0KHlpKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBlLmNsYXNzTGlzdC5yZW1vdmUodCl9KTplLmNsYXNzTGlzdC5yZW1vdmUodCksZS5jbGFzc0xpc3QubGVuZ3RofHxlLnJlbW92ZUF0dHJpYnV0ZShcImNsYXNzXCIpO2Vsc2V7Zm9yKHZhciBuPVwiIFwiKyhlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKStcIiBcIixyPVwiIFwiK3QrXCIgXCI7bi5pbmRleE9mKHIpPj0wOyluPW4ucmVwbGFjZShyLFwiIFwiKTsobj1uLnRyaW0oKSk/ZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLG4pOmUucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIil9fWZ1bmN0aW9uIGJpKGUpe2lmKGUpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlKXt2YXIgdD17fTtyZXR1cm4hMSE9PWUuY3NzJiZBKHQsJGkoZS5uYW1lfHxcInZcIikpLEEodCxlKSx0fXJldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlPyRpKGUpOnZvaWQgMH19dmFyICRpPWcoZnVuY3Rpb24oZSl7cmV0dXJue2VudGVyQ2xhc3M6ZStcIi1lbnRlclwiLGVudGVyVG9DbGFzczplK1wiLWVudGVyLXRvXCIsZW50ZXJBY3RpdmVDbGFzczplK1wiLWVudGVyLWFjdGl2ZVwiLGxlYXZlQ2xhc3M6ZStcIi1sZWF2ZVwiLGxlYXZlVG9DbGFzczplK1wiLWxlYXZlLXRvXCIsbGVhdmVBY3RpdmVDbGFzczplK1wiLWxlYXZlLWFjdGl2ZVwifX0pLHdpPXomJiFXLENpPVwidHJhbnNpdGlvblwiLHhpPVwiYW5pbWF0aW9uXCIsa2k9XCJ0cmFuc2l0aW9uXCIsQWk9XCJ0cmFuc2l0aW9uZW5kXCIsT2k9XCJhbmltYXRpb25cIixTaT1cImFuaW1hdGlvbmVuZFwiO3dpJiYodm9pZCAwPT09d2luZG93Lm9udHJhbnNpdGlvbmVuZCYmdm9pZCAwIT09d2luZG93Lm9ud2Via2l0dHJhbnNpdGlvbmVuZCYmKGtpPVwiV2Via2l0VHJhbnNpdGlvblwiLEFpPVwid2Via2l0VHJhbnNpdGlvbkVuZFwiKSx2b2lkIDA9PT13aW5kb3cub25hbmltYXRpb25lbmQmJnZvaWQgMCE9PXdpbmRvdy5vbndlYmtpdGFuaW1hdGlvbmVuZCYmKE9pPVwiV2Via2l0QW5pbWF0aW9uXCIsU2k9XCJ3ZWJraXRBbmltYXRpb25FbmRcIikpO3ZhciBUaT16P3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdyk6c2V0VGltZW91dDpmdW5jdGlvbihlKXtyZXR1cm4gZSgpfTtmdW5jdGlvbiBFaShlKXtUaShmdW5jdGlvbigpe1RpKGUpfSl9ZnVuY3Rpb24gTmkoZSx0KXt2YXIgbj1lLl90cmFuc2l0aW9uQ2xhc3Nlc3x8KGUuX3RyYW5zaXRpb25DbGFzc2VzPVtdKTtuLmluZGV4T2YodCk8MCYmKG4ucHVzaCh0KSxnaShlLHQpKX1mdW5jdGlvbiBqaShlLHQpe2UuX3RyYW5zaXRpb25DbGFzc2VzJiZoKGUuX3RyYW5zaXRpb25DbGFzc2VzLHQpLF9pKGUsdCl9ZnVuY3Rpb24gRGkoZSx0LG4pe3ZhciByPU1pKGUsdCksaT1yLnR5cGUsbz1yLnRpbWVvdXQsYT1yLnByb3BDb3VudDtpZighaSlyZXR1cm4gbigpO3ZhciBzPWk9PT1DaT9BaTpTaSxjPTAsdT1mdW5jdGlvbigpe2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihzLGwpLG4oKX0sbD1mdW5jdGlvbih0KXt0LnRhcmdldD09PWUmJisrYz49YSYmdSgpfTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YzxhJiZ1KCl9LG8rMSksZS5hZGRFdmVudExpc3RlbmVyKHMsbCl9dmFyIExpPS9cXGIodHJhbnNmb3JtfGFsbCkoLHwkKS87ZnVuY3Rpb24gTWkoZSx0KXt2YXIgbixyPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUpLGk9KHJba2krXCJEZWxheVwiXXx8XCJcIikuc3BsaXQoXCIsIFwiKSxvPShyW2tpK1wiRHVyYXRpb25cIl18fFwiXCIpLnNwbGl0KFwiLCBcIiksYT1JaShpLG8pLHM9KHJbT2krXCJEZWxheVwiXXx8XCJcIikuc3BsaXQoXCIsIFwiKSxjPShyW09pK1wiRHVyYXRpb25cIl18fFwiXCIpLnNwbGl0KFwiLCBcIiksdT1JaShzLGMpLGw9MCxmPTA7cmV0dXJuIHQ9PT1DaT9hPjAmJihuPUNpLGw9YSxmPW8ubGVuZ3RoKTp0PT09eGk/dT4wJiYobj14aSxsPXUsZj1jLmxlbmd0aCk6Zj0obj0obD1NYXRoLm1heChhLHUpKT4wP2E+dT9DaTp4aTpudWxsKT9uPT09Q2k/by5sZW5ndGg6Yy5sZW5ndGg6MCx7dHlwZTpuLHRpbWVvdXQ6bCxwcm9wQ291bnQ6ZixoYXNUcmFuc2Zvcm06bj09PUNpJiZMaS50ZXN0KHJba2krXCJQcm9wZXJ0eVwiXSl9fWZ1bmN0aW9uIElpKGUsdCl7Zm9yKDtlLmxlbmd0aDx0Lmxlbmd0aDspZT1lLmNvbmNhdChlKTtyZXR1cm4gTWF0aC5tYXguYXBwbHkobnVsbCx0Lm1hcChmdW5jdGlvbih0LG4pe3JldHVybiBGaSh0KStGaShlW25dKX0pKX1mdW5jdGlvbiBGaShlKXtyZXR1cm4gMWUzKk51bWJlcihlLnNsaWNlKDAsLTEpLnJlcGxhY2UoXCIsXCIsXCIuXCIpKX1mdW5jdGlvbiBQaShlLHIpe3ZhciBpPWUuZWxtO24oaS5fbGVhdmVDYikmJihpLl9sZWF2ZUNiLmNhbmNlbGxlZD0hMCxpLl9sZWF2ZUNiKCkpO3ZhciBhPWJpKGUuZGF0YS50cmFuc2l0aW9uKTtpZighdChhKSYmIW4oaS5fZW50ZXJDYikmJjE9PT1pLm5vZGVUeXBlKXtmb3IodmFyIHM9YS5jc3MsYz1hLnR5cGUsdT1hLmVudGVyQ2xhc3MsbD1hLmVudGVyVG9DbGFzcyxwPWEuZW50ZXJBY3RpdmVDbGFzcyxkPWEuYXBwZWFyQ2xhc3Msdj1hLmFwcGVhclRvQ2xhc3MsaD1hLmFwcGVhckFjdGl2ZUNsYXNzLG09YS5iZWZvcmVFbnRlcix5PWEuZW50ZXIsZz1hLmFmdGVyRW50ZXIsXz1hLmVudGVyQ2FuY2VsbGVkLGI9YS5iZWZvcmVBcHBlYXIsJD1hLmFwcGVhcix3PWEuYWZ0ZXJBcHBlYXIsQz1hLmFwcGVhckNhbmNlbGxlZCx4PWEuZHVyYXRpb24saz1XdCxBPVd0LiR2bm9kZTtBJiZBLnBhcmVudDspaz1BLmNvbnRleHQsQT1BLnBhcmVudDt2YXIgTz0hay5faXNNb3VudGVkfHwhZS5pc1Jvb3RJbnNlcnQ7aWYoIU98fCR8fFwiXCI9PT0kKXt2YXIgUz1PJiZkP2Q6dSxUPU8mJmg/aDpwLEU9TyYmdj92OmwsTj1PJiZifHxtLGo9TyYmXCJmdW5jdGlvblwiPT10eXBlb2YgJD8kOnksTD1PJiZ3fHxnLE09TyYmQ3x8XyxJPWYobyh4KT94LmVudGVyOngpLEY9ITEhPT1zJiYhVyxQPUJpKGopLFI9aS5fZW50ZXJDYj1EKGZ1bmN0aW9uKCl7RiYmKGppKGksRSksamkoaSxUKSksUi5jYW5jZWxsZWQ/KEYmJmppKGksUyksTSYmTShpKSk6TCYmTChpKSxpLl9lbnRlckNiPW51bGx9KTtlLmRhdGEuc2hvd3x8aXQoZSxcImluc2VydFwiLGZ1bmN0aW9uKCl7dmFyIHQ9aS5wYXJlbnROb2RlLG49dCYmdC5fcGVuZGluZyYmdC5fcGVuZGluZ1tlLmtleV07biYmbi50YWc9PT1lLnRhZyYmbi5lbG0uX2xlYXZlQ2ImJm4uZWxtLl9sZWF2ZUNiKCksaiYmaihpLFIpfSksTiYmTihpKSxGJiYoTmkoaSxTKSxOaShpLFQpLEVpKGZ1bmN0aW9uKCl7amkoaSxTKSxSLmNhbmNlbGxlZHx8KE5pKGksRSksUHx8KEhpKEkpP3NldFRpbWVvdXQoUixJKTpEaShpLGMsUikpKX0pKSxlLmRhdGEuc2hvdyYmKHImJnIoKSxqJiZqKGksUikpLEZ8fFB8fFIoKX19fWZ1bmN0aW9uIFJpKGUscil7dmFyIGk9ZS5lbG07bihpLl9lbnRlckNiKSYmKGkuX2VudGVyQ2IuY2FuY2VsbGVkPSEwLGkuX2VudGVyQ2IoKSk7dmFyIGE9YmkoZS5kYXRhLnRyYW5zaXRpb24pO2lmKHQoYSl8fDEhPT1pLm5vZGVUeXBlKXJldHVybiByKCk7aWYoIW4oaS5fbGVhdmVDYikpe3ZhciBzPWEuY3NzLGM9YS50eXBlLHU9YS5sZWF2ZUNsYXNzLGw9YS5sZWF2ZVRvQ2xhc3MscD1hLmxlYXZlQWN0aXZlQ2xhc3MsZD1hLmJlZm9yZUxlYXZlLHY9YS5sZWF2ZSxoPWEuYWZ0ZXJMZWF2ZSxtPWEubGVhdmVDYW5jZWxsZWQseT1hLmRlbGF5TGVhdmUsZz1hLmR1cmF0aW9uLF89ITEhPT1zJiYhVyxiPUJpKHYpLCQ9ZihvKGcpP2cubGVhdmU6Zyksdz1pLl9sZWF2ZUNiPUQoZnVuY3Rpb24oKXtpLnBhcmVudE5vZGUmJmkucGFyZW50Tm9kZS5fcGVuZGluZyYmKGkucGFyZW50Tm9kZS5fcGVuZGluZ1tlLmtleV09bnVsbCksXyYmKGppKGksbCksamkoaSxwKSksdy5jYW5jZWxsZWQ/KF8mJmppKGksdSksbSYmbShpKSk6KHIoKSxoJiZoKGkpKSxpLl9sZWF2ZUNiPW51bGx9KTt5P3koQyk6QygpfWZ1bmN0aW9uIEMoKXt3LmNhbmNlbGxlZHx8KCFlLmRhdGEuc2hvdyYmaS5wYXJlbnROb2RlJiYoKGkucGFyZW50Tm9kZS5fcGVuZGluZ3x8KGkucGFyZW50Tm9kZS5fcGVuZGluZz17fSkpW2Uua2V5XT1lKSxkJiZkKGkpLF8mJihOaShpLHUpLE5pKGkscCksRWkoZnVuY3Rpb24oKXtqaShpLHUpLHcuY2FuY2VsbGVkfHwoTmkoaSxsKSxifHwoSGkoJCk/c2V0VGltZW91dCh3LCQpOkRpKGksYyx3KSkpfSkpLHYmJnYoaSx3KSxffHxifHx3KCkpfX1mdW5jdGlvbiBIaShlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZSYmIWlzTmFOKGUpfWZ1bmN0aW9uIEJpKGUpe2lmKHQoZSkpcmV0dXJuITE7dmFyIHI9ZS5mbnM7cmV0dXJuIG4ocik/QmkoQXJyYXkuaXNBcnJheShyKT9yWzBdOnIpOihlLl9sZW5ndGh8fGUubGVuZ3RoKT4xfWZ1bmN0aW9uIFVpKGUsdCl7ITAhPT10LmRhdGEuc2hvdyYmUGkodCl9dmFyIHppPWZ1bmN0aW9uKGUpe3ZhciBvLGEscz17fSxjPWUubW9kdWxlcyx1PWUubm9kZU9wcztmb3Iobz0wO288cnIubGVuZ3RoOysrbylmb3Ioc1tycltvXV09W10sYT0wO2E8Yy5sZW5ndGg7KythKW4oY1thXVtycltvXV0pJiZzW3JyW29dXS5wdXNoKGNbYV1bcnJbb11dKTtmdW5jdGlvbiBsKGUpe3ZhciB0PXUucGFyZW50Tm9kZShlKTtuKHQpJiZ1LnJlbW92ZUNoaWxkKHQsZSl9ZnVuY3Rpb24gZihlLHQsaSxvLGEsYyxsKXtpZihuKGUuZWxtKSYmbihjKSYmKGU9Y1tsXT1tZShlKSksZS5pc1Jvb3RJbnNlcnQ9IWEsIWZ1bmN0aW9uKGUsdCxpLG8pe3ZhciBhPWUuZGF0YTtpZihuKGEpKXt2YXIgYz1uKGUuY29tcG9uZW50SW5zdGFuY2UpJiZhLmtlZXBBbGl2ZTtpZihuKGE9YS5ob29rKSYmbihhPWEuaW5pdCkmJmEoZSwhMSksbihlLmNvbXBvbmVudEluc3RhbmNlKSlyZXR1cm4gZChlLHQpLHYoaSxlLmVsbSxvKSxyKGMpJiZmdW5jdGlvbihlLHQscixpKXtmb3IodmFyIG8sYT1lO2EuY29tcG9uZW50SW5zdGFuY2U7KWlmKGE9YS5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGUsbihvPWEuZGF0YSkmJm4obz1vLnRyYW5zaXRpb24pKXtmb3Iobz0wO288cy5hY3RpdmF0ZS5sZW5ndGg7KytvKXMuYWN0aXZhdGVbb10obnIsYSk7dC5wdXNoKGEpO2JyZWFrfXYocixlLmVsbSxpKX0oZSx0LGksbyksITB9fShlLHQsaSxvKSl7dmFyIGY9ZS5kYXRhLHA9ZS5jaGlsZHJlbixtPWUudGFnO24obSk/KGUuZWxtPWUubnM/dS5jcmVhdGVFbGVtZW50TlMoZS5ucyxtKTp1LmNyZWF0ZUVsZW1lbnQobSxlKSxnKGUpLGgoZSxwLHQpLG4oZikmJnkoZSx0KSx2KGksZS5lbG0sbykpOnIoZS5pc0NvbW1lbnQpPyhlLmVsbT11LmNyZWF0ZUNvbW1lbnQoZS50ZXh0KSx2KGksZS5lbG0sbykpOihlLmVsbT11LmNyZWF0ZVRleHROb2RlKGUudGV4dCksdihpLGUuZWxtLG8pKX19ZnVuY3Rpb24gZChlLHQpe24oZS5kYXRhLnBlbmRpbmdJbnNlcnQpJiYodC5wdXNoLmFwcGx5KHQsZS5kYXRhLnBlbmRpbmdJbnNlcnQpLGUuZGF0YS5wZW5kaW5nSW5zZXJ0PW51bGwpLGUuZWxtPWUuY29tcG9uZW50SW5zdGFuY2UuJGVsLG0oZSk/KHkoZSx0KSxnKGUpKToodHIoZSksdC5wdXNoKGUpKX1mdW5jdGlvbiB2KGUsdCxyKXtuKGUpJiYobihyKT91LnBhcmVudE5vZGUocik9PT1lJiZ1Lmluc2VydEJlZm9yZShlLHQscik6dS5hcHBlbmRDaGlsZChlLHQpKX1mdW5jdGlvbiBoKGUsdCxuKXtpZihBcnJheS5pc0FycmF5KHQpKWZvcih2YXIgcj0wO3I8dC5sZW5ndGg7KytyKWYodFtyXSxuLGUuZWxtLG51bGwsITAsdCxyKTtlbHNlIGkoZS50ZXh0KSYmdS5hcHBlbmRDaGlsZChlLmVsbSx1LmNyZWF0ZVRleHROb2RlKFN0cmluZyhlLnRleHQpKSl9ZnVuY3Rpb24gbShlKXtmb3IoO2UuY29tcG9uZW50SW5zdGFuY2U7KWU9ZS5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGU7cmV0dXJuIG4oZS50YWcpfWZ1bmN0aW9uIHkoZSx0KXtmb3IodmFyIHI9MDtyPHMuY3JlYXRlLmxlbmd0aDsrK3Ipcy5jcmVhdGVbcl0obnIsZSk7bihvPWUuZGF0YS5ob29rKSYmKG4oby5jcmVhdGUpJiZvLmNyZWF0ZShucixlKSxuKG8uaW5zZXJ0KSYmdC5wdXNoKGUpKX1mdW5jdGlvbiBnKGUpe3ZhciB0O2lmKG4odD1lLmZuU2NvcGVJZCkpdS5zZXRTdHlsZVNjb3BlKGUuZWxtLHQpO2Vsc2UgZm9yKHZhciByPWU7cjspbih0PXIuY29udGV4dCkmJm4odD10LiRvcHRpb25zLl9zY29wZUlkKSYmdS5zZXRTdHlsZVNjb3BlKGUuZWxtLHQpLHI9ci5wYXJlbnQ7bih0PVd0KSYmdCE9PWUuY29udGV4dCYmdCE9PWUuZm5Db250ZXh0JiZuKHQ9dC4kb3B0aW9ucy5fc2NvcGVJZCkmJnUuc2V0U3R5bGVTY29wZShlLmVsbSx0KX1mdW5jdGlvbiBfKGUsdCxuLHIsaSxvKXtmb3IoO3I8PWk7KytyKWYobltyXSxvLGUsdCwhMSxuLHIpfWZ1bmN0aW9uIGIoZSl7dmFyIHQscixpPWUuZGF0YTtpZihuKGkpKWZvcihuKHQ9aS5ob29rKSYmbih0PXQuZGVzdHJveSkmJnQoZSksdD0wO3Q8cy5kZXN0cm95Lmxlbmd0aDsrK3Qpcy5kZXN0cm95W3RdKGUpO2lmKG4odD1lLmNoaWxkcmVuKSlmb3Iocj0wO3I8ZS5jaGlsZHJlbi5sZW5ndGg7KytyKWIoZS5jaGlsZHJlbltyXSl9ZnVuY3Rpb24gJChlLHQscil7Zm9yKDt0PD1yOysrdCl7dmFyIGk9ZVt0XTtuKGkpJiYobihpLnRhZyk/KHcoaSksYihpKSk6bChpLmVsbSkpfX1mdW5jdGlvbiB3KGUsdCl7aWYobih0KXx8bihlLmRhdGEpKXt2YXIgcixpPXMucmVtb3ZlLmxlbmd0aCsxO2ZvcihuKHQpP3QubGlzdGVuZXJzKz1pOnQ9ZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBuKCl7MD09LS1uLmxpc3RlbmVycyYmbChlKX1yZXR1cm4gbi5saXN0ZW5lcnM9dCxufShlLmVsbSxpKSxuKHI9ZS5jb21wb25lbnRJbnN0YW5jZSkmJm4ocj1yLl92bm9kZSkmJm4oci5kYXRhKSYmdyhyLHQpLHI9MDtyPHMucmVtb3ZlLmxlbmd0aDsrK3Ipcy5yZW1vdmVbcl0oZSx0KTtuKHI9ZS5kYXRhLmhvb2spJiZuKHI9ci5yZW1vdmUpP3IoZSx0KTp0KCl9ZWxzZSBsKGUuZWxtKX1mdW5jdGlvbiBDKGUsdCxyLGkpe2Zvcih2YXIgbz1yO288aTtvKyspe3ZhciBhPXRbb107aWYobihhKSYmaXIoZSxhKSlyZXR1cm4gb319ZnVuY3Rpb24geChlLGksbyxhLGMsbCl7aWYoZSE9PWkpe24oaS5lbG0pJiZuKGEpJiYoaT1hW2NdPW1lKGkpKTt2YXIgcD1pLmVsbT1lLmVsbTtpZihyKGUuaXNBc3luY1BsYWNlaG9sZGVyKSluKGkuYXN5bmNGYWN0b3J5LnJlc29sdmVkKT9PKGUuZWxtLGksbyk6aS5pc0FzeW5jUGxhY2Vob2xkZXI9ITA7ZWxzZSBpZihyKGkuaXNTdGF0aWMpJiZyKGUuaXNTdGF0aWMpJiZpLmtleT09PWUua2V5JiYocihpLmlzQ2xvbmVkKXx8cihpLmlzT25jZSkpKWkuY29tcG9uZW50SW5zdGFuY2U9ZS5jb21wb25lbnRJbnN0YW5jZTtlbHNle3ZhciBkLHY9aS5kYXRhO24odikmJm4oZD12Lmhvb2spJiZuKGQ9ZC5wcmVwYXRjaCkmJmQoZSxpKTt2YXIgaD1lLmNoaWxkcmVuLHk9aS5jaGlsZHJlbjtpZihuKHYpJiZtKGkpKXtmb3IoZD0wO2Q8cy51cGRhdGUubGVuZ3RoOysrZClzLnVwZGF0ZVtkXShlLGkpO24oZD12Lmhvb2spJiZuKGQ9ZC51cGRhdGUpJiZkKGUsaSl9dChpLnRleHQpP24oaCkmJm4oeSk/aCE9PXkmJmZ1bmN0aW9uKGUscixpLG8sYSl7Zm9yKHZhciBzLGMsbCxwPTAsZD0wLHY9ci5sZW5ndGgtMSxoPXJbMF0sbT1yW3ZdLHk9aS5sZW5ndGgtMSxnPWlbMF0sYj1pW3ldLHc9IWE7cDw9diYmZDw9eTspdChoKT9oPXJbKytwXTp0KG0pP209clstLXZdOmlyKGgsZyk/KHgoaCxnLG8saSxkKSxoPXJbKytwXSxnPWlbKytkXSk6aXIobSxiKT8oeChtLGIsbyxpLHkpLG09clstLXZdLGI9aVstLXldKTppcihoLGIpPyh4KGgsYixvLGkseSksdyYmdS5pbnNlcnRCZWZvcmUoZSxoLmVsbSx1Lm5leHRTaWJsaW5nKG0uZWxtKSksaD1yWysrcF0sYj1pWy0teV0pOmlyKG0sZyk/KHgobSxnLG8saSxkKSx3JiZ1Lmluc2VydEJlZm9yZShlLG0uZWxtLGguZWxtKSxtPXJbLS12XSxnPWlbKytkXSk6KHQocykmJihzPW9yKHIscCx2KSksdChjPW4oZy5rZXkpP3NbZy5rZXldOkMoZyxyLHAsdikpP2YoZyxvLGUsaC5lbG0sITEsaSxkKTppcihsPXJbY10sZyk/KHgobCxnLG8saSxkKSxyW2NdPXZvaWQgMCx3JiZ1Lmluc2VydEJlZm9yZShlLGwuZWxtLGguZWxtKSk6ZihnLG8sZSxoLmVsbSwhMSxpLGQpLGc9aVsrK2RdKTtwPnY/XyhlLHQoaVt5KzFdKT9udWxsOmlbeSsxXS5lbG0saSxkLHksbyk6ZD55JiYkKHIscCx2KX0ocCxoLHksbyxsKTpuKHkpPyhuKGUudGV4dCkmJnUuc2V0VGV4dENvbnRlbnQocCxcIlwiKSxfKHAsbnVsbCx5LDAseS5sZW5ndGgtMSxvKSk6bihoKT8kKGgsMCxoLmxlbmd0aC0xKTpuKGUudGV4dCkmJnUuc2V0VGV4dENvbnRlbnQocCxcIlwiKTplLnRleHQhPT1pLnRleHQmJnUuc2V0VGV4dENvbnRlbnQocCxpLnRleHQpLG4odikmJm4oZD12Lmhvb2spJiZuKGQ9ZC5wb3N0cGF0Y2gpJiZkKGUsaSl9fX1mdW5jdGlvbiBrKGUsdCxpKXtpZihyKGkpJiZuKGUucGFyZW50KSllLnBhcmVudC5kYXRhLnBlbmRpbmdJbnNlcnQ9dDtlbHNlIGZvcih2YXIgbz0wO288dC5sZW5ndGg7KytvKXRbb10uZGF0YS5ob29rLmluc2VydCh0W29dKX12YXIgQT1wKFwiYXR0cnMsY2xhc3Msc3RhdGljQ2xhc3Msc3RhdGljU3R5bGUsa2V5XCIpO2Z1bmN0aW9uIE8oZSx0LGksbyl7dmFyIGEscz10LnRhZyxjPXQuZGF0YSx1PXQuY2hpbGRyZW47aWYobz1vfHxjJiZjLnByZSx0LmVsbT1lLHIodC5pc0NvbW1lbnQpJiZuKHQuYXN5bmNGYWN0b3J5KSlyZXR1cm4gdC5pc0FzeW5jUGxhY2Vob2xkZXI9ITAsITA7aWYobihjKSYmKG4oYT1jLmhvb2spJiZuKGE9YS5pbml0KSYmYSh0LCEwKSxuKGE9dC5jb21wb25lbnRJbnN0YW5jZSkpKXJldHVybiBkKHQsaSksITA7aWYobihzKSl7aWYobih1KSlpZihlLmhhc0NoaWxkTm9kZXMoKSlpZihuKGE9YykmJm4oYT1hLmRvbVByb3BzKSYmbihhPWEuaW5uZXJIVE1MKSl7aWYoYSE9PWUuaW5uZXJIVE1MKXJldHVybiExfWVsc2V7Zm9yKHZhciBsPSEwLGY9ZS5maXJzdENoaWxkLHA9MDtwPHUubGVuZ3RoO3ArKyl7aWYoIWZ8fCFPKGYsdVtwXSxpLG8pKXtsPSExO2JyZWFrfWY9Zi5uZXh0U2libGluZ31pZighbHx8ZilyZXR1cm4hMX1lbHNlIGgodCx1LGkpO2lmKG4oYykpe3ZhciB2PSExO2Zvcih2YXIgbSBpbiBjKWlmKCFBKG0pKXt2PSEwLHkodCxpKTticmVha30hdiYmYy5jbGFzcyYmZXQoYy5jbGFzcyl9fWVsc2UgZS5kYXRhIT09dC50ZXh0JiYoZS5kYXRhPXQudGV4dCk7cmV0dXJuITB9cmV0dXJuIGZ1bmN0aW9uKGUsaSxvLGEpe2lmKCF0KGkpKXt2YXIgYyxsPSExLHA9W107aWYodChlKSlsPSEwLGYoaSxwKTtlbHNle3ZhciBkPW4oZS5ub2RlVHlwZSk7aWYoIWQmJmlyKGUsaSkpeChlLGkscCxudWxsLG51bGwsYSk7ZWxzZXtpZihkKXtpZigxPT09ZS5ub2RlVHlwZSYmZS5oYXNBdHRyaWJ1dGUoTCkmJihlLnJlbW92ZUF0dHJpYnV0ZShMKSxvPSEwKSxyKG8pJiZPKGUsaSxwKSlyZXR1cm4gayhpLHAsITApLGU7Yz1lLGU9bmV3IHBlKHUudGFnTmFtZShjKS50b0xvd2VyQ2FzZSgpLHt9LFtdLHZvaWQgMCxjKX12YXIgdj1lLmVsbSxoPXUucGFyZW50Tm9kZSh2KTtpZihmKGkscCx2Ll9sZWF2ZUNiP251bGw6aCx1Lm5leHRTaWJsaW5nKHYpKSxuKGkucGFyZW50KSlmb3IodmFyIHk9aS5wYXJlbnQsZz1tKGkpO3k7KXtmb3IodmFyIF89MDtfPHMuZGVzdHJveS5sZW5ndGg7KytfKXMuZGVzdHJveVtfXSh5KTtpZih5LmVsbT1pLmVsbSxnKXtmb3IodmFyIHc9MDt3PHMuY3JlYXRlLmxlbmd0aDsrK3cpcy5jcmVhdGVbd10obnIseSk7dmFyIEM9eS5kYXRhLmhvb2suaW5zZXJ0O2lmKEMubWVyZ2VkKWZvcih2YXIgQT0xO0E8Qy5mbnMubGVuZ3RoO0ErKylDLmZuc1tBXSgpfWVsc2UgdHIoeSk7eT15LnBhcmVudH1uKGgpPyQoW2VdLDAsMCk6bihlLnRhZykmJmIoZSl9fXJldHVybiBrKGkscCxsKSxpLmVsbX1uKGUpJiZiKGUpfX0oe25vZGVPcHM6UW4sbW9kdWxlczpbbXIseHIsbmksb2ksbWksej97Y3JlYXRlOlVpLGFjdGl2YXRlOlVpLHJlbW92ZTpmdW5jdGlvbihlLHQpeyEwIT09ZS5kYXRhLnNob3c/UmkoZSx0KTp0KCl9fTp7fV0uY29uY2F0KHByKX0pO1cmJmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzZWxlY3Rpb25jaGFuZ2VcIixmdW5jdGlvbigpe3ZhciBlPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7ZSYmZS52bW9kZWwmJlhpKGUsXCJpbnB1dFwiKX0pO3ZhciBWaT17aW5zZXJ0ZWQ6ZnVuY3Rpb24oZSx0LG4scil7XCJzZWxlY3RcIj09PW4udGFnPyhyLmVsbSYmIXIuZWxtLl92T3B0aW9ucz9pdChuLFwicG9zdHBhdGNoXCIsZnVuY3Rpb24oKXtWaS5jb21wb25lbnRVcGRhdGVkKGUsdCxuKX0pOktpKGUsdCxuLmNvbnRleHQpLGUuX3ZPcHRpb25zPVtdLm1hcC5jYWxsKGUub3B0aW9ucyxXaSkpOihcInRleHRhcmVhXCI9PT1uLnRhZ3x8WG4oZS50eXBlKSkmJihlLl92TW9kaWZpZXJzPXQubW9kaWZpZXJzLHQubW9kaWZpZXJzLmxhenl8fChlLmFkZEV2ZW50TGlzdGVuZXIoXCJjb21wb3NpdGlvbnN0YXJ0XCIsWmkpLGUuYWRkRXZlbnRMaXN0ZW5lcihcImNvbXBvc2l0aW9uZW5kXCIsR2kpLGUuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLEdpKSxXJiYoZS52bW9kZWw9ITApKSl9LGNvbXBvbmVudFVwZGF0ZWQ6ZnVuY3Rpb24oZSx0LG4pe2lmKFwic2VsZWN0XCI9PT1uLnRhZyl7S2koZSx0LG4uY29udGV4dCk7dmFyIHI9ZS5fdk9wdGlvbnMsaT1lLl92T3B0aW9ucz1bXS5tYXAuY2FsbChlLm9wdGlvbnMsV2kpO2lmKGkuc29tZShmdW5jdGlvbihlLHQpe3JldHVybiFOKGUsclt0XSl9KSkoZS5tdWx0aXBsZT90LnZhbHVlLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuIHFpKGUsaSl9KTp0LnZhbHVlIT09dC5vbGRWYWx1ZSYmcWkodC52YWx1ZSxpKSkmJlhpKGUsXCJjaGFuZ2VcIil9fX07ZnVuY3Rpb24gS2koZSx0LG4pe0ppKGUsdCxuKSwocXx8WikmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXtKaShlLHQsbil9LDApfWZ1bmN0aW9uIEppKGUsdCxuKXt2YXIgcj10LnZhbHVlLGk9ZS5tdWx0aXBsZTtpZighaXx8QXJyYXkuaXNBcnJheShyKSl7Zm9yKHZhciBvLGEscz0wLGM9ZS5vcHRpb25zLmxlbmd0aDtzPGM7cysrKWlmKGE9ZS5vcHRpb25zW3NdLGkpbz1qKHIsV2koYSkpPi0xLGEuc2VsZWN0ZWQhPT1vJiYoYS5zZWxlY3RlZD1vKTtlbHNlIGlmKE4oV2koYSkscikpcmV0dXJuIHZvaWQoZS5zZWxlY3RlZEluZGV4IT09cyYmKGUuc2VsZWN0ZWRJbmRleD1zKSk7aXx8KGUuc2VsZWN0ZWRJbmRleD0tMSl9fWZ1bmN0aW9uIHFpKGUsdCl7cmV0dXJuIHQuZXZlcnkoZnVuY3Rpb24odCl7cmV0dXJuIU4odCxlKX0pfWZ1bmN0aW9uIFdpKGUpe3JldHVyblwiX3ZhbHVlXCJpbiBlP2UuX3ZhbHVlOmUudmFsdWV9ZnVuY3Rpb24gWmkoZSl7ZS50YXJnZXQuY29tcG9zaW5nPSEwfWZ1bmN0aW9uIEdpKGUpe2UudGFyZ2V0LmNvbXBvc2luZyYmKGUudGFyZ2V0LmNvbXBvc2luZz0hMSxYaShlLnRhcmdldCxcImlucHV0XCIpKX1mdW5jdGlvbiBYaShlLHQpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiSFRNTEV2ZW50c1wiKTtuLmluaXRFdmVudCh0LCEwLCEwKSxlLmRpc3BhdGNoRXZlbnQobil9ZnVuY3Rpb24gWWkoZSl7cmV0dXJuIWUuY29tcG9uZW50SW5zdGFuY2V8fGUuZGF0YSYmZS5kYXRhLnRyYW5zaXRpb24/ZTpZaShlLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZSl9dmFyIFFpPXttb2RlbDpWaSxzaG93OntiaW5kOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10LnZhbHVlLGk9KG49WWkobikpLmRhdGEmJm4uZGF0YS50cmFuc2l0aW9uLG89ZS5fX3ZPcmlnaW5hbERpc3BsYXk9XCJub25lXCI9PT1lLnN0eWxlLmRpc3BsYXk/XCJcIjplLnN0eWxlLmRpc3BsYXk7ciYmaT8obi5kYXRhLnNob3c9ITAsUGkobixmdW5jdGlvbigpe2Uuc3R5bGUuZGlzcGxheT1vfSkpOmUuc3R5bGUuZGlzcGxheT1yP286XCJub25lXCJ9LHVwZGF0ZTpmdW5jdGlvbihlLHQsbil7dmFyIHI9dC52YWx1ZTshciE9IXQub2xkVmFsdWUmJigobj1ZaShuKSkuZGF0YSYmbi5kYXRhLnRyYW5zaXRpb24/KG4uZGF0YS5zaG93PSEwLHI/UGkobixmdW5jdGlvbigpe2Uuc3R5bGUuZGlzcGxheT1lLl9fdk9yaWdpbmFsRGlzcGxheX0pOlJpKG4sZnVuY3Rpb24oKXtlLnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9KSk6ZS5zdHlsZS5kaXNwbGF5PXI/ZS5fX3ZPcmlnaW5hbERpc3BsYXk6XCJub25lXCIpfSx1bmJpbmQ6ZnVuY3Rpb24oZSx0LG4scixpKXtpfHwoZS5zdHlsZS5kaXNwbGF5PWUuX192T3JpZ2luYWxEaXNwbGF5KX19fSxlbz17bmFtZTpTdHJpbmcsYXBwZWFyOkJvb2xlYW4sY3NzOkJvb2xlYW4sbW9kZTpTdHJpbmcsdHlwZTpTdHJpbmcsZW50ZXJDbGFzczpTdHJpbmcsbGVhdmVDbGFzczpTdHJpbmcsZW50ZXJUb0NsYXNzOlN0cmluZyxsZWF2ZVRvQ2xhc3M6U3RyaW5nLGVudGVyQWN0aXZlQ2xhc3M6U3RyaW5nLGxlYXZlQWN0aXZlQ2xhc3M6U3RyaW5nLGFwcGVhckNsYXNzOlN0cmluZyxhcHBlYXJBY3RpdmVDbGFzczpTdHJpbmcsYXBwZWFyVG9DbGFzczpTdHJpbmcsZHVyYXRpb246W051bWJlcixTdHJpbmcsT2JqZWN0XX07ZnVuY3Rpb24gdG8oZSl7dmFyIHQ9ZSYmZS5jb21wb25lbnRPcHRpb25zO3JldHVybiB0JiZ0LkN0b3Iub3B0aW9ucy5hYnN0cmFjdD90byh6dCh0LmNoaWxkcmVuKSk6ZX1mdW5jdGlvbiBubyhlKXt2YXIgdD17fSxuPWUuJG9wdGlvbnM7Zm9yKHZhciByIGluIG4ucHJvcHNEYXRhKXRbcl09ZVtyXTt2YXIgaT1uLl9wYXJlbnRMaXN0ZW5lcnM7Zm9yKHZhciBvIGluIGkpdFtiKG8pXT1pW29dO3JldHVybiB0fWZ1bmN0aW9uIHJvKGUsdCl7aWYoL1xcZC1rZWVwLWFsaXZlJC8udGVzdCh0LnRhZykpcmV0dXJuIGUoXCJrZWVwLWFsaXZlXCIse3Byb3BzOnQuY29tcG9uZW50T3B0aW9ucy5wcm9wc0RhdGF9KX12YXIgaW89ZnVuY3Rpb24oZSl7cmV0dXJuIGUudGFnfHxVdChlKX0sb289ZnVuY3Rpb24oZSl7cmV0dXJuXCJzaG93XCI9PT1lLm5hbWV9LGFvPXtuYW1lOlwidHJhbnNpdGlvblwiLHByb3BzOmVvLGFic3RyYWN0OiEwLHJlbmRlcjpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49dGhpcy4kc2xvdHMuZGVmYXVsdDtpZihuJiYobj1uLmZpbHRlcihpbykpLmxlbmd0aCl7dmFyIHI9dGhpcy5tb2RlLG89blswXTtpZihmdW5jdGlvbihlKXtmb3IoO2U9ZS5wYXJlbnQ7KWlmKGUuZGF0YS50cmFuc2l0aW9uKXJldHVybiEwfSh0aGlzLiR2bm9kZSkpcmV0dXJuIG87dmFyIGE9dG8obyk7aWYoIWEpcmV0dXJuIG87aWYodGhpcy5fbGVhdmluZylyZXR1cm4gcm8oZSxvKTt2YXIgcz1cIl9fdHJhbnNpdGlvbi1cIit0aGlzLl91aWQrXCItXCI7YS5rZXk9bnVsbD09YS5rZXk/YS5pc0NvbW1lbnQ/cytcImNvbW1lbnRcIjpzK2EudGFnOmkoYS5rZXkpPzA9PT1TdHJpbmcoYS5rZXkpLmluZGV4T2Yocyk/YS5rZXk6cythLmtleTphLmtleTt2YXIgYz0oYS5kYXRhfHwoYS5kYXRhPXt9KSkudHJhbnNpdGlvbj1ubyh0aGlzKSx1PXRoaXMuX3Zub2RlLGw9dG8odSk7aWYoYS5kYXRhLmRpcmVjdGl2ZXMmJmEuZGF0YS5kaXJlY3RpdmVzLnNvbWUob28pJiYoYS5kYXRhLnNob3c9ITApLGwmJmwuZGF0YSYmIWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQua2V5PT09ZS5rZXkmJnQudGFnPT09ZS50YWd9KGEsbCkmJiFVdChsKSYmKCFsLmNvbXBvbmVudEluc3RhbmNlfHwhbC5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGUuaXNDb21tZW50KSl7dmFyIGY9bC5kYXRhLnRyYW5zaXRpb249QSh7fSxjKTtpZihcIm91dC1pblwiPT09cilyZXR1cm4gdGhpcy5fbGVhdmluZz0hMCxpdChmLFwiYWZ0ZXJMZWF2ZVwiLGZ1bmN0aW9uKCl7dC5fbGVhdmluZz0hMSx0LiRmb3JjZVVwZGF0ZSgpfSkscm8oZSxvKTtpZihcImluLW91dFwiPT09cil7aWYoVXQoYSkpcmV0dXJuIHU7dmFyIHAsZD1mdW5jdGlvbigpe3AoKX07aXQoYyxcImFmdGVyRW50ZXJcIixkKSxpdChjLFwiZW50ZXJDYW5jZWxsZWRcIixkKSxpdChmLFwiZGVsYXlMZWF2ZVwiLGZ1bmN0aW9uKGUpe3A9ZX0pfX1yZXR1cm4gb319fSxzbz1BKHt0YWc6U3RyaW5nLG1vdmVDbGFzczpTdHJpbmd9LGVvKTtmdW5jdGlvbiBjbyhlKXtlLmVsbS5fbW92ZUNiJiZlLmVsbS5fbW92ZUNiKCksZS5lbG0uX2VudGVyQ2ImJmUuZWxtLl9lbnRlckNiKCl9ZnVuY3Rpb24gdW8oZSl7ZS5kYXRhLm5ld1Bvcz1lLmVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKX1mdW5jdGlvbiBsbyhlKXt2YXIgdD1lLmRhdGEucG9zLG49ZS5kYXRhLm5ld1BvcyxyPXQubGVmdC1uLmxlZnQsaT10LnRvcC1uLnRvcDtpZihyfHxpKXtlLmRhdGEubW92ZWQ9ITA7dmFyIG89ZS5lbG0uc3R5bGU7by50cmFuc2Zvcm09by5XZWJraXRUcmFuc2Zvcm09XCJ0cmFuc2xhdGUoXCIrcitcInB4LFwiK2krXCJweClcIixvLnRyYW5zaXRpb25EdXJhdGlvbj1cIjBzXCJ9fWRlbGV0ZSBzby5tb2RlO3ZhciBmbz17VHJhbnNpdGlvbjphbyxUcmFuc2l0aW9uR3JvdXA6e3Byb3BzOnNvLGJlZm9yZU1vdW50OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMuX3VwZGF0ZTt0aGlzLl91cGRhdGU9ZnVuY3Rpb24obixyKXt2YXIgaT1adChlKTtlLl9fcGF0Y2hfXyhlLl92bm9kZSxlLmtlcHQsITEsITApLGUuX3Zub2RlPWUua2VwdCxpKCksdC5jYWxsKGUsbixyKX19LHJlbmRlcjpmdW5jdGlvbihlKXtmb3IodmFyIHQ9dGhpcy50YWd8fHRoaXMuJHZub2RlLmRhdGEudGFnfHxcInNwYW5cIixuPU9iamVjdC5jcmVhdGUobnVsbCkscj10aGlzLnByZXZDaGlsZHJlbj10aGlzLmNoaWxkcmVuLGk9dGhpcy4kc2xvdHMuZGVmYXVsdHx8W10sbz10aGlzLmNoaWxkcmVuPVtdLGE9bm8odGhpcykscz0wO3M8aS5sZW5ndGg7cysrKXt2YXIgYz1pW3NdO2MudGFnJiZudWxsIT1jLmtleSYmMCE9PVN0cmluZyhjLmtleSkuaW5kZXhPZihcIl9fdmxpc3RcIikmJihvLnB1c2goYyksbltjLmtleV09YywoYy5kYXRhfHwoYy5kYXRhPXt9KSkudHJhbnNpdGlvbj1hKX1pZihyKXtmb3IodmFyIHU9W10sbD1bXSxmPTA7ZjxyLmxlbmd0aDtmKyspe3ZhciBwPXJbZl07cC5kYXRhLnRyYW5zaXRpb249YSxwLmRhdGEucG9zPXAuZWxtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG5bcC5rZXldP3UucHVzaChwKTpsLnB1c2gocCl9dGhpcy5rZXB0PWUodCxudWxsLHUpLHRoaXMucmVtb3ZlZD1sfXJldHVybiBlKHQsbnVsbCxvKX0sdXBkYXRlZDpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJldkNoaWxkcmVuLHQ9dGhpcy5tb3ZlQ2xhc3N8fCh0aGlzLm5hbWV8fFwidlwiKStcIi1tb3ZlXCI7ZS5sZW5ndGgmJnRoaXMuaGFzTW92ZShlWzBdLmVsbSx0KSYmKGUuZm9yRWFjaChjbyksZS5mb3JFYWNoKHVvKSxlLmZvckVhY2gobG8pLHRoaXMuX3JlZmxvdz1kb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCxlLmZvckVhY2goZnVuY3Rpb24oZSl7aWYoZS5kYXRhLm1vdmVkKXt2YXIgbj1lLmVsbSxyPW4uc3R5bGU7Tmkobix0KSxyLnRyYW5zZm9ybT1yLldlYmtpdFRyYW5zZm9ybT1yLnRyYW5zaXRpb25EdXJhdGlvbj1cIlwiLG4uYWRkRXZlbnRMaXN0ZW5lcihBaSxuLl9tb3ZlQ2I9ZnVuY3Rpb24gZShyKXtyJiZyLnRhcmdldCE9PW58fHImJiEvdHJhbnNmb3JtJC8udGVzdChyLnByb3BlcnR5TmFtZSl8fChuLnJlbW92ZUV2ZW50TGlzdGVuZXIoQWksZSksbi5fbW92ZUNiPW51bGwsamkobix0KSl9KX19KSl9LG1ldGhvZHM6e2hhc01vdmU6ZnVuY3Rpb24oZSx0KXtpZighd2kpcmV0dXJuITE7aWYodGhpcy5faGFzTW92ZSlyZXR1cm4gdGhpcy5faGFzTW92ZTt2YXIgbj1lLmNsb25lTm9kZSgpO2UuX3RyYW5zaXRpb25DbGFzc2VzJiZlLl90cmFuc2l0aW9uQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe19pKG4sZSl9KSxnaShuLHQpLG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIix0aGlzLiRlbC5hcHBlbmRDaGlsZChuKTt2YXIgcj1NaShuKTtyZXR1cm4gdGhpcy4kZWwucmVtb3ZlQ2hpbGQobiksdGhpcy5faGFzTW92ZT1yLmhhc1RyYW5zZm9ybX19fX07d24uY29uZmlnLm11c3RVc2VQcm9wPWpuLHduLmNvbmZpZy5pc1Jlc2VydmVkVGFnPVduLHduLmNvbmZpZy5pc1Jlc2VydmVkQXR0cj1Fbix3bi5jb25maWcuZ2V0VGFnTmFtZXNwYWNlPVpuLHduLmNvbmZpZy5pc1Vua25vd25FbGVtZW50PWZ1bmN0aW9uKGUpe2lmKCF6KXJldHVybiEwO2lmKFduKGUpKXJldHVybiExO2lmKGU9ZS50b0xvd2VyQ2FzZSgpLG51bGwhPUduW2VdKXJldHVybiBHbltlXTt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KGUpO3JldHVybiBlLmluZGV4T2YoXCItXCIpPi0xP0duW2VdPXQuY29uc3RydWN0b3I9PT13aW5kb3cuSFRNTFVua25vd25FbGVtZW50fHx0LmNvbnN0cnVjdG9yPT09d2luZG93LkhUTUxFbGVtZW50OkduW2VdPS9IVE1MVW5rbm93bkVsZW1lbnQvLnRlc3QodC50b1N0cmluZygpKX0sQSh3bi5vcHRpb25zLmRpcmVjdGl2ZXMsUWkpLEEod24ub3B0aW9ucy5jb21wb25lbnRzLGZvKSx3bi5wcm90b3R5cGUuX19wYXRjaF9fPXo/emk6Uyx3bi5wcm90b3R5cGUuJG1vdW50PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt2YXIgcjtyZXR1cm4gZS4kZWw9dCxlLiRvcHRpb25zLnJlbmRlcnx8KGUuJG9wdGlvbnMucmVuZGVyPXZlKSxZdChlLFwiYmVmb3JlTW91bnRcIikscj1mdW5jdGlvbigpe2UuX3VwZGF0ZShlLl9yZW5kZXIoKSxuKX0sbmV3IGZuKGUscixTLHtiZWZvcmU6ZnVuY3Rpb24oKXtlLl9pc01vdW50ZWQmJiFlLl9pc0Rlc3Ryb3llZCYmWXQoZSxcImJlZm9yZVVwZGF0ZVwiKX19LCEwKSxuPSExLG51bGw9PWUuJHZub2RlJiYoZS5faXNNb3VudGVkPSEwLFl0KGUsXCJtb3VudGVkXCIpKSxlfSh0aGlzLGU9ZSYmej9ZbihlKTp2b2lkIDAsdCl9LHomJnNldFRpbWVvdXQoZnVuY3Rpb24oKXtGLmRldnRvb2xzJiZuZSYmbmUuZW1pdChcImluaXRcIix3bil9LDApO3ZhciBwbz0vXFx7XFx7KCg/Oi58XFxyP1xcbikrPylcXH1cXH0vZyx2bz0vWy0uKis/XiR7fSgpfFtcXF1cXC9cXFxcXS9nLGhvPWcoZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXS5yZXBsYWNlKHZvLFwiXFxcXCQmXCIpLG49ZVsxXS5yZXBsYWNlKHZvLFwiXFxcXCQmXCIpO3JldHVybiBuZXcgUmVnRXhwKHQrXCIoKD86LnxcXFxcbikrPylcIituLFwiZ1wiKX0pO3ZhciBtbz17c3RhdGljS2V5czpbXCJzdGF0aWNDbGFzc1wiXSx0cmFuc2Zvcm1Ob2RlOmZ1bmN0aW9uKGUsdCl7dC53YXJuO3ZhciBuPUZyKGUsXCJjbGFzc1wiKTtuJiYoZS5zdGF0aWNDbGFzcz1KU09OLnN0cmluZ2lmeShuKSk7dmFyIHI9SXIoZSxcImNsYXNzXCIsITEpO3ImJihlLmNsYXNzQmluZGluZz1yKX0sZ2VuRGF0YTpmdW5jdGlvbihlKXt2YXIgdD1cIlwiO3JldHVybiBlLnN0YXRpY0NsYXNzJiYodCs9XCJzdGF0aWNDbGFzczpcIitlLnN0YXRpY0NsYXNzK1wiLFwiKSxlLmNsYXNzQmluZGluZyYmKHQrPVwiY2xhc3M6XCIrZS5jbGFzc0JpbmRpbmcrXCIsXCIpLHR9fTt2YXIgeW8sZ289e3N0YXRpY0tleXM6W1wic3RhdGljU3R5bGVcIl0sdHJhbnNmb3JtTm9kZTpmdW5jdGlvbihlLHQpe3Qud2Fybjt2YXIgbj1GcihlLFwic3R5bGVcIik7biYmKGUuc3RhdGljU3R5bGU9SlNPTi5zdHJpbmdpZnkoYWkobikpKTt2YXIgcj1JcihlLFwic3R5bGVcIiwhMSk7ciYmKGUuc3R5bGVCaW5kaW5nPXIpfSxnZW5EYXRhOmZ1bmN0aW9uKGUpe3ZhciB0PVwiXCI7cmV0dXJuIGUuc3RhdGljU3R5bGUmJih0Kz1cInN0YXRpY1N0eWxlOlwiK2Uuc3RhdGljU3R5bGUrXCIsXCIpLGUuc3R5bGVCaW5kaW5nJiYodCs9XCJzdHlsZTooXCIrZS5zdHlsZUJpbmRpbmcrXCIpLFwiKSx0fX0sX289ZnVuY3Rpb24oZSl7cmV0dXJuKHlvPXlvfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKS5pbm5lckhUTUw9ZSx5by50ZXh0Q29udGVudH0sYm89cChcImFyZWEsYmFzZSxicixjb2wsZW1iZWQsZnJhbWUsaHIsaW1nLGlucHV0LGlzaW5kZXgsa2V5Z2VuLGxpbmssbWV0YSxwYXJhbSxzb3VyY2UsdHJhY2ssd2JyXCIpLCRvPXAoXCJjb2xncm91cCxkZCxkdCxsaSxvcHRpb25zLHAsdGQsdGZvb3QsdGgsdGhlYWQsdHIsc291cmNlXCIpLHdvPXAoXCJhZGRyZXNzLGFydGljbGUsYXNpZGUsYmFzZSxibG9ja3F1b3RlLGJvZHksY2FwdGlvbixjb2wsY29sZ3JvdXAsZGQsZGV0YWlscyxkaWFsb2csZGl2LGRsLGR0LGZpZWxkc2V0LGZpZ2NhcHRpb24sZmlndXJlLGZvb3Rlcixmb3JtLGgxLGgyLGgzLGg0LGg1LGg2LGhlYWQsaGVhZGVyLGhncm91cCxocixodG1sLGxlZ2VuZCxsaSxtZW51aXRlbSxtZXRhLG9wdGdyb3VwLG9wdGlvbixwYXJhbSxycCxydCxzb3VyY2Usc3R5bGUsc3VtbWFyeSx0Ym9keSx0ZCx0Zm9vdCx0aCx0aGVhZCx0aXRsZSx0cix0cmFja1wiKSxDbz0vXlxccyooW15cXHNcIic8PlxcLz1dKykoPzpcXHMqKD0pXFxzKig/OlwiKFteXCJdKilcIit8JyhbXiddKiknK3woW15cXHNcIic9PD5gXSspKSk/Lyx4bz0vXlxccyooKD86di1bXFx3LV0rOnxAfDp8IylcXFtbXj1dK1xcXVteXFxzXCInPD5cXC89XSopKD86XFxzKig9KVxccyooPzpcIihbXlwiXSopXCIrfCcoW14nXSopJyt8KFteXFxzXCInPTw+YF0rKSkpPy8sa289XCJbYS16QS1aX11bXFxcXC1cXFxcLjAtOV9hLXpBLVpcIitQLnNvdXJjZStcIl0qXCIsQW89XCIoKD86XCIra28rXCJcXFxcOik/XCIra28rXCIpXCIsT289bmV3IFJlZ0V4cChcIl48XCIrQW8pLFNvPS9eXFxzKihcXC8/KT4vLFRvPW5ldyBSZWdFeHAoXCJePFxcXFwvXCIrQW8rXCJbXj5dKj5cIiksRW89L148IURPQ1RZUEUgW14+XSs+L2ksTm89L148IVxcLS0vLGpvPS9ePCFcXFsvLERvPXAoXCJzY3JpcHQsc3R5bGUsdGV4dGFyZWFcIiwhMCksTG89e30sTW89e1wiJmx0O1wiOlwiPFwiLFwiJmd0O1wiOlwiPlwiLFwiJnF1b3Q7XCI6J1wiJyxcIiZhbXA7XCI6XCImXCIsXCImIzEwO1wiOlwiXFxuXCIsXCImIzk7XCI6XCJcXHRcIixcIiYjMzk7XCI6XCInXCJ9LElvPS8mKD86bHR8Z3R8cXVvdHxhbXB8IzM5KTsvZyxGbz0vJig/Omx0fGd0fHF1b3R8YW1wfCMzOXwjMTB8IzkpOy9nLFBvPXAoXCJwcmUsdGV4dGFyZWFcIiwhMCksUm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSYmUG8oZSkmJlwiXFxuXCI9PT10WzBdfTtmdW5jdGlvbiBIbyhlLHQpe3ZhciBuPXQ/Rm86SW87cmV0dXJuIGUucmVwbGFjZShuLGZ1bmN0aW9uKGUpe3JldHVybiBNb1tlXX0pfXZhciBCbyxVbyx6byxWbyxLbyxKbyxxbyxXbyxabz0vXkB8XnYtb246LyxHbz0vXnYtfF5AfF46fF4jLyxYbz0vKFtcXHNcXFNdKj8pXFxzKyg/OmlufG9mKVxccysoW1xcc1xcU10qKS8sWW89LywoW14sXFx9XFxdXSopKD86LChbXixcXH1cXF1dKikpPyQvLFFvPS9eXFwofFxcKSQvZyxlYT0vXlxcWy4qXFxdJC8sdGE9LzooLiopJC8sbmE9L146fF5cXC58XnYtYmluZDovLHJhPS9cXC5bXi5cXF1dKyg/PVteXFxdXSokKS9nLGlhPS9edi1zbG90KDp8JCl8XiMvLG9hPS9bXFxyXFxuXS8sYWE9L1xccysvZyxzYT1nKF9vKSxjYT1cIl9lbXB0eV9cIjtmdW5jdGlvbiB1YShlLHQsbil7cmV0dXJue3R5cGU6MSx0YWc6ZSxhdHRyc0xpc3Q6dCxhdHRyc01hcDptYSh0KSxyYXdBdHRyc01hcDp7fSxwYXJlbnQ6bixjaGlsZHJlbjpbXX19ZnVuY3Rpb24gbGEoZSx0KXtCbz10Lndhcm58fFNyLEpvPXQuaXNQcmVUYWd8fFQscW89dC5tdXN0VXNlUHJvcHx8VCxXbz10LmdldFRhZ05hbWVzcGFjZXx8VDt0LmlzUmVzZXJ2ZWRUYWc7em89VHIodC5tb2R1bGVzLFwidHJhbnNmb3JtTm9kZVwiKSxWbz1Ucih0Lm1vZHVsZXMsXCJwcmVUcmFuc2Zvcm1Ob2RlXCIpLEtvPVRyKHQubW9kdWxlcyxcInBvc3RUcmFuc2Zvcm1Ob2RlXCIpLFVvPXQuZGVsaW1pdGVyczt2YXIgbixyLGk9W10sbz0hMSE9PXQucHJlc2VydmVXaGl0ZXNwYWNlLGE9dC53aGl0ZXNwYWNlLHM9ITEsYz0hMTtmdW5jdGlvbiB1KGUpe2lmKGwoZSksc3x8ZS5wcm9jZXNzZWR8fChlPWZhKGUsdCkpLGkubGVuZ3RofHxlPT09bnx8bi5pZiYmKGUuZWxzZWlmfHxlLmVsc2UpJiZkYShuLHtleHA6ZS5lbHNlaWYsYmxvY2s6ZX0pLHImJiFlLmZvcmJpZGRlbilpZihlLmVsc2VpZnx8ZS5lbHNlKWE9ZSwodT1mdW5jdGlvbihlKXt2YXIgdD1lLmxlbmd0aDtmb3IoO3QtLTspe2lmKDE9PT1lW3RdLnR5cGUpcmV0dXJuIGVbdF07ZS5wb3AoKX19KHIuY2hpbGRyZW4pKSYmdS5pZiYmZGEodSx7ZXhwOmEuZWxzZWlmLGJsb2NrOmF9KTtlbHNle2lmKGUuc2xvdFNjb3BlKXt2YXIgbz1lLnNsb3RUYXJnZXR8fCdcImRlZmF1bHRcIic7KHIuc2NvcGVkU2xvdHN8fChyLnNjb3BlZFNsb3RzPXt9KSlbb109ZX1yLmNoaWxkcmVuLnB1c2goZSksZS5wYXJlbnQ9cn12YXIgYSx1O2UuY2hpbGRyZW49ZS5jaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIWUuc2xvdFNjb3BlfSksbChlKSxlLnByZSYmKHM9ITEpLEpvKGUudGFnKSYmKGM9ITEpO2Zvcih2YXIgZj0wO2Y8S28ubGVuZ3RoO2YrKylLb1tmXShlLHQpfWZ1bmN0aW9uIGwoZSl7aWYoIWMpZm9yKHZhciB0Oyh0PWUuY2hpbGRyZW5bZS5jaGlsZHJlbi5sZW5ndGgtMV0pJiYzPT09dC50eXBlJiZcIiBcIj09PXQudGV4dDspZS5jaGlsZHJlbi5wb3AoKX1yZXR1cm4gZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4scixpPVtdLG89dC5leHBlY3RIVE1MLGE9dC5pc1VuYXJ5VGFnfHxULHM9dC5jYW5CZUxlZnRPcGVuVGFnfHxULGM9MDtlOyl7aWYobj1lLHImJkRvKHIpKXt2YXIgdT0wLGw9ci50b0xvd2VyQ2FzZSgpLGY9TG9bbF18fChMb1tsXT1uZXcgUmVnRXhwKFwiKFtcXFxcc1xcXFxTXSo/KSg8L1wiK2wrXCJbXj5dKj4pXCIsXCJpXCIpKSxwPWUucmVwbGFjZShmLGZ1bmN0aW9uKGUsbixyKXtyZXR1cm4gdT1yLmxlbmd0aCxEbyhsKXx8XCJub3NjcmlwdFwiPT09bHx8KG49bi5yZXBsYWNlKC88IVxcLS0oW1xcc1xcU10qPyktLT4vZyxcIiQxXCIpLnJlcGxhY2UoLzwhXFxbQ0RBVEFcXFsoW1xcc1xcU10qPyldXT4vZyxcIiQxXCIpKSxSbyhsLG4pJiYobj1uLnNsaWNlKDEpKSx0LmNoYXJzJiZ0LmNoYXJzKG4pLFwiXCJ9KTtjKz1lLmxlbmd0aC1wLmxlbmd0aCxlPXAsQShsLGMtdSxjKX1lbHNle3ZhciBkPWUuaW5kZXhPZihcIjxcIik7aWYoMD09PWQpe2lmKE5vLnRlc3QoZSkpe3ZhciB2PWUuaW5kZXhPZihcIi0tXFx4M2VcIik7aWYodj49MCl7dC5zaG91bGRLZWVwQ29tbWVudCYmdC5jb21tZW50KGUuc3Vic3RyaW5nKDQsdiksYyxjK3YrMyksQyh2KzMpO2NvbnRpbnVlfX1pZihqby50ZXN0KGUpKXt2YXIgaD1lLmluZGV4T2YoXCJdPlwiKTtpZihoPj0wKXtDKGgrMik7Y29udGludWV9fXZhciBtPWUubWF0Y2goRW8pO2lmKG0pe0MobVswXS5sZW5ndGgpO2NvbnRpbnVlfXZhciB5PWUubWF0Y2goVG8pO2lmKHkpe3ZhciBnPWM7Qyh5WzBdLmxlbmd0aCksQSh5WzFdLGcsYyk7Y29udGludWV9dmFyIF89eCgpO2lmKF8pe2soXyksUm8oXy50YWdOYW1lLGUpJiZDKDEpO2NvbnRpbnVlfX12YXIgYj12b2lkIDAsJD12b2lkIDAsdz12b2lkIDA7aWYoZD49MCl7Zm9yKCQ9ZS5zbGljZShkKTshKFRvLnRlc3QoJCl8fE9vLnRlc3QoJCl8fE5vLnRlc3QoJCl8fGpvLnRlc3QoJCl8fCh3PSQuaW5kZXhPZihcIjxcIiwxKSk8MCk7KWQrPXcsJD1lLnNsaWNlKGQpO2I9ZS5zdWJzdHJpbmcoMCxkKX1kPDAmJihiPWUpLGImJkMoYi5sZW5ndGgpLHQuY2hhcnMmJmImJnQuY2hhcnMoYixjLWIubGVuZ3RoLGMpfWlmKGU9PT1uKXt0LmNoYXJzJiZ0LmNoYXJzKGUpO2JyZWFrfX1mdW5jdGlvbiBDKHQpe2MrPXQsZT1lLnN1YnN0cmluZyh0KX1mdW5jdGlvbiB4KCl7dmFyIHQ9ZS5tYXRjaChPbyk7aWYodCl7dmFyIG4scixpPXt0YWdOYW1lOnRbMV0sYXR0cnM6W10sc3RhcnQ6Y307Zm9yKEModFswXS5sZW5ndGgpOyEobj1lLm1hdGNoKFNvKSkmJihyPWUubWF0Y2goeG8pfHxlLm1hdGNoKENvKSk7KXIuc3RhcnQ9YyxDKHJbMF0ubGVuZ3RoKSxyLmVuZD1jLGkuYXR0cnMucHVzaChyKTtpZihuKXJldHVybiBpLnVuYXJ5U2xhc2g9blsxXSxDKG5bMF0ubGVuZ3RoKSxpLmVuZD1jLGl9fWZ1bmN0aW9uIGsoZSl7dmFyIG49ZS50YWdOYW1lLGM9ZS51bmFyeVNsYXNoO28mJihcInBcIj09PXImJndvKG4pJiZBKHIpLHMobikmJnI9PT1uJiZBKG4pKTtmb3IodmFyIHU9YShuKXx8ISFjLGw9ZS5hdHRycy5sZW5ndGgsZj1uZXcgQXJyYXkobCkscD0wO3A8bDtwKyspe3ZhciBkPWUuYXR0cnNbcF0sdj1kWzNdfHxkWzRdfHxkWzVdfHxcIlwiLGg9XCJhXCI9PT1uJiZcImhyZWZcIj09PWRbMV0/dC5zaG91bGREZWNvZGVOZXdsaW5lc0ZvckhyZWY6dC5zaG91bGREZWNvZGVOZXdsaW5lcztmW3BdPXtuYW1lOmRbMV0sdmFsdWU6SG8odixoKX19dXx8KGkucHVzaCh7dGFnOm4sbG93ZXJDYXNlZFRhZzpuLnRvTG93ZXJDYXNlKCksYXR0cnM6ZixzdGFydDplLnN0YXJ0LGVuZDplLmVuZH0pLHI9biksdC5zdGFydCYmdC5zdGFydChuLGYsdSxlLnN0YXJ0LGUuZW5kKX1mdW5jdGlvbiBBKGUsbixvKXt2YXIgYSxzO2lmKG51bGw9PW4mJihuPWMpLG51bGw9PW8mJihvPWMpLGUpZm9yKHM9ZS50b0xvd2VyQ2FzZSgpLGE9aS5sZW5ndGgtMTthPj0wJiZpW2FdLmxvd2VyQ2FzZWRUYWchPT1zO2EtLSk7ZWxzZSBhPTA7aWYoYT49MCl7Zm9yKHZhciB1PWkubGVuZ3RoLTE7dT49YTt1LS0pdC5lbmQmJnQuZW5kKGlbdV0udGFnLG4sbyk7aS5sZW5ndGg9YSxyPWEmJmlbYS0xXS50YWd9ZWxzZVwiYnJcIj09PXM/dC5zdGFydCYmdC5zdGFydChlLFtdLCEwLG4sbyk6XCJwXCI9PT1zJiYodC5zdGFydCYmdC5zdGFydChlLFtdLCExLG4sbyksdC5lbmQmJnQuZW5kKGUsbixvKSl9QSgpfShlLHt3YXJuOkJvLGV4cGVjdEhUTUw6dC5leHBlY3RIVE1MLGlzVW5hcnlUYWc6dC5pc1VuYXJ5VGFnLGNhbkJlTGVmdE9wZW5UYWc6dC5jYW5CZUxlZnRPcGVuVGFnLHNob3VsZERlY29kZU5ld2xpbmVzOnQuc2hvdWxkRGVjb2RlTmV3bGluZXMsc2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmOnQuc2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmLHNob3VsZEtlZXBDb21tZW50OnQuY29tbWVudHMsb3V0cHV0U291cmNlUmFuZ2U6dC5vdXRwdXRTb3VyY2VSYW5nZSxzdGFydDpmdW5jdGlvbihlLG8sYSxsLGYpe3ZhciBwPXImJnIubnN8fFdvKGUpO3EmJlwic3ZnXCI9PT1wJiYobz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10sbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO3lhLnRlc3Qoci5uYW1lKXx8KHIubmFtZT1yLm5hbWUucmVwbGFjZShnYSxcIlwiKSx0LnB1c2gocikpfXJldHVybiB0fShvKSk7dmFyIGQsdj11YShlLG8scik7cCYmKHYubnM9cCksXCJzdHlsZVwiIT09KGQ9dikudGFnJiYoXCJzY3JpcHRcIiE9PWQudGFnfHxkLmF0dHJzTWFwLnR5cGUmJlwidGV4dC9qYXZhc2NyaXB0XCIhPT1kLmF0dHJzTWFwLnR5cGUpfHx0ZSgpfHwodi5mb3JiaWRkZW49ITApO2Zvcih2YXIgaD0wO2g8Vm8ubGVuZ3RoO2grKyl2PVZvW2hdKHYsdCl8fHY7c3x8KCFmdW5jdGlvbihlKXtudWxsIT1GcihlLFwidi1wcmVcIikmJihlLnByZT0hMCl9KHYpLHYucHJlJiYocz0hMCkpLEpvKHYudGFnKSYmKGM9ITApLHM/ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5hdHRyc0xpc3Qsbj10Lmxlbmd0aDtpZihuKWZvcih2YXIgcj1lLmF0dHJzPW5ldyBBcnJheShuKSxpPTA7aTxuO2krKylyW2ldPXtuYW1lOnRbaV0ubmFtZSx2YWx1ZTpKU09OLnN0cmluZ2lmeSh0W2ldLnZhbHVlKX0sbnVsbCE9dFtpXS5zdGFydCYmKHJbaV0uc3RhcnQ9dFtpXS5zdGFydCxyW2ldLmVuZD10W2ldLmVuZCk7ZWxzZSBlLnByZXx8KGUucGxhaW49ITApfSh2KTp2LnByb2Nlc3NlZHx8KHBhKHYpLGZ1bmN0aW9uKGUpe3ZhciB0PUZyKGUsXCJ2LWlmXCIpO2lmKHQpZS5pZj10LGRhKGUse2V4cDp0LGJsb2NrOmV9KTtlbHNle251bGwhPUZyKGUsXCJ2LWVsc2VcIikmJihlLmVsc2U9ITApO3ZhciBuPUZyKGUsXCJ2LWVsc2UtaWZcIik7biYmKGUuZWxzZWlmPW4pfX0odiksZnVuY3Rpb24oZSl7bnVsbCE9RnIoZSxcInYtb25jZVwiKSYmKGUub25jZT0hMCl9KHYpKSxufHwobj12KSxhP3Uodik6KHI9dixpLnB1c2godikpfSxlbmQ6ZnVuY3Rpb24oZSx0LG4pe3ZhciBvPWlbaS5sZW5ndGgtMV07aS5sZW5ndGgtPTEscj1pW2kubGVuZ3RoLTFdLHUobyl9LGNoYXJzOmZ1bmN0aW9uKGUsdCxuKXtpZihyJiYoIXF8fFwidGV4dGFyZWFcIiE9PXIudGFnfHxyLmF0dHJzTWFwLnBsYWNlaG9sZGVyIT09ZSkpe3ZhciBpLHUsbCxmPXIuY2hpbGRyZW47aWYoZT1jfHxlLnRyaW0oKT9cInNjcmlwdFwiPT09KGk9cikudGFnfHxcInN0eWxlXCI9PT1pLnRhZz9lOnNhKGUpOmYubGVuZ3RoP2E/XCJjb25kZW5zZVwiPT09YSYmb2EudGVzdChlKT9cIlwiOlwiIFwiOm8/XCIgXCI6XCJcIjpcIlwiKWN8fFwiY29uZGVuc2VcIiE9PWF8fChlPWUucmVwbGFjZShhYSxcIiBcIikpLCFzJiZcIiBcIiE9PWUmJih1PWZ1bmN0aW9uKGUsdCl7dmFyIG49dD9obyh0KTpwbztpZihuLnRlc3QoZSkpe2Zvcih2YXIgcixpLG8sYT1bXSxzPVtdLGM9bi5sYXN0SW5kZXg9MDtyPW4uZXhlYyhlKTspeyhpPXIuaW5kZXgpPmMmJihzLnB1c2gobz1lLnNsaWNlKGMsaSkpLGEucHVzaChKU09OLnN0cmluZ2lmeShvKSkpO3ZhciB1PUFyKHJbMV0udHJpbSgpKTthLnB1c2goXCJfcyhcIit1K1wiKVwiKSxzLnB1c2goe1wiQGJpbmRpbmdcIjp1fSksYz1pK3JbMF0ubGVuZ3RofXJldHVybiBjPGUubGVuZ3RoJiYocy5wdXNoKG89ZS5zbGljZShjKSksYS5wdXNoKEpTT04uc3RyaW5naWZ5KG8pKSkse2V4cHJlc3Npb246YS5qb2luKFwiK1wiKSx0b2tlbnM6c319fShlLFVvKSk/bD17dHlwZToyLGV4cHJlc3Npb246dS5leHByZXNzaW9uLHRva2Vuczp1LnRva2Vucyx0ZXh0OmV9OlwiIFwiPT09ZSYmZi5sZW5ndGgmJlwiIFwiPT09ZltmLmxlbmd0aC0xXS50ZXh0fHwobD17dHlwZTozLHRleHQ6ZX0pLGwmJmYucHVzaChsKX19LGNvbW1lbnQ6ZnVuY3Rpb24oZSx0LG4pe2lmKHIpe3ZhciBpPXt0eXBlOjMsdGV4dDplLGlzQ29tbWVudDohMH07ci5jaGlsZHJlbi5wdXNoKGkpfX19KSxufWZ1bmN0aW9uIGZhKGUsdCl7dmFyIG4scjsocj1JcihuPWUsXCJrZXlcIikpJiYobi5rZXk9ciksZS5wbGFpbj0hZS5rZXkmJiFlLnNjb3BlZFNsb3RzJiYhZS5hdHRyc0xpc3QubGVuZ3RoLGZ1bmN0aW9uKGUpe3ZhciB0PUlyKGUsXCJyZWZcIik7dCYmKGUucmVmPXQsZS5yZWZJbkZvcj1mdW5jdGlvbihlKXt2YXIgdD1lO2Zvcig7dDspe2lmKHZvaWQgMCE9PXQuZm9yKXJldHVybiEwO3Q9dC5wYXJlbnR9cmV0dXJuITF9KGUpKX0oZSksZnVuY3Rpb24oZSl7dmFyIHQ7XCJ0ZW1wbGF0ZVwiPT09ZS50YWc/KHQ9RnIoZSxcInNjb3BlXCIpLGUuc2xvdFNjb3BlPXR8fEZyKGUsXCJzbG90LXNjb3BlXCIpKToodD1GcihlLFwic2xvdC1zY29wZVwiKSkmJihlLnNsb3RTY29wZT10KTt2YXIgbj1JcihlLFwic2xvdFwiKTtuJiYoZS5zbG90VGFyZ2V0PSdcIlwiJz09PW4/J1wiZGVmYXVsdFwiJzpuLGUuc2xvdFRhcmdldER5bmFtaWM9ISghZS5hdHRyc01hcFtcIjpzbG90XCJdJiYhZS5hdHRyc01hcFtcInYtYmluZDpzbG90XCJdKSxcInRlbXBsYXRlXCI9PT1lLnRhZ3x8ZS5zbG90U2NvcGV8fE5yKGUsXCJzbG90XCIsbixmdW5jdGlvbihlLHQpe3JldHVybiBlLnJhd0F0dHJzTWFwW1wiOlwiK3RdfHxlLnJhd0F0dHJzTWFwW1widi1iaW5kOlwiK3RdfHxlLnJhd0F0dHJzTWFwW3RdfShlLFwic2xvdFwiKSkpO2lmKFwidGVtcGxhdGVcIj09PWUudGFnKXt2YXIgcj1QcihlLGlhKTtpZihyKXt2YXIgaT12YShyKSxvPWkubmFtZSxhPWkuZHluYW1pYztlLnNsb3RUYXJnZXQ9byxlLnNsb3RUYXJnZXREeW5hbWljPWEsZS5zbG90U2NvcGU9ci52YWx1ZXx8Y2F9fWVsc2V7dmFyIHM9UHIoZSxpYSk7aWYocyl7dmFyIGM9ZS5zY29wZWRTbG90c3x8KGUuc2NvcGVkU2xvdHM9e30pLHU9dmEocyksbD11Lm5hbWUsZj11LmR5bmFtaWMscD1jW2xdPXVhKFwidGVtcGxhdGVcIixbXSxlKTtwLnNsb3RUYXJnZXQ9bCxwLnNsb3RUYXJnZXREeW5hbWljPWYscC5jaGlsZHJlbj1lLmNoaWxkcmVuLmZpbHRlcihmdW5jdGlvbihlKXtpZighZS5zbG90U2NvcGUpcmV0dXJuIGUucGFyZW50PXAsITB9KSxwLnNsb3RTY29wZT1zLnZhbHVlfHxjYSxlLmNoaWxkcmVuPVtdLGUucGxhaW49ITF9fX0oZSksZnVuY3Rpb24oZSl7XCJzbG90XCI9PT1lLnRhZyYmKGUuc2xvdE5hbWU9SXIoZSxcIm5hbWVcIikpfShlKSxmdW5jdGlvbihlKXt2YXIgdDsodD1JcihlLFwiaXNcIikpJiYoZS5jb21wb25lbnQ9dCk7bnVsbCE9RnIoZSxcImlubGluZS10ZW1wbGF0ZVwiKSYmKGUuaW5saW5lVGVtcGxhdGU9ITApfShlKTtmb3IodmFyIGk9MDtpPHpvLmxlbmd0aDtpKyspZT16b1tpXShlLHQpfHxlO3JldHVybiBmdW5jdGlvbihlKXt2YXIgdCxuLHIsaSxvLGEscyxjLHU9ZS5hdHRyc0xpc3Q7Zm9yKHQ9MCxuPXUubGVuZ3RoO3Q8bjt0KyspaWYocj1pPXVbdF0ubmFtZSxvPXVbdF0udmFsdWUsR28udGVzdChyKSlpZihlLmhhc0JpbmRpbmdzPSEwLChhPWhhKHIucmVwbGFjZShHbyxcIlwiKSkpJiYocj1yLnJlcGxhY2UocmEsXCJcIikpLG5hLnRlc3Qocikpcj1yLnJlcGxhY2UobmEsXCJcIiksbz1BcihvKSwoYz1lYS50ZXN0KHIpKSYmKHI9ci5zbGljZSgxLC0xKSksYSYmKGEucHJvcCYmIWMmJlwiaW5uZXJIdG1sXCI9PT0ocj1iKHIpKSYmKHI9XCJpbm5lckhUTUxcIiksYS5jYW1lbCYmIWMmJihyPWIocikpLGEuc3luYyYmKHM9QnIobyxcIiRldmVudFwiKSxjP01yKGUsJ1widXBkYXRlOlwiKygnK3IrXCIpXCIscyxudWxsLCExLDAsdVt0XSwhMCk6KE1yKGUsXCJ1cGRhdGU6XCIrYihyKSxzLG51bGwsITEsMCx1W3RdKSxDKHIpIT09YihyKSYmTXIoZSxcInVwZGF0ZTpcIitDKHIpLHMsbnVsbCwhMSwwLHVbdF0pKSkpLGEmJmEucHJvcHx8IWUuY29tcG9uZW50JiZxbyhlLnRhZyxlLmF0dHJzTWFwLnR5cGUscik/RXIoZSxyLG8sdVt0XSxjKTpOcihlLHIsbyx1W3RdLGMpO2Vsc2UgaWYoWm8udGVzdChyKSlyPXIucmVwbGFjZShabyxcIlwiKSwoYz1lYS50ZXN0KHIpKSYmKHI9ci5zbGljZSgxLC0xKSksTXIoZSxyLG8sYSwhMSwwLHVbdF0sYyk7ZWxzZXt2YXIgbD0ocj1yLnJlcGxhY2UoR28sXCJcIikpLm1hdGNoKHRhKSxmPWwmJmxbMV07Yz0hMSxmJiYocj1yLnNsaWNlKDAsLShmLmxlbmd0aCsxKSksZWEudGVzdChmKSYmKGY9Zi5zbGljZSgxLC0xKSxjPSEwKSksRHIoZSxyLGksbyxmLGMsYSx1W3RdKX1lbHNlIE5yKGUscixKU09OLnN0cmluZ2lmeShvKSx1W3RdKSwhZS5jb21wb25lbnQmJlwibXV0ZWRcIj09PXImJnFvKGUudGFnLGUuYXR0cnNNYXAudHlwZSxyKSYmRXIoZSxyLFwidHJ1ZVwiLHVbdF0pfShlKSxlfWZ1bmN0aW9uIHBhKGUpe3ZhciB0O2lmKHQ9RnIoZSxcInYtZm9yXCIpKXt2YXIgbj1mdW5jdGlvbihlKXt2YXIgdD1lLm1hdGNoKFhvKTtpZighdClyZXR1cm47dmFyIG49e307bi5mb3I9dFsyXS50cmltKCk7dmFyIHI9dFsxXS50cmltKCkucmVwbGFjZShRbyxcIlwiKSxpPXIubWF0Y2goWW8pO2k/KG4uYWxpYXM9ci5yZXBsYWNlKFlvLFwiXCIpLnRyaW0oKSxuLml0ZXJhdG9yMT1pWzFdLnRyaW0oKSxpWzJdJiYobi5pdGVyYXRvcjI9aVsyXS50cmltKCkpKTpuLmFsaWFzPXI7cmV0dXJuIG59KHQpO24mJkEoZSxuKX19ZnVuY3Rpb24gZGEoZSx0KXtlLmlmQ29uZGl0aW9uc3x8KGUuaWZDb25kaXRpb25zPVtdKSxlLmlmQ29uZGl0aW9ucy5wdXNoKHQpfWZ1bmN0aW9uIHZhKGUpe3ZhciB0PWUubmFtZS5yZXBsYWNlKGlhLFwiXCIpO3JldHVybiB0fHxcIiNcIiE9PWUubmFtZVswXSYmKHQ9XCJkZWZhdWx0XCIpLGVhLnRlc3QodCk/e25hbWU6dC5zbGljZSgxLC0xKSxkeW5hbWljOiEwfTp7bmFtZTonXCInK3QrJ1wiJyxkeW5hbWljOiExfX1mdW5jdGlvbiBoYShlKXt2YXIgdD1lLm1hdGNoKHJhKTtpZih0KXt2YXIgbj17fTtyZXR1cm4gdC5mb3JFYWNoKGZ1bmN0aW9uKGUpe25bZS5zbGljZSgxKV09ITB9KSxufX1mdW5jdGlvbiBtYShlKXtmb3IodmFyIHQ9e30sbj0wLHI9ZS5sZW5ndGg7bjxyO24rKyl0W2Vbbl0ubmFtZV09ZVtuXS52YWx1ZTtyZXR1cm4gdH12YXIgeWE9L154bWxuczpOU1xcZCsvLGdhPS9eTlNcXGQrOi87ZnVuY3Rpb24gX2EoZSl7cmV0dXJuIHVhKGUudGFnLGUuYXR0cnNMaXN0LnNsaWNlKCksZS5wYXJlbnQpfXZhciBiYT1bbW8sZ28se3ByZVRyYW5zZm9ybU5vZGU6ZnVuY3Rpb24oZSx0KXtpZihcImlucHV0XCI9PT1lLnRhZyl7dmFyIG4scj1lLmF0dHJzTWFwO2lmKCFyW1widi1tb2RlbFwiXSlyZXR1cm47aWYoKHJbXCI6dHlwZVwiXXx8cltcInYtYmluZDp0eXBlXCJdKSYmKG49SXIoZSxcInR5cGVcIikpLHIudHlwZXx8bnx8IXJbXCJ2LWJpbmRcIl18fChuPVwiKFwiK3JbXCJ2LWJpbmRcIl0rXCIpLnR5cGVcIiksbil7dmFyIGk9RnIoZSxcInYtaWZcIiwhMCksbz1pP1wiJiYoXCIraStcIilcIjpcIlwiLGE9bnVsbCE9RnIoZSxcInYtZWxzZVwiLCEwKSxzPUZyKGUsXCJ2LWVsc2UtaWZcIiwhMCksYz1fYShlKTtwYShjKSxqcihjLFwidHlwZVwiLFwiY2hlY2tib3hcIiksZmEoYyx0KSxjLnByb2Nlc3NlZD0hMCxjLmlmPVwiKFwiK24rXCIpPT09J2NoZWNrYm94J1wiK28sZGEoYyx7ZXhwOmMuaWYsYmxvY2s6Y30pO3ZhciB1PV9hKGUpO0ZyKHUsXCJ2LWZvclwiLCEwKSxqcih1LFwidHlwZVwiLFwicmFkaW9cIiksZmEodSx0KSxkYShjLHtleHA6XCIoXCIrbitcIik9PT0ncmFkaW8nXCIrbyxibG9jazp1fSk7dmFyIGw9X2EoZSk7cmV0dXJuIEZyKGwsXCJ2LWZvclwiLCEwKSxqcihsLFwiOnR5cGVcIixuKSxmYShsLHQpLGRhKGMse2V4cDppLGJsb2NrOmx9KSxhP2MuZWxzZT0hMDpzJiYoYy5lbHNlaWY9cyksY319fX1dO3ZhciAkYSx3YSxDYT17ZXhwZWN0SFRNTDohMCxtb2R1bGVzOmJhLGRpcmVjdGl2ZXM6e21vZGVsOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10LnZhbHVlLGk9dC5tb2RpZmllcnMsbz1lLnRhZyxhPWUuYXR0cnNNYXAudHlwZTtpZihlLmNvbXBvbmVudClyZXR1cm4gSHIoZSxyLGkpLCExO2lmKFwic2VsZWN0XCI9PT1vKSFmdW5jdGlvbihlLHQsbil7dmFyIHI9J3ZhciAkJHNlbGVjdGVkVmFsID0gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucyxmdW5jdGlvbihvKXtyZXR1cm4gby5zZWxlY3RlZH0pLm1hcChmdW5jdGlvbihvKXt2YXIgdmFsID0gXCJfdmFsdWVcIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlO3JldHVybiAnKyhuJiZuLm51bWJlcj9cIl9uKHZhbClcIjpcInZhbFwiKStcIn0pO1wiO3I9citcIiBcIitCcih0LFwiJGV2ZW50LnRhcmdldC5tdWx0aXBsZSA/ICQkc2VsZWN0ZWRWYWwgOiAkJHNlbGVjdGVkVmFsWzBdXCIpLE1yKGUsXCJjaGFuZ2VcIixyLG51bGwsITApfShlLHIsaSk7ZWxzZSBpZihcImlucHV0XCI9PT1vJiZcImNoZWNrYm94XCI9PT1hKSFmdW5jdGlvbihlLHQsbil7dmFyIHI9biYmbi5udW1iZXIsaT1JcihlLFwidmFsdWVcIil8fFwibnVsbFwiLG89SXIoZSxcInRydWUtdmFsdWVcIil8fFwidHJ1ZVwiLGE9SXIoZSxcImZhbHNlLXZhbHVlXCIpfHxcImZhbHNlXCI7RXIoZSxcImNoZWNrZWRcIixcIkFycmF5LmlzQXJyYXkoXCIrdCtcIik/X2koXCIrdCtcIixcIitpK1wiKT4tMVwiKyhcInRydWVcIj09PW8/XCI6KFwiK3QrXCIpXCI6XCI6X3EoXCIrdCtcIixcIitvK1wiKVwiKSksTXIoZSxcImNoYW5nZVwiLFwidmFyICQkYT1cIit0K1wiLCQkZWw9JGV2ZW50LnRhcmdldCwkJGM9JCRlbC5jaGVja2VkPyhcIitvK1wiKTooXCIrYStcIik7aWYoQXJyYXkuaXNBcnJheSgkJGEpKXt2YXIgJCR2PVwiKyhyP1wiX24oXCIraStcIilcIjppKStcIiwkJGk9X2koJCRhLCQkdik7aWYoJCRlbC5jaGVja2VkKXskJGk8MCYmKFwiK0JyKHQsXCIkJGEuY29uY2F0KFskJHZdKVwiKStcIil9ZWxzZXskJGk+LTEmJihcIitCcih0LFwiJCRhLnNsaWNlKDAsJCRpKS5jb25jYXQoJCRhLnNsaWNlKCQkaSsxKSlcIikrXCIpfX1lbHNle1wiK0JyKHQsXCIkJGNcIikrXCJ9XCIsbnVsbCwhMCl9KGUscixpKTtlbHNlIGlmKFwiaW5wdXRcIj09PW8mJlwicmFkaW9cIj09PWEpIWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uJiZuLm51bWJlcixpPUlyKGUsXCJ2YWx1ZVwiKXx8XCJudWxsXCI7RXIoZSxcImNoZWNrZWRcIixcIl9xKFwiK3QrXCIsXCIrKGk9cj9cIl9uKFwiK2krXCIpXCI6aSkrXCIpXCIpLE1yKGUsXCJjaGFuZ2VcIixCcih0LGkpLG51bGwsITApfShlLHIsaSk7ZWxzZSBpZihcImlucHV0XCI9PT1vfHxcInRleHRhcmVhXCI9PT1vKSFmdW5jdGlvbihlLHQsbil7dmFyIHI9ZS5hdHRyc01hcC50eXBlLGk9bnx8e30sbz1pLmxhenksYT1pLm51bWJlcixzPWkudHJpbSxjPSFvJiZcInJhbmdlXCIhPT1yLHU9bz9cImNoYW5nZVwiOlwicmFuZ2VcIj09PXI/V3I6XCJpbnB1dFwiLGw9XCIkZXZlbnQudGFyZ2V0LnZhbHVlXCI7cyYmKGw9XCIkZXZlbnQudGFyZ2V0LnZhbHVlLnRyaW0oKVwiKSxhJiYobD1cIl9uKFwiK2wrXCIpXCIpO3ZhciBmPUJyKHQsbCk7YyYmKGY9XCJpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47XCIrZiksRXIoZSxcInZhbHVlXCIsXCIoXCIrdCtcIilcIiksTXIoZSx1LGYsbnVsbCwhMCksKHN8fGEpJiZNcihlLFwiYmx1clwiLFwiJGZvcmNlVXBkYXRlKClcIil9KGUscixpKTtlbHNlIGlmKCFGLmlzUmVzZXJ2ZWRUYWcobykpcmV0dXJuIEhyKGUscixpKSwhMTtyZXR1cm4hMH0sdGV4dDpmdW5jdGlvbihlLHQpe3QudmFsdWUmJkVyKGUsXCJ0ZXh0Q29udGVudFwiLFwiX3MoXCIrdC52YWx1ZStcIilcIix0KX0saHRtbDpmdW5jdGlvbihlLHQpe3QudmFsdWUmJkVyKGUsXCJpbm5lckhUTUxcIixcIl9zKFwiK3QudmFsdWUrXCIpXCIsdCl9fSxpc1ByZVRhZzpmdW5jdGlvbihlKXtyZXR1cm5cInByZVwiPT09ZX0saXNVbmFyeVRhZzpibyxtdXN0VXNlUHJvcDpqbixjYW5CZUxlZnRPcGVuVGFnOiRvLGlzUmVzZXJ2ZWRUYWc6V24sZ2V0VGFnTmFtZXNwYWNlOlpuLHN0YXRpY0tleXM6ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29uY2F0KHQuc3RhdGljS2V5c3x8W10pfSxbXSkuam9pbihcIixcIil9KGJhKX0seGE9ZyhmdW5jdGlvbihlKXtyZXR1cm4gcChcInR5cGUsdGFnLGF0dHJzTGlzdCxhdHRyc01hcCxwbGFpbixwYXJlbnQsY2hpbGRyZW4sYXR0cnMsc3RhcnQsZW5kLHJhd0F0dHJzTWFwXCIrKGU/XCIsXCIrZTpcIlwiKSl9KTtmdW5jdGlvbiBrYShlLHQpe2UmJigkYT14YSh0LnN0YXRpY0tleXN8fFwiXCIpLHdhPXQuaXNSZXNlcnZlZFRhZ3x8VCxmdW5jdGlvbiBlKHQpe3Quc3RhdGljPWZ1bmN0aW9uKGUpe2lmKDI9PT1lLnR5cGUpcmV0dXJuITE7aWYoMz09PWUudHlwZSlyZXR1cm4hMDtyZXR1cm4hKCFlLnByZSYmKGUuaGFzQmluZGluZ3N8fGUuaWZ8fGUuZm9yfHxkKGUudGFnKXx8IXdhKGUudGFnKXx8ZnVuY3Rpb24oZSl7Zm9yKDtlLnBhcmVudDspe2lmKFwidGVtcGxhdGVcIiE9PShlPWUucGFyZW50KS50YWcpcmV0dXJuITE7aWYoZS5mb3IpcmV0dXJuITB9cmV0dXJuITF9KGUpfHwhT2JqZWN0LmtleXMoZSkuZXZlcnkoJGEpKSl9KHQpO2lmKDE9PT10LnR5cGUpe2lmKCF3YSh0LnRhZykmJlwic2xvdFwiIT09dC50YWcmJm51bGw9PXQuYXR0cnNNYXBbXCJpbmxpbmUtdGVtcGxhdGVcIl0pcmV0dXJuO2Zvcih2YXIgbj0wLHI9dC5jaGlsZHJlbi5sZW5ndGg7bjxyO24rKyl7dmFyIGk9dC5jaGlsZHJlbltuXTtlKGkpLGkuc3RhdGljfHwodC5zdGF0aWM9ITEpfWlmKHQuaWZDb25kaXRpb25zKWZvcih2YXIgbz0xLGE9dC5pZkNvbmRpdGlvbnMubGVuZ3RoO288YTtvKyspe3ZhciBzPXQuaWZDb25kaXRpb25zW29dLmJsb2NrO2Uocykscy5zdGF0aWN8fCh0LnN0YXRpYz0hMSl9fX0oZSksZnVuY3Rpb24gZSh0LG4pe2lmKDE9PT10LnR5cGUpe2lmKCh0LnN0YXRpY3x8dC5vbmNlKSYmKHQuc3RhdGljSW5Gb3I9biksdC5zdGF0aWMmJnQuY2hpbGRyZW4ubGVuZ3RoJiYoMSE9PXQuY2hpbGRyZW4ubGVuZ3RofHwzIT09dC5jaGlsZHJlblswXS50eXBlKSlyZXR1cm4gdm9pZCh0LnN0YXRpY1Jvb3Q9ITApO2lmKHQuc3RhdGljUm9vdD0hMSx0LmNoaWxkcmVuKWZvcih2YXIgcj0wLGk9dC5jaGlsZHJlbi5sZW5ndGg7cjxpO3IrKyllKHQuY2hpbGRyZW5bcl0sbnx8ISF0LmZvcik7aWYodC5pZkNvbmRpdGlvbnMpZm9yKHZhciBvPTEsYT10LmlmQ29uZGl0aW9ucy5sZW5ndGg7bzxhO28rKyllKHQuaWZDb25kaXRpb25zW29dLmJsb2NrLG4pfX0oZSwhMSkpfXZhciBBYT0vXihbXFx3JF9dK3xcXChbXildKj9cXCkpXFxzKj0+fF5mdW5jdGlvbig/OlxccytbXFx3JF0rKT9cXHMqXFwoLyxPYT0vXFwoW14pXSo/XFwpOyokLyxTYT0vXltBLVphLXpfJF1bXFx3JF0qKD86XFwuW0EtWmEtel8kXVtcXHckXSp8XFxbJ1teJ10qPyddfFxcW1wiW15cIl0qP1wiXXxcXFtcXGQrXXxcXFtbQS1aYS16XyRdW1xcdyRdKl0pKiQvLFRhPXtlc2M6MjcsdGFiOjksZW50ZXI6MTMsc3BhY2U6MzIsdXA6MzgsbGVmdDozNyxyaWdodDozOSxkb3duOjQwLGRlbGV0ZTpbOCw0Nl19LEVhPXtlc2M6W1wiRXNjXCIsXCJFc2NhcGVcIl0sdGFiOlwiVGFiXCIsZW50ZXI6XCJFbnRlclwiLHNwYWNlOltcIiBcIixcIlNwYWNlYmFyXCJdLHVwOltcIlVwXCIsXCJBcnJvd1VwXCJdLGxlZnQ6W1wiTGVmdFwiLFwiQXJyb3dMZWZ0XCJdLHJpZ2h0OltcIlJpZ2h0XCIsXCJBcnJvd1JpZ2h0XCJdLGRvd246W1wiRG93blwiLFwiQXJyb3dEb3duXCJdLGRlbGV0ZTpbXCJCYWNrc3BhY2VcIixcIkRlbGV0ZVwiLFwiRGVsXCJdfSxOYT1mdW5jdGlvbihlKXtyZXR1cm5cImlmKFwiK2UrXCIpcmV0dXJuIG51bGw7XCJ9LGphPXtzdG9wOlwiJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1wiLHByZXZlbnQ6XCIkZXZlbnQucHJldmVudERlZmF1bHQoKTtcIixzZWxmOk5hKFwiJGV2ZW50LnRhcmdldCAhPT0gJGV2ZW50LmN1cnJlbnRUYXJnZXRcIiksY3RybDpOYShcIiEkZXZlbnQuY3RybEtleVwiKSxzaGlmdDpOYShcIiEkZXZlbnQuc2hpZnRLZXlcIiksYWx0Ok5hKFwiISRldmVudC5hbHRLZXlcIiksbWV0YTpOYShcIiEkZXZlbnQubWV0YUtleVwiKSxsZWZ0Ok5hKFwiJ2J1dHRvbicgaW4gJGV2ZW50ICYmICRldmVudC5idXR0b24gIT09IDBcIiksbWlkZGxlOk5hKFwiJ2J1dHRvbicgaW4gJGV2ZW50ICYmICRldmVudC5idXR0b24gIT09IDFcIikscmlnaHQ6TmEoXCInYnV0dG9uJyBpbiAkZXZlbnQgJiYgJGV2ZW50LmJ1dHRvbiAhPT0gMlwiKX07ZnVuY3Rpb24gRGEoZSx0KXt2YXIgbj10P1wibmF0aXZlT246XCI6XCJvbjpcIixyPVwiXCIsaT1cIlwiO2Zvcih2YXIgbyBpbiBlKXt2YXIgYT1MYShlW29dKTtlW29dJiZlW29dLmR5bmFtaWM/aSs9bytcIixcIithK1wiLFwiOnIrPSdcIicrbysnXCI6JythK1wiLFwifXJldHVybiByPVwie1wiK3Iuc2xpY2UoMCwtMSkrXCJ9XCIsaT9uK1wiX2QoXCIrcitcIixbXCIraS5zbGljZSgwLC0xKStcIl0pXCI6bityfWZ1bmN0aW9uIExhKGUpe2lmKCFlKXJldHVyblwiZnVuY3Rpb24oKXt9XCI7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm5cIltcIitlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gTGEoZSl9KS5qb2luKFwiLFwiKStcIl1cIjt2YXIgdD1TYS50ZXN0KGUudmFsdWUpLG49QWEudGVzdChlLnZhbHVlKSxyPVNhLnRlc3QoZS52YWx1ZS5yZXBsYWNlKE9hLFwiXCIpKTtpZihlLm1vZGlmaWVycyl7dmFyIGk9XCJcIixvPVwiXCIsYT1bXTtmb3IodmFyIHMgaW4gZS5tb2RpZmllcnMpaWYoamFbc10pbys9amFbc10sVGFbc10mJmEucHVzaChzKTtlbHNlIGlmKFwiZXhhY3RcIj09PXMpe3ZhciBjPWUubW9kaWZpZXJzO28rPU5hKFtcImN0cmxcIixcInNoaWZ0XCIsXCJhbHRcIixcIm1ldGFcIl0uZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFjW2VdfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVyblwiJGV2ZW50LlwiK2UrXCJLZXlcIn0pLmpvaW4oXCJ8fFwiKSl9ZWxzZSBhLnB1c2gocyk7cmV0dXJuIGEubGVuZ3RoJiYoaSs9ZnVuY3Rpb24oZSl7cmV0dXJuXCJpZighJGV2ZW50LnR5cGUuaW5kZXhPZigna2V5JykmJlwiK2UubWFwKE1hKS5qb2luKFwiJiZcIikrXCIpcmV0dXJuIG51bGw7XCJ9KGEpKSxvJiYoaSs9byksXCJmdW5jdGlvbigkZXZlbnQpe1wiK2krKHQ/XCJyZXR1cm4gXCIrZS52YWx1ZStcIigkZXZlbnQpXCI6bj9cInJldHVybiAoXCIrZS52YWx1ZStcIikoJGV2ZW50KVwiOnI/XCJyZXR1cm4gXCIrZS52YWx1ZTplLnZhbHVlKStcIn1cIn1yZXR1cm4gdHx8bj9lLnZhbHVlOlwiZnVuY3Rpb24oJGV2ZW50KXtcIisocj9cInJldHVybiBcIitlLnZhbHVlOmUudmFsdWUpK1wifVwifWZ1bmN0aW9uIE1hKGUpe3ZhciB0PXBhcnNlSW50KGUsMTApO2lmKHQpcmV0dXJuXCIkZXZlbnQua2V5Q29kZSE9PVwiK3Q7dmFyIG49VGFbZV0scj1FYVtlXTtyZXR1cm5cIl9rKCRldmVudC5rZXlDb2RlLFwiK0pTT04uc3RyaW5naWZ5KGUpK1wiLFwiK0pTT04uc3RyaW5naWZ5KG4pK1wiLCRldmVudC5rZXksXCIrSlNPTi5zdHJpbmdpZnkocikrXCIpXCJ9dmFyIElhPXtvbjpmdW5jdGlvbihlLHQpe2Uud3JhcExpc3RlbmVycz1mdW5jdGlvbihlKXtyZXR1cm5cIl9nKFwiK2UrXCIsXCIrdC52YWx1ZStcIilcIn19LGJpbmQ6ZnVuY3Rpb24oZSx0KXtlLndyYXBEYXRhPWZ1bmN0aW9uKG4pe3JldHVyblwiX2IoXCIrbitcIiwnXCIrZS50YWcrXCInLFwiK3QudmFsdWUrXCIsXCIrKHQubW9kaWZpZXJzJiZ0Lm1vZGlmaWVycy5wcm9wP1widHJ1ZVwiOlwiZmFsc2VcIikrKHQubW9kaWZpZXJzJiZ0Lm1vZGlmaWVycy5zeW5jP1wiLHRydWVcIjpcIlwiKStcIilcIn19LGNsb2FrOlN9LEZhPWZ1bmN0aW9uKGUpe3RoaXMub3B0aW9ucz1lLHRoaXMud2Fybj1lLndhcm58fFNyLHRoaXMudHJhbnNmb3Jtcz1UcihlLm1vZHVsZXMsXCJ0cmFuc2Zvcm1Db2RlXCIpLHRoaXMuZGF0YUdlbkZucz1UcihlLm1vZHVsZXMsXCJnZW5EYXRhXCIpLHRoaXMuZGlyZWN0aXZlcz1BKEEoe30sSWEpLGUuZGlyZWN0aXZlcyk7dmFyIHQ9ZS5pc1Jlc2VydmVkVGFnfHxUO3RoaXMubWF5YmVDb21wb25lbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuISFlLmNvbXBvbmVudHx8IXQoZS50YWcpfSx0aGlzLm9uY2VJZD0wLHRoaXMuc3RhdGljUmVuZGVyRm5zPVtdLHRoaXMucHJlPSExfTtmdW5jdGlvbiBQYShlLHQpe3ZhciBuPW5ldyBGYSh0KTtyZXR1cm57cmVuZGVyOlwid2l0aCh0aGlzKXtyZXR1cm4gXCIrKGU/UmEoZSxuKTonX2MoXCJkaXZcIiknKStcIn1cIixzdGF0aWNSZW5kZXJGbnM6bi5zdGF0aWNSZW5kZXJGbnN9fWZ1bmN0aW9uIFJhKGUsdCl7aWYoZS5wYXJlbnQmJihlLnByZT1lLnByZXx8ZS5wYXJlbnQucHJlKSxlLnN0YXRpY1Jvb3QmJiFlLnN0YXRpY1Byb2Nlc3NlZClyZXR1cm4gSGEoZSx0KTtpZihlLm9uY2UmJiFlLm9uY2VQcm9jZXNzZWQpcmV0dXJuIEJhKGUsdCk7aWYoZS5mb3ImJiFlLmZvclByb2Nlc3NlZClyZXR1cm4gemEoZSx0KTtpZihlLmlmJiYhZS5pZlByb2Nlc3NlZClyZXR1cm4gVWEoZSx0KTtpZihcInRlbXBsYXRlXCIhPT1lLnRhZ3x8ZS5zbG90VGFyZ2V0fHx0LnByZSl7aWYoXCJzbG90XCI9PT1lLnRhZylyZXR1cm4gZnVuY3Rpb24oZSx0KXt2YXIgbj1lLnNsb3ROYW1lfHwnXCJkZWZhdWx0XCInLHI9cWEoZSx0KSxpPVwiX3QoXCIrbisocj9cIixcIityOlwiXCIpLG89ZS5hdHRyc3x8ZS5keW5hbWljQXR0cnM/R2EoKGUuYXR0cnN8fFtdKS5jb25jYXQoZS5keW5hbWljQXR0cnN8fFtdKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue25hbWU6YihlLm5hbWUpLHZhbHVlOmUudmFsdWUsZHluYW1pYzplLmR5bmFtaWN9fSkpOm51bGwsYT1lLmF0dHJzTWFwW1widi1iaW5kXCJdOyFvJiYhYXx8cnx8KGkrPVwiLG51bGxcIik7byYmKGkrPVwiLFwiK28pO2EmJihpKz0obz9cIlwiOlwiLG51bGxcIikrXCIsXCIrYSk7cmV0dXJuIGkrXCIpXCJ9KGUsdCk7dmFyIG47aWYoZS5jb21wb25lbnQpbj1mdW5jdGlvbihlLHQsbil7dmFyIHI9dC5pbmxpbmVUZW1wbGF0ZT9udWxsOnFhKHQsbiwhMCk7cmV0dXJuXCJfYyhcIitlK1wiLFwiK1ZhKHQsbikrKHI/XCIsXCIrcjpcIlwiKStcIilcIn0oZS5jb21wb25lbnQsZSx0KTtlbHNle3ZhciByOyghZS5wbGFpbnx8ZS5wcmUmJnQubWF5YmVDb21wb25lbnQoZSkpJiYocj1WYShlLHQpKTt2YXIgaT1lLmlubGluZVRlbXBsYXRlP251bGw6cWEoZSx0LCEwKTtuPVwiX2MoJ1wiK2UudGFnK1wiJ1wiKyhyP1wiLFwiK3I6XCJcIikrKGk/XCIsXCIraTpcIlwiKStcIilcIn1mb3IodmFyIG89MDtvPHQudHJhbnNmb3Jtcy5sZW5ndGg7bysrKW49dC50cmFuc2Zvcm1zW29dKGUsbik7cmV0dXJuIG59cmV0dXJuIHFhKGUsdCl8fFwidm9pZCAwXCJ9ZnVuY3Rpb24gSGEoZSx0KXtlLnN0YXRpY1Byb2Nlc3NlZD0hMDt2YXIgbj10LnByZTtyZXR1cm4gZS5wcmUmJih0LnByZT1lLnByZSksdC5zdGF0aWNSZW5kZXJGbnMucHVzaChcIndpdGgodGhpcyl7cmV0dXJuIFwiK1JhKGUsdCkrXCJ9XCIpLHQucHJlPW4sXCJfbShcIisodC5zdGF0aWNSZW5kZXJGbnMubGVuZ3RoLTEpKyhlLnN0YXRpY0luRm9yP1wiLHRydWVcIjpcIlwiKStcIilcIn1mdW5jdGlvbiBCYShlLHQpe2lmKGUub25jZVByb2Nlc3NlZD0hMCxlLmlmJiYhZS5pZlByb2Nlc3NlZClyZXR1cm4gVWEoZSx0KTtpZihlLnN0YXRpY0luRm9yKXtmb3IodmFyIG49XCJcIixyPWUucGFyZW50O3I7KXtpZihyLmZvcil7bj1yLmtleTticmVha31yPXIucGFyZW50fXJldHVybiBuP1wiX28oXCIrUmEoZSx0KStcIixcIit0Lm9uY2VJZCsrK1wiLFwiK24rXCIpXCI6UmEoZSx0KX1yZXR1cm4gSGEoZSx0KX1mdW5jdGlvbiBVYShlLHQsbixyKXtyZXR1cm4gZS5pZlByb2Nlc3NlZD0hMCxmdW5jdGlvbiBlKHQsbixyLGkpe2lmKCF0Lmxlbmd0aClyZXR1cm4gaXx8XCJfZSgpXCI7dmFyIG89dC5zaGlmdCgpO3JldHVybiBvLmV4cD9cIihcIitvLmV4cCtcIik/XCIrYShvLmJsb2NrKStcIjpcIitlKHQsbixyLGkpOlwiXCIrYShvLmJsb2NrKTtmdW5jdGlvbiBhKGUpe3JldHVybiByP3IoZSxuKTplLm9uY2U/QmEoZSxuKTpSYShlLG4pfX0oZS5pZkNvbmRpdGlvbnMuc2xpY2UoKSx0LG4scil9ZnVuY3Rpb24gemEoZSx0LG4scil7dmFyIGk9ZS5mb3Isbz1lLmFsaWFzLGE9ZS5pdGVyYXRvcjE/XCIsXCIrZS5pdGVyYXRvcjE6XCJcIixzPWUuaXRlcmF0b3IyP1wiLFwiK2UuaXRlcmF0b3IyOlwiXCI7cmV0dXJuIGUuZm9yUHJvY2Vzc2VkPSEwLChyfHxcIl9sXCIpK1wiKChcIitpK1wiKSxmdW5jdGlvbihcIitvK2ErcytcIil7cmV0dXJuIFwiKyhufHxSYSkoZSx0KStcIn0pXCJ9ZnVuY3Rpb24gVmEoZSx0KXt2YXIgbj1cIntcIixyPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5kaXJlY3RpdmVzO2lmKCFuKXJldHVybjt2YXIgcixpLG8sYSxzPVwiZGlyZWN0aXZlczpbXCIsYz0hMTtmb3Iocj0wLGk9bi5sZW5ndGg7cjxpO3IrKyl7bz1uW3JdLGE9ITA7dmFyIHU9dC5kaXJlY3RpdmVzW28ubmFtZV07dSYmKGE9ISF1KGUsbyx0Lndhcm4pKSxhJiYoYz0hMCxzKz0ne25hbWU6XCInK28ubmFtZSsnXCIscmF3TmFtZTpcIicrby5yYXdOYW1lKydcIicrKG8udmFsdWU/XCIsdmFsdWU6KFwiK28udmFsdWUrXCIpLGV4cHJlc3Npb246XCIrSlNPTi5zdHJpbmdpZnkoby52YWx1ZSk6XCJcIikrKG8uYXJnP1wiLGFyZzpcIisoby5pc0R5bmFtaWNBcmc/by5hcmc6J1wiJytvLmFyZysnXCInKTpcIlwiKSsoby5tb2RpZmllcnM/XCIsbW9kaWZpZXJzOlwiK0pTT04uc3RyaW5naWZ5KG8ubW9kaWZpZXJzKTpcIlwiKStcIn0sXCIpfWlmKGMpcmV0dXJuIHMuc2xpY2UoMCwtMSkrXCJdXCJ9KGUsdCk7ciYmKG4rPXIrXCIsXCIpLGUua2V5JiYobis9XCJrZXk6XCIrZS5rZXkrXCIsXCIpLGUucmVmJiYobis9XCJyZWY6XCIrZS5yZWYrXCIsXCIpLGUucmVmSW5Gb3ImJihuKz1cInJlZkluRm9yOnRydWUsXCIpLGUucHJlJiYobis9XCJwcmU6dHJ1ZSxcIiksZS5jb21wb25lbnQmJihuKz0ndGFnOlwiJytlLnRhZysnXCIsJyk7Zm9yKHZhciBpPTA7aTx0LmRhdGFHZW5GbnMubGVuZ3RoO2krKyluKz10LmRhdGFHZW5GbnNbaV0oZSk7aWYoZS5hdHRycyYmKG4rPVwiYXR0cnM6XCIrR2EoZS5hdHRycykrXCIsXCIpLGUucHJvcHMmJihuKz1cImRvbVByb3BzOlwiK0dhKGUucHJvcHMpK1wiLFwiKSxlLmV2ZW50cyYmKG4rPURhKGUuZXZlbnRzLCExKStcIixcIiksZS5uYXRpdmVFdmVudHMmJihuKz1EYShlLm5hdGl2ZUV2ZW50cywhMCkrXCIsXCIpLGUuc2xvdFRhcmdldCYmIWUuc2xvdFNjb3BlJiYobis9XCJzbG90OlwiK2Uuc2xvdFRhcmdldCtcIixcIiksZS5zY29wZWRTbG90cyYmKG4rPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1lLmZvcnx8T2JqZWN0LmtleXModCkuc29tZShmdW5jdGlvbihlKXt2YXIgbj10W2VdO3JldHVybiBuLnNsb3RUYXJnZXREeW5hbWljfHxuLmlmfHxuLmZvcnx8S2Eobil9KSxpPSEhZS5pZjtpZighcilmb3IodmFyIG89ZS5wYXJlbnQ7bzspe2lmKG8uc2xvdFNjb3BlJiZvLnNsb3RTY29wZSE9PWNhfHxvLmZvcil7cj0hMDticmVha31vLmlmJiYoaT0hMCksbz1vLnBhcmVudH12YXIgYT1PYmplY3Qua2V5cyh0KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIEphKHRbZV0sbil9KS5qb2luKFwiLFwiKTtyZXR1cm5cInNjb3BlZFNsb3RzOl91KFtcIithK1wiXVwiKyhyP1wiLG51bGwsdHJ1ZVwiOlwiXCIpKyghciYmaT9cIixudWxsLGZhbHNlLFwiK2Z1bmN0aW9uKGUpe3ZhciB0PTUzODEsbj1lLmxlbmd0aDtmb3IoO247KXQ9MzMqdF5lLmNoYXJDb2RlQXQoLS1uKTtyZXR1cm4gdD4+PjB9KGEpOlwiXCIpK1wiKVwifShlLGUuc2NvcGVkU2xvdHMsdCkrXCIsXCIpLGUubW9kZWwmJihuKz1cIm1vZGVsOnt2YWx1ZTpcIitlLm1vZGVsLnZhbHVlK1wiLGNhbGxiYWNrOlwiK2UubW9kZWwuY2FsbGJhY2srXCIsZXhwcmVzc2lvbjpcIitlLm1vZGVsLmV4cHJlc3Npb24rXCJ9LFwiKSxlLmlubGluZVRlbXBsYXRlKXt2YXIgbz1mdW5jdGlvbihlLHQpe3ZhciBuPWUuY2hpbGRyZW5bMF07aWYobiYmMT09PW4udHlwZSl7dmFyIHI9UGEobix0Lm9wdGlvbnMpO3JldHVyblwiaW5saW5lVGVtcGxhdGU6e3JlbmRlcjpmdW5jdGlvbigpe1wiK3IucmVuZGVyK1wifSxzdGF0aWNSZW5kZXJGbnM6W1wiK3Iuc3RhdGljUmVuZGVyRm5zLm1hcChmdW5jdGlvbihlKXtyZXR1cm5cImZ1bmN0aW9uKCl7XCIrZStcIn1cIn0pLmpvaW4oXCIsXCIpK1wiXX1cIn19KGUsdCk7byYmKG4rPW8rXCIsXCIpfXJldHVybiBuPW4ucmVwbGFjZSgvLCQvLFwiXCIpK1wifVwiLGUuZHluYW1pY0F0dHJzJiYobj1cIl9iKFwiK24rJyxcIicrZS50YWcrJ1wiLCcrR2EoZS5keW5hbWljQXR0cnMpK1wiKVwiKSxlLndyYXBEYXRhJiYobj1lLndyYXBEYXRhKG4pKSxlLndyYXBMaXN0ZW5lcnMmJihuPWUud3JhcExpc3RlbmVycyhuKSksbn1mdW5jdGlvbiBLYShlKXtyZXR1cm4gMT09PWUudHlwZSYmKFwic2xvdFwiPT09ZS50YWd8fGUuY2hpbGRyZW4uc29tZShLYSkpfWZ1bmN0aW9uIEphKGUsdCl7dmFyIG49ZS5hdHRyc01hcFtcInNsb3Qtc2NvcGVcIl07aWYoZS5pZiYmIWUuaWZQcm9jZXNzZWQmJiFuKXJldHVybiBVYShlLHQsSmEsXCJudWxsXCIpO2lmKGUuZm9yJiYhZS5mb3JQcm9jZXNzZWQpcmV0dXJuIHphKGUsdCxKYSk7dmFyIHI9ZS5zbG90U2NvcGU9PT1jYT9cIlwiOlN0cmluZyhlLnNsb3RTY29wZSksaT1cImZ1bmN0aW9uKFwiK3IrXCIpe3JldHVybiBcIisoXCJ0ZW1wbGF0ZVwiPT09ZS50YWc/ZS5pZiYmbj9cIihcIitlLmlmK1wiKT9cIisocWEoZSx0KXx8XCJ1bmRlZmluZWRcIikrXCI6dW5kZWZpbmVkXCI6cWEoZSx0KXx8XCJ1bmRlZmluZWRcIjpSYShlLHQpKStcIn1cIixvPXI/XCJcIjpcIixwcm94eTp0cnVlXCI7cmV0dXJuXCJ7a2V5OlwiKyhlLnNsb3RUYXJnZXR8fCdcImRlZmF1bHRcIicpK1wiLGZuOlwiK2krbytcIn1cIn1mdW5jdGlvbiBxYShlLHQsbixyLGkpe3ZhciBvPWUuY2hpbGRyZW47aWYoby5sZW5ndGgpe3ZhciBhPW9bMF07aWYoMT09PW8ubGVuZ3RoJiZhLmZvciYmXCJ0ZW1wbGF0ZVwiIT09YS50YWcmJlwic2xvdFwiIT09YS50YWcpe3ZhciBzPW4/dC5tYXliZUNvbXBvbmVudChhKT9cIiwxXCI6XCIsMFwiOlwiXCI7cmV0dXJuXCJcIisocnx8UmEpKGEsdCkrc312YXIgYz1uP2Z1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPTAscj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgaT1lW3JdO2lmKDE9PT1pLnR5cGUpe2lmKFdhKGkpfHxpLmlmQ29uZGl0aW9ucyYmaS5pZkNvbmRpdGlvbnMuc29tZShmdW5jdGlvbihlKXtyZXR1cm4gV2EoZS5ibG9jayl9KSl7bj0yO2JyZWFrfSh0KGkpfHxpLmlmQ29uZGl0aW9ucyYmaS5pZkNvbmRpdGlvbnMuc29tZShmdW5jdGlvbihlKXtyZXR1cm4gdChlLmJsb2NrKX0pKSYmKG49MSl9fXJldHVybiBufShvLHQubWF5YmVDb21wb25lbnQpOjAsdT1pfHxaYTtyZXR1cm5cIltcIitvLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdShlLHQpfSkuam9pbihcIixcIikrXCJdXCIrKGM/XCIsXCIrYzpcIlwiKX19ZnVuY3Rpb24gV2EoZSl7cmV0dXJuIHZvaWQgMCE9PWUuZm9yfHxcInRlbXBsYXRlXCI9PT1lLnRhZ3x8XCJzbG90XCI9PT1lLnRhZ31mdW5jdGlvbiBaYShlLHQpe3JldHVybiAxPT09ZS50eXBlP1JhKGUsdCk6Mz09PWUudHlwZSYmZS5pc0NvbW1lbnQ/KHI9ZSxcIl9lKFwiK0pTT04uc3RyaW5naWZ5KHIudGV4dCkrXCIpXCIpOlwiX3YoXCIrKDI9PT0obj1lKS50eXBlP24uZXhwcmVzc2lvbjpYYShKU09OLnN0cmluZ2lmeShuLnRleHQpKSkrXCIpXCI7dmFyIG4scn1mdW5jdGlvbiBHYShlKXtmb3IodmFyIHQ9XCJcIixuPVwiXCIscj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgaT1lW3JdLG89WGEoaS52YWx1ZSk7aS5keW5hbWljP24rPWkubmFtZStcIixcIitvK1wiLFwiOnQrPSdcIicraS5uYW1lKydcIjonK28rXCIsXCJ9cmV0dXJuIHQ9XCJ7XCIrdC5zbGljZSgwLC0xKStcIn1cIixuP1wiX2QoXCIrdCtcIixbXCIrbi5zbGljZSgwLC0xKStcIl0pXCI6dH1mdW5jdGlvbiBYYShlKXtyZXR1cm4gZS5yZXBsYWNlKC9cXHUyMDI4L2csXCJcXFxcdTIwMjhcIikucmVwbGFjZSgvXFx1MjAyOS9nLFwiXFxcXHUyMDI5XCIpfW5ldyBSZWdFeHAoXCJcXFxcYlwiK1wiZG8saWYsZm9yLGxldCxuZXcsdHJ5LHZhcixjYXNlLGVsc2Usd2l0aCxhd2FpdCxicmVhayxjYXRjaCxjbGFzcyxjb25zdCxzdXBlcix0aHJvdyx3aGlsZSx5aWVsZCxkZWxldGUsZXhwb3J0LGltcG9ydCxyZXR1cm4sc3dpdGNoLGRlZmF1bHQsZXh0ZW5kcyxmaW5hbGx5LGNvbnRpbnVlLGRlYnVnZ2VyLGZ1bmN0aW9uLGFyZ3VtZW50c1wiLnNwbGl0KFwiLFwiKS5qb2luKFwiXFxcXGJ8XFxcXGJcIikrXCJcXFxcYlwiKTtmdW5jdGlvbiBZYShlLHQpe3RyeXtyZXR1cm4gbmV3IEZ1bmN0aW9uKGUpfWNhdGNoKG4pe3JldHVybiB0LnB1c2goe2VycjpuLGNvZGU6ZX0pLFN9fWZ1bmN0aW9uIFFhKGUpe3ZhciB0PU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGZ1bmN0aW9uKG4scixpKXsocj1BKHt9LHIpKS53YXJuO2RlbGV0ZSByLndhcm47dmFyIG89ci5kZWxpbWl0ZXJzP1N0cmluZyhyLmRlbGltaXRlcnMpK246bjtpZih0W29dKXJldHVybiB0W29dO3ZhciBhPWUobixyKSxzPXt9LGM9W107cmV0dXJuIHMucmVuZGVyPVlhKGEucmVuZGVyLGMpLHMuc3RhdGljUmVuZGVyRm5zPWEuc3RhdGljUmVuZGVyRm5zLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gWWEoZSxjKX0pLHRbb109c319dmFyIGVzLHRzLG5zPShlcz1mdW5jdGlvbihlLHQpe3ZhciBuPWxhKGUudHJpbSgpLHQpOyExIT09dC5vcHRpbWl6ZSYma2Eobix0KTt2YXIgcj1QYShuLHQpO3JldHVybnthc3Q6bixyZW5kZXI6ci5yZW5kZXIsc3RhdGljUmVuZGVyRm5zOnIuc3RhdGljUmVuZGVyRm5zfX0sZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LG4pe3ZhciByPU9iamVjdC5jcmVhdGUoZSksaT1bXSxvPVtdO2lmKG4pZm9yKHZhciBhIGluIG4ubW9kdWxlcyYmKHIubW9kdWxlcz0oZS5tb2R1bGVzfHxbXSkuY29uY2F0KG4ubW9kdWxlcykpLG4uZGlyZWN0aXZlcyYmKHIuZGlyZWN0aXZlcz1BKE9iamVjdC5jcmVhdGUoZS5kaXJlY3RpdmVzfHxudWxsKSxuLmRpcmVjdGl2ZXMpKSxuKVwibW9kdWxlc1wiIT09YSYmXCJkaXJlY3RpdmVzXCIhPT1hJiYoclthXT1uW2FdKTtyLndhcm49ZnVuY3Rpb24oZSx0LG4peyhuP286aSkucHVzaChlKX07dmFyIHM9ZXModC50cmltKCkscik7cmV0dXJuIHMuZXJyb3JzPWkscy50aXBzPW8sc31yZXR1cm57Y29tcGlsZTp0LGNvbXBpbGVUb0Z1bmN0aW9uczpRYSh0KX19KShDYSkscnM9KG5zLmNvbXBpbGUsbnMuY29tcGlsZVRvRnVuY3Rpb25zKTtmdW5jdGlvbiBpcyhlKXtyZXR1cm4odHM9dHN8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLmlubmVySFRNTD1lPyc8YSBocmVmPVwiXFxuXCIvPic6JzxkaXYgYT1cIlxcblwiLz4nLHRzLmlubmVySFRNTC5pbmRleE9mKFwiJiMxMDtcIik+MH12YXIgb3M9ISF6JiZpcyghMSksYXM9ISF6JiZpcyghMCksc3M9ZyhmdW5jdGlvbihlKXt2YXIgdD1ZbihlKTtyZXR1cm4gdCYmdC5pbm5lckhUTUx9KSxjcz13bi5wcm90b3R5cGUuJG1vdW50O3duLnByb3RvdHlwZS4kbW91bnQ9ZnVuY3Rpb24oZSx0KXtpZigoZT1lJiZZbihlKSk9PT1kb2N1bWVudC5ib2R5fHxlPT09ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KXJldHVybiB0aGlzO3ZhciBuPXRoaXMuJG9wdGlvbnM7aWYoIW4ucmVuZGVyKXt2YXIgcj1uLnRlbXBsYXRlO2lmKHIpaWYoXCJzdHJpbmdcIj09dHlwZW9mIHIpXCIjXCI9PT1yLmNoYXJBdCgwKSYmKHI9c3MocikpO2Vsc2V7aWYoIXIubm9kZVR5cGUpcmV0dXJuIHRoaXM7cj1yLmlubmVySFRNTH1lbHNlIGUmJihyPWZ1bmN0aW9uKGUpe2lmKGUub3V0ZXJIVE1MKXJldHVybiBlLm91dGVySFRNTDt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3JldHVybiB0LmFwcGVuZENoaWxkKGUuY2xvbmVOb2RlKCEwKSksdC5pbm5lckhUTUx9KGUpKTtpZihyKXt2YXIgaT1ycyhyLHtvdXRwdXRTb3VyY2VSYW5nZTohMSxzaG91bGREZWNvZGVOZXdsaW5lczpvcyxzaG91bGREZWNvZGVOZXdsaW5lc0ZvckhyZWY6YXMsZGVsaW1pdGVyczpuLmRlbGltaXRlcnMsY29tbWVudHM6bi5jb21tZW50c30sdGhpcyksbz1pLnJlbmRlcixhPWkuc3RhdGljUmVuZGVyRm5zO24ucmVuZGVyPW8sbi5zdGF0aWNSZW5kZXJGbnM9YX19cmV0dXJuIGNzLmNhbGwodGhpcyxlLHQpfSx3bi5jb21waWxlPXJzLG1vZHVsZS5leHBvcnRzPXduOyIsIm1vZHVsZS5leHBvcnRzID0gd2luZG93W1wialF1ZXJ5XCJdOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuaW1wb3J0IEdyaWQgZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9ncmlkJztcbmltcG9ydCBGaWx0ZXJzUmVzZXRFeHRlbnNpb24gZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vZmlsdGVycy1yZXNldC1leHRlbnNpb24nO1xuaW1wb3J0IFNvcnRpbmdFeHRlbnNpb24gZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vc29ydGluZy1leHRlbnNpb24nO1xuaW1wb3J0IEV4cG9ydFRvU3FsTWFuYWdlckV4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9leHBvcnQtdG8tc3FsLW1hbmFnZXItZXh0ZW5zaW9uJztcbmltcG9ydCBSZWxvYWRMaXN0RXh0ZW5zaW9uIGZyb20gJ0Bjb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL3JlbG9hZC1saXN0LWV4dGVuc2lvbic7XG5pbXBvcnQgQnVsa0FjdGlvbkNoZWNrYm94RXh0ZW5zaW9uIGZyb20gJ0Bjb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL2J1bGstYWN0aW9uLWNoZWNrYm94LWV4dGVuc2lvbic7XG5pbXBvcnQgU3VibWl0QnVsa0V4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9zdWJtaXQtYnVsay1hY3Rpb24tZXh0ZW5zaW9uJztcbmltcG9ydCBTdWJtaXRSb3dBY3Rpb25FeHRlbnNpb24gZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vYWN0aW9uL3Jvdy9zdWJtaXQtcm93LWFjdGlvbi1leHRlbnNpb24nO1xuaW1wb3J0IExpbmtSb3dBY3Rpb25FeHRlbnNpb24gZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vbGluay1yb3ctYWN0aW9uLWV4dGVuc2lvbic7XG5pbXBvcnQgQ2F0ZWdvcnlQb3NpdGlvbkV4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9jb2x1bW4vY2F0YWxvZy9jYXRlZ29yeS1wb3NpdGlvbi1leHRlbnNpb24nO1xuaW1wb3J0IEFzeW5jVG9nZ2xlQ29sdW1uRXh0ZW5zaW9uIGZyb20gJ0Bjb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL2NvbHVtbi9jb21tb24vYXN5bmMtdG9nZ2xlLWNvbHVtbi1leHRlbnNpb24nO1xuaW1wb3J0IERlbGV0ZUNhdGVnb3J5Um93QWN0aW9uRXh0ZW5zaW9uXG4gIGZyb20gJ0Bjb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL2FjdGlvbi9yb3cvY2F0ZWdvcnkvZGVsZXRlLWNhdGVnb3J5LXJvdy1hY3Rpb24tZXh0ZW5zaW9uJztcbmltcG9ydCBEZWxldGVDYXRlZ29yaWVzQnVsa0FjdGlvbkV4dGVuc2lvblxuICBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9hY3Rpb24vYnVsay9jYXRlZ29yeS9kZWxldGUtY2F0ZWdvcmllcy1idWxrLWFjdGlvbi1leHRlbnNpb24nO1xuaW1wb3J0IENob2ljZVRhYmxlIGZyb20gJ0Bjb21wb25lbnRzL2Nob2ljZS10YWJsZSc7XG5pbXBvcnQgdGV4dFRvTGlua1Jld3JpdGVDb3BpZXIgZnJvbSAnQGNvbXBvbmVudHMvdGV4dC10by1saW5rLXJld3JpdGUtY29waWVyJztcbmltcG9ydCBDaG9pY2VUcmVlIGZyb20gJ0Bjb21wb25lbnRzL2Zvcm0vY2hvaWNlLXRyZWUnO1xuaW1wb3J0IEZvcm1TdWJtaXRCdXR0b24gZnJvbSAnQGNvbXBvbmVudHMvZm9ybS1zdWJtaXQtYnV0dG9uJztcbmltcG9ydCBGaWx0ZXJzU3VibWl0QnV0dG9uRW5hYmxlckV4dGVuc2lvblxuICBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9maWx0ZXJzLXN1Ym1pdC1idXR0b24tZW5hYmxlci1leHRlbnNpb24nO1xuaW1wb3J0IFNob3djYXNlQ2FyZCBmcm9tICdAY29tcG9uZW50cy9zaG93Y2FzZS1jYXJkL3Nob3djYXNlLWNhcmQnO1xuaW1wb3J0IFNob3djYXNlQ2FyZENsb3NlRXh0ZW5zaW9uIGZyb20gJ0Bjb21wb25lbnRzL3Nob3djYXNlLWNhcmQvZXh0ZW5zaW9uL3Nob3djYXNlLWNhcmQtY2xvc2UtZXh0ZW5zaW9uJztcbmltcG9ydCBUZXh0V2l0aFJlY29tbWVuZGVkTGVuZ3RoQ291bnRlciBmcm9tICdAY29tcG9uZW50cy9mb3JtL3RleHQtd2l0aC1yZWNvbW1lbmRlZC1sZW5ndGgtY291bnRlcic7XG5pbXBvcnQgU2VycCBmcm9tICdAYXBwL3V0aWxzL3NlcnAvaW5kZXgnO1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbiQoKCkgPT4ge1xuICBjb25zdCBjYXRlZ29yaWVzR3JpZCA9IG5ldyBHcmlkKCdjYXRlZ29yeScpO1xuXG4gIGNhdGVnb3JpZXNHcmlkLmFkZEV4dGVuc2lvbihuZXcgRmlsdGVyc1Jlc2V0RXh0ZW5zaW9uKCkpO1xuICBjYXRlZ29yaWVzR3JpZC5hZGRFeHRlbnNpb24obmV3IFNvcnRpbmdFeHRlbnNpb24oKSk7XG4gIGNhdGVnb3JpZXNHcmlkLmFkZEV4dGVuc2lvbihuZXcgQ2F0ZWdvcnlQb3NpdGlvbkV4dGVuc2lvbigpKTtcbiAgY2F0ZWdvcmllc0dyaWQuYWRkRXh0ZW5zaW9uKG5ldyBFeHBvcnRUb1NxbE1hbmFnZXJFeHRlbnNpb24oKSk7XG4gIGNhdGVnb3JpZXNHcmlkLmFkZEV4dGVuc2lvbihuZXcgUmVsb2FkTGlzdEV4dGVuc2lvbigpKTtcbiAgY2F0ZWdvcmllc0dyaWQuYWRkRXh0ZW5zaW9uKG5ldyBCdWxrQWN0aW9uQ2hlY2tib3hFeHRlbnNpb24oKSk7XG4gIGNhdGVnb3JpZXNHcmlkLmFkZEV4dGVuc2lvbihuZXcgU3VibWl0QnVsa0V4dGVuc2lvbigpKTtcbiAgY2F0ZWdvcmllc0dyaWQuYWRkRXh0ZW5zaW9uKG5ldyBTdWJtaXRSb3dBY3Rpb25FeHRlbnNpb24oKSk7XG4gIGNhdGVnb3JpZXNHcmlkLmFkZEV4dGVuc2lvbihuZXcgTGlua1Jvd0FjdGlvbkV4dGVuc2lvbigpKTtcbiAgY2F0ZWdvcmllc0dyaWQuYWRkRXh0ZW5zaW9uKG5ldyBBc3luY1RvZ2dsZUNvbHVtbkV4dGVuc2lvbigpKTtcbiAgY2F0ZWdvcmllc0dyaWQuYWRkRXh0ZW5zaW9uKG5ldyBEZWxldGVDYXRlZ29yeVJvd0FjdGlvbkV4dGVuc2lvbigpKTtcbiAgY2F0ZWdvcmllc0dyaWQuYWRkRXh0ZW5zaW9uKG5ldyBEZWxldGVDYXRlZ29yaWVzQnVsa0FjdGlvbkV4dGVuc2lvbigpKTtcbiAgY2F0ZWdvcmllc0dyaWQuYWRkRXh0ZW5zaW9uKG5ldyBGaWx0ZXJzU3VibWl0QnV0dG9uRW5hYmxlckV4dGVuc2lvbigpKTtcblxuICBjb25zdCBzaG93Y2FzZUNhcmQgPSBuZXcgU2hvd2Nhc2VDYXJkKCdjYXRlZ29yaWVzU2hvd2Nhc2VDYXJkJyk7XG4gIHNob3djYXNlQ2FyZC5hZGRFeHRlbnNpb24obmV3IFNob3djYXNlQ2FyZENsb3NlRXh0ZW5zaW9uKCkpO1xuXG4gIHdpbmRvdy5wcmVzdGFzaG9wLmNvbXBvbmVudC5pbml0Q29tcG9uZW50cyhcbiAgICBbXG4gICAgICAnVHJhbnNsYXRhYmxlRmllbGQnLFxuICAgICAgJ1RpbnlNQ0VFZGl0b3InLFxuICAgICAgJ1RyYW5zbGF0YWJsZUlucHV0JyxcbiAgICBdLFxuICApO1xuXG4gIGNvbnN0IHRyYW5zbGF0b3JJbnB1dCA9IHdpbmRvdy5wcmVzdGFzaG9wLmluc3RhbmNlLnRyYW5zbGF0YWJsZUlucHV0O1xuICBuZXcgQ2hvaWNlVGFibGUoKTtcbiAgbmV3IFRleHRXaXRoUmVjb21tZW5kZWRMZW5ndGhDb3VudGVyKCk7XG5cbiAgdGV4dFRvTGlua1Jld3JpdGVDb3BpZXIoe1xuICAgIHNvdXJjZUVsZW1lbnRTZWxlY3RvcjogJ2lucHV0W25hbWVePVwiY2F0ZWdvcnlbbmFtZV1cIl0nLFxuICAgIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtbGVuICovXG4gICAgZGVzdGluYXRpb25FbGVtZW50U2VsZWN0b3I6IGAke3RyYW5zbGF0b3JJbnB1dC5sb2NhbGVJbnB1dFNlbGVjdG9yfTpub3QoLmQtbm9uZSkgaW5wdXRbbmFtZV49XCJjYXRlZ29yeVtsaW5rX3Jld3JpdGVdXCJdYCxcbiAgfSk7XG5cbiAgdGV4dFRvTGlua1Jld3JpdGVDb3BpZXIoe1xuICAgIHNvdXJjZUVsZW1lbnRTZWxlY3RvcjogJ2lucHV0W25hbWVePVwicm9vdF9jYXRlZ29yeVtuYW1lXVwiXScsXG4gICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1sZW4gKi9cbiAgICBkZXN0aW5hdGlvbkVsZW1lbnRTZWxlY3RvcjogYCR7dHJhbnNsYXRvcklucHV0LmxvY2FsZUlucHV0U2VsZWN0b3J9Om5vdCguZC1ub25lKSBpbnB1dFtuYW1lXj1cInJvb3RfY2F0ZWdvcnlbbGlua19yZXdyaXRlXVwiXWAsXG4gIH0pO1xuXG4gIG5ldyBTZXJwKFxuICAgIHtcbiAgICAgIGNvbnRhaW5lcjogJyNzZXJwLWFwcCcsXG4gICAgICBkZWZhdWx0VGl0bGU6ICdpbnB1dFtuYW1lXj1cImNhdGVnb3J5W25hbWVdXCJdJyxcbiAgICAgIHdhdGNoZWRUaXRsZTogJ2lucHV0W25hbWVePVwiY2F0ZWdvcnlbbWV0YV90aXRsZV1cIl0nLFxuICAgICAgZGVmYXVsdERlc2NyaXB0aW9uOiAndGV4dGFyZWFbbmFtZV49XCJjYXRlZ29yeVtkZXNjcmlwdGlvbl1cIl0nLFxuICAgICAgd2F0Y2hlZERlc2NyaXB0aW9uOiAndGV4dGFyZWFbbmFtZV49XCJjYXRlZ29yeVttZXRhX2Rlc2NyaXB0aW9uXVwiXScsXG4gICAgICB3YXRjaGVkTWV0YVVybDogJ2lucHV0W25hbWVePVwiY2F0ZWdvcnlbbGlua19yZXdyaXRlXVwiXScsXG4gICAgICBtdWx0aUxhbmd1YWdlSW5wdXQ6IGAke3RyYW5zbGF0b3JJbnB1dC5sb2NhbGVJbnB1dFNlbGVjdG9yfTpub3QoLmQtbm9uZSlgLFxuICAgICAgbXVsdGlMYW5ndWFnZUl0ZW06IHRyYW5zbGF0b3JJbnB1dC5sb2NhbGVJdGVtU2VsZWN0b3IsXG4gICAgfSxcbiAgICAkKCcjc2VycC1hcHAnKS5kYXRhKCdjYXRlZ29yeS11cmwnKSxcbiAgKTtcblxuICBuZXcgRm9ybVN1Ym1pdEJ1dHRvbigpO1xuXG4gIG5ldyB3aW5kb3cucHJlc3Rhc2hvcC5jb21wb25lbnQuVGFnZ2FibGVGaWVsZCh7XG4gICAgdG9rZW5GaWVsZFNlbGVjdG9yOiAnaW5wdXQuanMtdGFnZ2FibGUtZmllbGQnLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIGNyZWF0ZVRva2Vuc09uQmx1cjogdHJ1ZSxcbiAgICB9LFxuICB9KTtcblxuICBuZXcgQ2hvaWNlVHJlZSgnI2NhdGVnb3J5X2lkX3BhcmVudCcpO1xuICBuZXcgQ2hvaWNlVHJlZSgnI2NhdGVnb3J5X3Nob3BfYXNzb2NpYXRpb24nKS5lbmFibGVBdXRvQ2hlY2tDaGlsZHJlbigpO1xuXG4gIG5ldyBDaG9pY2VUcmVlKCcjcm9vdF9jYXRlZ29yeV9pZF9wYXJlbnQnKTtcbiAgbmV3IENob2ljZVRyZWUoJyNyb290X2NhdGVnb3J5X3Nob3BfYXNzb2NpYXRpb24nKS5lbmFibGVBdXRvQ2hlY2tDaGlsZHJlbigpO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9