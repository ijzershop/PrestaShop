<?php

/*
 * This file is part of the Symfony package.
 *
 * (c) Fabien Potencier <fabien@symfony.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace MolliePrefix\Symfony\Component\ExpressionLanguage\Tests\Node;

use MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ArrayNode;
use MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode;
use MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode;
class BinaryNodeTest extends \MolliePrefix\Symfony\Component\ExpressionLanguage\Tests\Node\AbstractNodeTest
{
    public function getEvaluateData()
    {
        $array = new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ArrayNode();
        $array->addElement(new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'));
        $array->addElement(new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('b'));
        return [[\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('or', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('||', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('and', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('&&', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], [0, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('&', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], [6, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('|', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], [6, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('^', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('===', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true))], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('!==', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true))], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('==', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('!=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], [-1, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('-', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [3, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('+', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [4, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('*', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [1, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('/', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [1, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('%', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(5), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], [25, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('**', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(5), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['ab', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('~', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('b'))], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), $array)], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('c'), $array)], [\true, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('not in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('c'), $array)], [\false, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('not in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), $array)], [[1, 2, 3], new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('..', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(3))], [1, new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('matches', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('abc'), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('/^[a-z]+$/'))]];
    }
    public function getCompileData()
    {
        $array = new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ArrayNode();
        $array->addElement(new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'));
        $array->addElement(new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('b'));
        return [['(true || false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('or', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(true || false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('||', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(true && false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('and', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(true && false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('&&', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(2 & 4)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('&', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], ['(2 | 4)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('|', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], ['(2 ^ 4)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('^', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], ['(1 < 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 <= 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 <= 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(1 > 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 >= 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 >= 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(true === true)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('===', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true))], ['(true !== true)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('!==', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true))], ['(2 == 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('==', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(2 != 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('!=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(1 - 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('-', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 + 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('+', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(2 * 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('*', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(2 / 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('/', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(5 % 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('%', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(5), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['pow(5, 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('**', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(5), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['("a" . "b")', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('~', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('b'))], ['in_array("a", [0 => "a", 1 => "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), $array)], ['in_array("c", [0 => "a", 1 => "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('c'), $array)], ['!in_array("c", [0 => "a", 1 => "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('not in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('c'), $array)], ['!in_array("a", [0 => "a", 1 => "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('not in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), $array)], ['range(1, 3)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('..', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(3))], ['preg_match("/^[a-z]+/i\\$/", "abc")', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('matches', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('abc'), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('/^[a-z]+/i$/'))]];
    }
    public function getDumpData()
    {
        $array = new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ArrayNode();
        $array->addElement(new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'));
        $array->addElement(new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('b'));
        return [['(true or false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('or', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(true || false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('||', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(true and false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('and', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(true && false)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('&&', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\false))], ['(2 & 4)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('&', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], ['(2 | 4)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('|', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], ['(2 ^ 4)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('^', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(4))], ['(1 < 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 <= 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 <= 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('<=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(1 > 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 >= 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 >= 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('>=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(true === true)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('===', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true))], ['(true !== true)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('!==', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(\true))], ['(2 == 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('==', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(2 != 1)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('!=', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1))], ['(1 - 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('-', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(1 + 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('+', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(2 * 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('*', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(2 / 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('/', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(5 % 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('%', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(5), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['(5 ** 2)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('**', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(5), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(2))], ['("a" ~ "b")', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('~', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('b'))], ['("a" in ["a", "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), $array)], ['("c" in ["a", "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('c'), $array)], ['("c" not in ["a", "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('not in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('c'), $array)], ['("a" not in ["a", "b"])', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('not in', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('a'), $array)], ['(1 .. 3)', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('..', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(1), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode(3))], ['("abc" matches "/^[a-z]+/i$/")', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\BinaryNode('matches', new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('abc'), new \MolliePrefix\Symfony\Component\ExpressionLanguage\Node\ConstantNode('/^[a-z]+/i$/'))]];
    }
}
