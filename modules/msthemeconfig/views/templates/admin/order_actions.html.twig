{# **
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author    PrestaShop SA and Contributors <contact@prestashop.com>
 * @copyright Since 2007 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 * #}

<div class="col-12 pl-0 pr-0 navbar">

  {{ form_start(updateOrderStatusActionBarForm, {
    'action': path('admin_orders_update_status', {'orderId': orderForViewing.id}),
    'attr': {
      'id': 'update_order_status_action_form',
      'class': 'form-inline'
    }
  }) }}

  <div class="input-group">
    {% set backgroundColor = '#ffffff' %}
    {% set isBright = true %}
    {% for choice in updateOrderStatusActionBarForm.new_order_status_id.vars.choices %}
      {% if choice.value == updateOrderStatusActionBarForm.new_order_status_id.vars.data %}
        {% set backgroundColor = choice.attr['data-background-color'] %}
        {% set isBright = choice.attr['data-is-bright'] %}
      {% endif %}
    {% endfor %}
    {#    <span class="select-status{% if isBright %} is-bright{% endif %}" id="update_order_status_action_input_wrapper" style="background-color:{{ backgroundColor }};"> #}
    {{ form_widget(updateOrderStatusActionBarForm.new_order_status_id, {
      'attr': {
        'class': 'select-status-colored form-control',
        'style': 'border-color: {{ backgroundColor }}',
        'data-width': '300px'
      },
      'id': 'update_order_status_action_input',
    }) }}
    {#    </span> #}
    <div class="input-group-append">
      <button class="btn btn-action"
              id="update_order_status_action_btn"
              disabled
              data-order-status-id="{{ orderForViewing.history.currentOrderStatusId }}"
      >
        {{ 'Update status'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    </div>
  </div>

  <div class="d-none">
    {{ form_rest(updateOrderStatusActionBarForm) }}
  </div>
  {{ form_end(updateOrderStatusActionBarForm) }}






  {# Pakbon bericht #}
  <form class="order-actions-shipping-status">
    <div class="input-group">
      <button type="button" id="showDeliverySlipMessageBtn" data-order-id="{{ order.id }}" data-toggle="modal"
              data-target="#showDeliverySlipMessageModal"
              class="btn btn-action">
        <i class="material-icons">local_shipping</i>
        {{ 'Pakbon Bericht'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    </div>
  </form>



  {# HerVerzend Order Bevestiging Mail #}
  <form class="order-actions-resend-order-conf">
    <div class="input-group">
      <button type="button" id="resendOrderMessageBtn" data-order-id="{{ order.id }}" class="btn btn-action">
        <i class="material-icons">send</i>
        {{ 'Mail bevestiging'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    </div>
  </form>


  {# Start add buttons to order view #}

  {# Start desired delivery date #}
  <form class="order-action-desired-delivery-date mt-3">
    <div class="input-group">
      <input class="form-control" type="date" min="{{ "now"|date("Y/m/d") }}" name="desired_delivery_date"
             id="desired_delivery_date"
             value="{% if order.desired_delivery_date == '0000-00-00' %}{{ "now"|date("Y/m/d") }}{% else %}{{ order.desired_delivery_date }}{% endif %}"
             aria-describedby="desiredDeliveryHelpBlock">
      <div class="input-group-append">
        <button type="button" id="clearDesiredDeliveryDate" class="btn btn-primary">Clear</button>
        <button type="button" id="submitDesiredDeliveryDate" class="btn btn-success">Submit</button>
      </div>
    </div>
    <small id="desiredDeliveryHelpBlock" class="form-text text-muted">Gewenste leverdatum voor bestelling</small>
  </form>

  {# Migrate Customer Button #}
  <form class="order-actions-migrate-to-customer mt-3" id="migrateToCustomer">
    <div class="input-group ui-widget">
      <input type="text" class="form-control" style="width:150px;" id="selectCustomerToMigrate"
             placeholder="Selecteer een klant" aria-describedby="switchOrderToUserHelpBlock">
      <div class="input-group-append">
        <button type="button" id="migrateOrder" class="btn btn-secondary btn-primary"><i class="material-icons">transfer_within_a_station</i>
        </button>
      </div>
    </div>
    <small id="switchOrderToUserHelpBlock" class="form-text text-muted">Koppel bestelling aan andere gebruiker</small>
  </form>


</div>

<div class="col-12 pl-0 pr-0 navbar">
  {% if orderForViewing.documents.canGenerateInvoice %}
    <form class="order-actions-invoice">
      <div class="input-group">
        <a href="{{ path('admin_orders_generate_invoice_pdf', {'orderId': orderForViewing.id}) }}"
           class="btn btn-action">
          <i class="material-icons">receipt</i>
          {{ 'View invoice'|trans({}, 'Admin.Orderscustomers.Feature') }}
        </a>
      </div>
    </form>
  {% endif %}

  <form class="order-actions-print">
    <div class="input-group">
      <button type="button" class="btn btn-action js-print-order-view-page">
        <i class="material-icons" aria-hidden="true">print</i>
        {{ 'Print order'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    </div>
  </form>

  {% if orderForViewing.documents.canGenerateDeliverySlip %}
    <form class="order-actions-delivery">
      <div class="input-group">
        <a href="{{ path('admin_orders_generate_delivery_slip_pdf', {'orderId': orderForViewing.id}) }}"
           class="btn btn-action">
          <i class="material-icons">local_shipping</i>
          {{ 'View delivery slip'|trans({}, 'Admin.Orderscustomers.Feature') }}
        </a>
      </div>
    </form>
  {% endif %}


  {# Shipping Status Button #}
  <form class="order-actions-shipping-status">
    <div class="input-group">
      <button type="button" id="showShippingStatusBtn" data-history="{{ history|json_encode }}"
              data-order-reference="{{ orderForViewing.reference }}" data-toggle="modal"
              data-target="#showShippingStatusModal"
              class="btn btn-action">
        <i class="material-icons">local_shipping</i>
        {{ 'Verzend Status'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    </div>
  </form>

  {% include '@PrestaShop/Admin/Sell/Order/Order/Blocks/View/extra_order_button_actions.html.twig' %}

  {% if merchandiseReturnEnabled %}
    {% if orderForViewing.isDelivered() %}
      <button class="btn-secondary btn btn-action return-product-display"
              type="button"{% if not orderForViewing.isRefundable() %} disabled{% endif %}>
        <i class="material-icons">swap_horiz</i>
        {{ 'Return products'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    {% elseif orderForViewing.hasBeenPaid() or orderForViewing.hasPayments() %}
      <button class="btn-secondary btn btn-action standard-refund-display"
              type="button"{% if not orderForViewing.isRefundable() %} disabled{% endif %}>
        <i class="material-icons">swap_horiz</i>
        {{ 'Standard refund'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    {% else %}
      <button class="btn-secondary btn btn-action cancel-product-display" type="button">
        {{ 'Cancel products'|trans({}, 'Admin.Orderscustomers.Feature') }}
      </button>
    {% endif %}
  {% endif %}

  {% if orderForViewing.hasBeenPaid() or orderForViewing.hasPayments() %}
    <button class="btn-secondary btn btn-action partial-refund-display"
            type="button"{% if not orderForViewing.isRefundable() %} disabled{% endif %}>
      <i class="material-icons">swap_horiz</i>
      {{ 'Partial refund'|trans({}, 'Admin.Orderscustomers.Feature') }}
    </button>
  {% endif %}

  {% include '@Modules/msthemeconfig/views/templates/admin/order_navigation.html.twig' %}

</div>


{# End add buttons to order view #}


{#  ShippingStatusModal Start  #}
<div class="modal fade" id="showShippingStatus" tabindex="-1" role="dialog" aria-labelledby="showShippingStatus"
     aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="loading-icon" style="display:none;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Sluiten</button>
      </div>
    </div>
  </div>
</div>
{#  ShippingStatusModal End  #}


{#  DeliverySlipMessageModal Start  #}
<div class="modal fade" id="showDeliverySlipMessageModal" tabindex="-1" role="dialog"
     aria-labelledby="showDeliverySlipMessage" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header"><h4>Pakbon Bericht</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form id="delivery-slip-message-form">
        <div class="modal-body">
        </div>
      </form>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Sluiten</button>
        <button type="button" id="save-delivery-message-btn" class="btn btn-success">Opslaan</button>
      </div>
    </div>
  </div>
</div>
{#  DeliverySlipMessageModal End  #}
{% block javascripts %}
  <script type="text/javascript">
    $(document).ready(function () {

      $('#resendOrderMessageBtn').on('click', function (event) {
        event.preventDefault();
        $.ajax({
          type: 'GET',
          url: 'index.php?ajax=1&controller=AdminOrders&action=resendOrderMessage&token=' + token,
          data: {id_order: {{ orderForViewing.id }}},
          success: function (r) {
            r = JSON.parse(r);
            if (r.success) {
              $.growl({title: "Order bevestiging opnieuw verzonden naar klant!", message: r.msg});
              window.location.reload(true);
            } else {
              $.growl.error({title: "Er ging wat mis bij het opnieuw verzenden van de order bevestiging!", message: r.msg});
            }
          }
        });
      });


      $('#migrateOrder').on('click', function (event) {
        event.preventDefault();
        var customerEmail = $('#selectCustomerToMigrate').val().split('#');
console.log(customerEmail,$('#selectCustomerToMigrate').val())
        var postdata = {
          customer_email: customerEmail[0],
          customer: customerEmail[1],
          order: {{ orderForViewing.id }}
        };
        $.ajax({
          type: 'GET',
          url: 'index.php?ajax=1&controller=AdminOrders&action=migrateOrderToCustomer&token=' + token,
          data: postdata,
          success: function (r) {
            r = JSON.parse(r);
            if (r.success) {
              $.growl({title: "Geslaagd!", message: r.msg});
              window.location.reload(true);
            } else {
              $.growl.error({title: "Fout!", message: r.msg});
            }
          }
        });
      });


      $('#submitDesiredDeliveryDate').on('click', function (event) {
        event.preventDefault();
        var date = $('#desired_delivery_date').val();
        $.ajax({
          type: 'GET',
          url: 'index.php?ajax=1&controller=AdminOrders&action=setDesiredDeliveryDate&token=' + token,
          data: {date: date, id_order: {{ orderForViewing.id }}},
          success: function (r) {
            r = JSON.parse(r);
            if (r.success) {
              $.growl({title: "Gewenste leverdatum ingesteld!", message: r.msg});
              window.location.reload(true);
            } else {
              $.growl.error({title: "Fout bij instellen gewenste leverdatum!", message: r.msg});
            }
          }
        });
      });

      $('#clearDesiredDeliveryDate').on('click', function (event) {
        event.preventDefault();
        $('#desired_delivery_date').val(null);
        $.ajax({
          type: 'GET',
          url: 'index.php?ajax=1&controller=AdminOrders&action=setDesiredDeliveryDate&token=' + token,
          data: {date: null, id_order: {{ orderForViewing.id }}},
          success: function (r) {
            r = JSON.parse(r);
            if (r.success) {
              $.growl({
                title: "Gewenste leverdatum gewijzigd!",
                message: 'Leverdatum is geleegd, deze word niet meer op de pakbon getoond'
              });
              window.location.reload(true);
            } else {
              $.growl.error({title: "Fout bij legen van leverdatum!", message: r.msg});
            }
          }
        });
      });


      $('#showShippingStatusBtn').on('click', function (event) {
        event.preventDefault();
        $('#showShippingStatus').modal('show');
        $('#showShippingStatus .loading-icon').show();
        var ref = $(this).attr('data-order-reference');
        $.ajax({
          url: '/index.php?fc=module&module=msthemeconfig&controller=ajax&id_lang=1',
          type: 'GET',
          data: {
            reference: ref,
            method: 'orderstatus',
            ajax: true,
            render_template: true
          },
        }).done((e) => {
          $('#showShippingStatus .modal-body').html(e);

        });
      });


      $('#showDeliverySlipMessageBtn').on('click', function (event) {
        event.preventDefault();
        $('#showDeliverySlipMessageModal').modal('show');
        var ref = $(this).attr('data-order-id');
        $.ajax({
          url: '/index.php?fc=module&module=msthemeconfig&controller=ajax&id_lang=1',
          type: 'GET',
          data: {
            id: ref,
            method: 'delivery_message',
            ajax: true,
            render_template: true
          },
        }).done((e) => {
          $('#showDeliverySlipMessageModal .modal-body').html(e);

        });
      });


      $('#save-delivery-message-btn').on('click', function (event) {
        event.preventDefault();
        let orderId = $('form#delivery-slip-message-form [name="id_order"]').val();
        let deliverySlipMessage = $('form#delivery-slip-message-form [name="delivery_slip_message"]').val();
        let idDeliverySlipMessage = $('form#delivery-slip-message-form [name="id_message"]').val();
        let idCustomer = $('form#delivery-slip-message-form [name="id_customer"]').val();
        let idCart = $('form#delivery-slip-message-form [name="id_cart"]').val();

        let postdata = {
          id_order: orderId,
          id_message: idDeliverySlipMessage,
          message: deliverySlipMessage,
          customer: idCustomer,
          cart: idCart,
          ajax: true,
          method: 'save_delivery_message'
        };
        $.ajax({
          type: 'GET',
          url: '/index.php?fc=module&module=msthemeconfig&controller=ajax&id_lang=1',
          data: postdata,
          success: function (r) {
            r = JSON.parse(r);
            console.log(r)

            if (r.success) {
              $.growl({title: "Geslaagd!", message: r.msg});
              window.location.reload(true);
            } else {
              $.growl.error({title: "Fout!", message: r.msg});
            }
          }
        });
      });


    });
  </script>
{% endblock %}
