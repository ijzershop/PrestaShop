{#**
  * 2007-2018 PrestaShop
  *
  * NOTICE OF LICENSE
  *
  * This source file is subject to the Open Software License (OSL 3.0)
  * that is bundled with this package in the file LICENSE.txt.
  * It is also available through the world-wide-web at this URL:
  * https://opensource.org/licenses/OSL-3.0
  * If you did not receive a copy of the license and are unable to
  * obtain it through the world-wide-web, please send an email
  * to license@prestashop.com so we can send you a copy immediately.
  *
  * DISCLAIMER
  *
  * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
  * versions in the future. If you wish to customize PrestaShop for your
  * needs please refer to http://www.prestashop.com for more information.
  *
  * @author    PrestaShop SA <contact@prestashop.com>
  * @copyright 2007-2018 PrestaShop SA
  * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
  * International Registered Trademark & Property of PrestaShop SA
  *#}
{% extends '@PrestaShop/Admin/layout.html.twig' %}
{% trans_default_domain "Admin.Design.Feature" %}

{% block content %}
  <div class="container">
    {{ form_start(form, {'attr' : {'class': 'form'}, 'action': path('admin_order_delivery_slip_pdf') }) }}
      {% if selectedModule %}
		    <input type="hidden" name="show_modules" value="{{ selectedModule }}" />
	    {% endif %}

      <div class="row">
        <div class="card">
          <div class="card-header">
		        <h3>
			        <i class="material-icons">file_copy</i>
              {{ 'Transplant a module' | trans }}
		        </h3>
          </div>

          <div class="card-block">
            <div class="form-group">
              <label class="form-control-label">{{ 'Module'|trans({}, 'Admin.Global') }}</label>
              {{ form_errors(form.positions.module) }}
              {{ form_widget(form.positions.module) }}
            </div>

            <div class="form-group">
              <label class="form-control-label">{{ 'Transplant to'|trans }}</label>
              {{ form_errors(form.positions.transplant_to) }}
              {{ form_widget(form.positions.transplant_to) }}
            </div>

            <div class="form-group">
              <label class="form-control-label">{{ 'Exceptions'|trans }}</label>

              <p>
                {{ 'Please specify the files for which you do not want the module to be displayed.' | trans({}, 'Admin.Design.Help') }}<br />
						    {{ 'Please input each filename, separated by a comma (",").' | trans({}, 'Admin.Design.Help') }}<br />
						    {{ 'You can also click the filename in the list below, and even make a multiple selection by keeping the Ctrl key pressed while clicking, or choose a whole range of filename by keeping the Shift key pressed while clicking.' | trans({}, 'Admin.Design.Help') }}
              </p>

              {{ form_errors(form.positions.exceptions) }}
              {{ form_widget(form.positions.exceptions) }}
            </div>
            {{ form_rest(form) }}
          </div>

          <div class="card-footer">
            <div class="d-flex justify-content-end">
              <button class="btn btn-primary">{{ 'Save'|trans({}, 'Admin.Actions') }}</button>
            </div>
          </div>
				  <input type="hidden" name="id_module" value="{$id_module}" />
				  <input type="hidden" name="id_hook" value="{$id_hook}" />
				  <input type="hidden" name="new_hook" id="new_hook" value="{$id_hook}" />

	      </div>
      </div>
    {{ form_end(form) }}
  </div>
{% endblock %}

{% block javascripts %}
  <script type="text/javascript">
	  //<![CDATA
	  function position_exception_textchange() {
		  // TODO : Add & Remove automatically the "custom pages" in the "em_list_x"
		  var obj = $(this);
		  var shopID = obj.attr('id').replace(/\D/g, '');
		  var list = obj.closest('form').find('#em_list_' + shopID);
		  var values = obj.val().split(',');
		  var len = values.length;

		  list.find('option').prop('selected', false);
		  for (var i = 0; i < len; i++) {
			  list.find('option[value="' + $.trim(values[i]) + '"]').prop('selected', true);
      }
	  }

	  function position_exception_listchange() {
		  var obj = $(this);
		  var shopID = obj.attr('id').replace(/\D/g, '');
		  var val = obj.val();
		  var str = '';
		  if (val)
			  str = val.join(', ');
		  obj.closest('form').find('#em_text_' + shopID).val(str);
	  }

	  $(document).ready(function(){
		  $('form[id="hook_module_form"] input[id^="em_text_"]').each(function(){
			  $(this).change(position_exception_textchange).change();
		  });
		  $('form[id="hook_module_form"] select[id^="em_list_"]').each(function(){
			  $(this).change(position_exception_listchange);
		  });
		  $('select[name=id_hook]').on('change', function() {
			  $('#new_hook').attr('value', $(this).val());
		  });
	  });
	  //]]>
  </script>
  <script src="{{ asset('themes/new-theme/public/improve_design_positions.bundle.js') }}?{{ random() }}"></script>
{% endblock %}
