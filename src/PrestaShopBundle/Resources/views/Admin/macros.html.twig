{#**
 * 2007-2019 PrestaShop and Contributors
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://www.prestashop.com for more information.
 *
 * @author    PrestaShop SA <contact@prestashop.com>
 * @copyright 2007-2019 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 * International Registered Trademark & Property of PrestaShop SA
 *#}
{% macro form_label_tooltip(name, tooltip, placement) %}
    {{ form_label(name, null, {'label_attr': {'tooltip': tooltip, 'tooltip_placement': placement|default('top')}}) }}
{% endmacro %}

{% macro check(variable) %}
  {{ variable is defined and variable|length > 0 ? variable : false }}
{% endmacro %}

{% macro tooltip(text, icon, position) %}
  <span data-toggle="pstooltip" class="label-tooltip" data-original-title="{{ text }}" data-html="true" data-placement="{{ position|default('top') }}">
    <i class="material-icons">{{ icon }}</i>
  </span>
{% endmacro %}

{% macro infotip(text)%}
<div class="alert alert-info" role="alert">
  <p class="alert-text">
    {{ text }}
  </p>
</div>
{% endmacro %}

{% macro warningtip(text)%}
<div class="alert alert-warning" role="alert">
  <p class="alert-text">
    {{ text }}
  </p>
</div>
{% endmacro %}

{% macro label_with_help(label, help, class = '') %}
<label class="form-control-label {{ class }}">
  {{ label }}
  <span
    class="help-box"
    data-toggle="popover"
    data-content="{{ help }}">
  </span>
</label>
<p class="sr-only">{{ help }}</p>
{% endmacro %}

{# Table column headers with sorting indicators #}
{% macro sortable_column_header(title, sortColumnName, orderBy, sortOrder) %}
  {% set sortOrder, orderBy = sortOrder|default(''), orderBy|default('') %}
    <div
      class="ps-sortable-column"
      data-sort-col-name="{{ sortColumnName }}"
      {% if orderBy == sortColumnName %}
        data-sort-is-current="true"
        data-sort-direction="{{ sortOrder == 'desc' ? 'desc' : 'asc' }}"
      {% endif %}
    >
      <span role="columnheader">{{ title }}</span>
      <span role="button" class="ps-sort" aria-label="{{ 'Sort by'|trans({}, 'Admin.Actions') }}"></span>
    </div>
  </th>
{% endmacro %}

{# Show link to import file sample #}
{% macro import_file_sample(label, filename) %}
    <a class="list-group-item list-group-item-action" href="{{ path('admin_import_sample_download', {'sampleName': filename}) }}">
        {{ label|trans({}, 'Admin.Advparameters.Feature') }}
    </a>
{% endmacro %}

{# Show form widget with errors rendered below it #}
{% macro form_widget_with_error(form, vars, extraVars) %}
  {% set vars = vars|default({}) %}
  {% set extraVars = extraVars|default({}) %}

  {{ form_widget(form, vars) }}

  {% if extraVars.help is defined %}
    <small class="form-text">{{ extraVars.help }}</small>
  {% endif %}

  {% set attr = vars.attr|default({}) %}
  {% set errors = [] %}

  {% if not form.vars.valid  %}
    {% for parentError in form.vars.errors %}
      {% set errors = errors|merge([parentError.message]) %}
    {% endfor %}

    {% for child in form.children %}
      {% for error in child.vars.errors %}
        {% set errors = errors|merge([error.message]) %}
      {% endfor %}
    {% endfor %}
  {% endif %}

  {% set attr = attr|merge({'class': (attr.class is defined ? attr.class : '')} ) %}
  {% set vars = vars|merge({'attr': attr}) %}

  {{ form_widget(form, vars) }}
  {% if errors|length > 0 %}

    {# form form types which has locales and there are more then 1 error , additional errors are displaying inside popup #}
    {% set errorPopover = null %}
    {% if form.vars.locales is defined and
          form.vars.locales is not null and
          form.vars.locales|length > 1 and
          errors|length > 1
    %}
      {% set popoverErrors = errors|slice(1) %}
      {% set errors = [errors|first] %}
      {% set popoverContainer = 'locale-input-error-popover-container-'~form.vars.id %}

      <div class="{{ popoverContainer }}"></div>

      {% set popoverErrorContent %}
        <ul class="popover-error-list">
          {% for popoverError in popoverErrors %}
              <li>
                <span class="invalid-feedback">{{ popoverError }}</span>
              </li>
          {% endfor %}
        </ul>
      {% endset %}

      {% set errorPopover %}
        <span
          class="js-locale-input-error-popover-trigger"
          data-toggle="locale-input-popover"
          data-placement="top"
          data-html="true"
          data-template='<div class="popover js-locale-input-error-popover" role="tooltip"><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
          data-content='{{ popoverErrorContent }}'
          data-trigger="hover"
          data-container=".{{ popoverContainer }}"
        >
          {#todo: ask about translation domain#}
          <u>+ {{ '%count% more'|trans({'%count%': popoverErrors|length}, 'Admin.Actions') }}</u>
        </span>
      {% endset %}

    {% endif %}

    <div class="invalid-feedback-container">

      {% for error in errors %}
        <div class="invalid-feedback">
          {{ error }} {{ (errorPopover is not null) ? errorPopover : '' }}
        </div>
      {% endfor %}
    </div>
  {% endif %}
{% endmacro %}

 {#
  Helper function to render most common structure for single input
  @param form - form view to render
  @param vars - custom vars that are passed to form_widget
  @param form - parameters that are not related to form_widget, but are needed for input (label, help text & etc.)
 #}
{% macro form_group_row(form, vars, extraVars) %}
  {% import '@PrestaShop/Admin/macros.html.twig' as self %}

  {% set class = extraVars.class|default('') %}

  <div class="form-group row {{ class }}">
    {% set extraVars = extraVars|default({}) %}

    {% if extraVars.label is defined %}
      <label for="{{ form.vars.id }}" class="form-control-label">
        {% if form.vars.required %}
          <span class="text-danger">*</span>
        {% endif %}
        {{ extraVars.label }}
      </label>
    {% endif %}

    <div class="col-sm">
      {{ self.form_widget_with_error(form, vars, extraVars) }}
    </div>
  </div>
{% endmacro %}
